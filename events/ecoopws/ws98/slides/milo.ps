%!PS-Adobe-3.0
%%BoundingBox: (atend)
%%Pages: (atend)
%%PageOrder: (atend)
%%DocumentFonts: (atend)
%%DocumentNeedsFonts: (atend)
%%DocumentSuppliedFonts: (atend)
%%Creator: Frame 5.5
%%DocumentData: Clean7Bit
%%EndComments
%%BeginProlog
%
% Frame ps_prolog 5.5, for use with Adobe Unix Frame 5.5 products
%
% This ps_prolog file is Copyright (c) 1986-1996 Adobe Systems, Incoporated.
% All rights reserved.  This ps_prolog file may be freely copied and 
% distributed in conjunction with documents created using FrameMaker, 
% FrameMaker+SGML, FrameReader, and FrameViewer as long as this 
% copyright notice is preserved.
/FMDocSave save def
%
% FrameMaker users specify the proper paper size for each print job in the
% "Print" dialog's "Printer Paper Size" "Width" and "Height~ fields.  If the
% printer that the PS file is sent to does not support the requested paper
% size, or if there is no paper tray of the proper size currently installed, 
% then the job will not be printed.  The following flag, if set to true, will
% cause the job to print on the default paper in such cases.
/FMAllowPaperSizeMismatch            false def
%
% Frame products normally print colors as their true color on a color printer
% or as shades of gray, based on luminance, on a black-and white printer. The
% following flag, if set to true, forces all non-white colors to print as pure
% black. This has no effect on bitmap images.
/FMPrintAllColorsAsBlack             false def
%
% Frame products can either set their own line screens or use a printer's 
% default settings. Three flags below control this separately for no 
% separations, spot separations and process separations. If a flag
% is true, then the default printer settings will not be changed. If it is
% false, Frame products will use their own settings from a table based on
% the printer's resolution.
/FMUseDefaultNoSeparationScreen      true  def
/FMUseDefaultSpotSeparationScreen    true  def
/FMUseDefaultProcessSeparationScreen false def
%
% For any given PostScript printer resolution, Frame products have two sets of 
% screen angles and frequencies for printing process separations, which are 
% recomended by Adobe. The following variable chooses the higher frequencies
% when set to true or the lower frequencies when set to false. This is only
% effective if the appropriate FMUseDefault...SeparationScreen flag is false.
/FMUseHighFrequencyScreens true def
%
% The following is a set of predefined optimal frequencies and angles for various
% common dpi settings. This is taken from "Advances in Color Separation Using
% PostScript Software Technology," from Adobe Systems (3/13/89 P.N. LPS 0043)
% and corrolated with information which is in various PPD (4.0) files.
%
% The "dpiranges" figure is the minimum dots per inch device resolution which
% can support this setting. The "low" and "high" values are controlled by the
% setting of the FMUseHighFrequencyScreens flag above. The "TDot" flags control
% the use of the "Yellow Triple Dot" feature whereby the frequency id divided by
% three, but the dot function is "trippled" giving a block of 3x3 dots per cell.
%
% PatFreq is a compromise pattern frequency for ps Level 2 printers which is close
% to the ideal WYSIWYG pattern frequency of 9 repetitions/inch but does not beat
% (too badly) against the screen frequencies of any separations for that DPI.
/dpiranges   [  2540    2400    1693     1270    1200     635      600      0      ] def
/CMLowFreqs  [ 100.402  94.8683 89.2289 100.402  94.8683  66.9349  63.2456 47.4342 ] def
/YLowFreqs   [  95.25   90.0    84.65    95.25   90.0     70.5556  66.6667 50.0    ] def
/KLowFreqs   [  89.8026 84.8528 79.8088  89.8026 84.8528  74.8355  70.7107 53.033  ] def
/CLowAngles  [  71.5651 71.5651 71.5651 71.5651  71.5651  71.5651  71.5651 71.5651 ] def
/MLowAngles  [  18.4349 18.4349 18.4349 18.4349  18.4349  18.4349  18.4349 18.4349 ] def
/YLowTDot    [  true    true    false    true    true     false    false   false   ] def
/CMHighFreqs [ 133.87  126.491 133.843  108.503 102.523  100.402   94.8683 63.2456 ] def
/YHighFreqs  [ 127.0   120.0   126.975  115.455 109.091   95.25    90.0    60.0    ] def
/KHighFreqs  [ 119.737 113.137 119.713  128.289 121.218   89.8026  84.8528 63.6395 ] def
/CHighAngles [  71.5651 71.5651 71.5651  70.0169 70.0169  71.5651  71.5651 71.5651 ] def
/MHighAngles [  18.4349 18.4349 18.4349  19.9831 19.9831  18.4349  18.4349 18.4349 ] def
/YHighTDot   [  false   false   true     false   false    true     true    false   ] def
/PatFreq     [	10.5833 10.0     9.4055  10.5833 10.0	  10.5833  10.0	   9.375   ] def
%
% PostScript Level 2 printers contain an "Accurate Screens" feature which can
% improve process separation rendering at the expense of compute time. This 
% flag is ignored by PostScript Level 1 printers.
/FMUseAcccurateScreens true def
%
% The following PostScript procedure defines the spot function that Frame
% products will use for process separations. You may un-comment-out one of
% the alternative functions below, or use your own.
%
% Dot function
/FMSpotFunction {abs exch abs 2 copy add 1 gt 
		{1 sub dup mul exch 1 sub dup mul add 1 sub }
		{dup mul exch dup mul add 1 exch sub }ifelse } def
%
% Line function
% /FMSpotFunction { pop } def
%
% Elipse function
% /FMSpotFunction { dup 5 mul 8 div mul exch dup mul exch add 
%		sqrt 1 exch sub } def
%
%
/FMversion (5.5) def 
/fMLevel1 /languagelevel where {pop languagelevel} {1} ifelse 2 lt def
/FMPColor
	fMLevel1 {
		false
		/colorimage where {pop pop true} if
	} {
		true
	} ifelse
def
/FrameDict 400 dict def 
systemdict /errordict known not {/errordict 10 dict def
		errordict /rangecheck {stop} put} if
% The readline in PS 23.0 doesn't recognize cr's as nl's on AppleTalk
FrameDict /tmprangecheck errordict /rangecheck get put 
errordict /rangecheck {FrameDict /bug true put} put 
FrameDict /bug false put 
mark 
% Some PS machines read past the CR, so keep the following 3 lines together!
currentfile 5 string readline
00
0000000000
cleartomark 
errordict /rangecheck FrameDict /tmprangecheck get put 
FrameDict /bug get { 
	/readline {
		/gstring exch def
		/gfile exch def
		/gindex 0 def
		{
			gfile read pop 
			dup 10 eq {exit} if 
			dup 13 eq {exit} if 
			gstring exch gindex exch put 
			/gindex gindex 1 add def 
		} loop
		pop 
		gstring 0 gindex getinterval true 
		} bind def
	} if
/FMshowpage /showpage load def
/FMquit /quit load def
/FMFAILURE { 
	2 copy exch = = flush 
	FMshowpage 
	/Helvetica findfont 12 scalefont setfont
	72 200 moveto show
	72 220 moveto show
	FMshowpage 
	FMquit 
	} def 
/FMVERSION {
	FMversion ne {
		(Adobe Frame product version does not match ps_prolog!  Check installation;)
		(also check ~/fminit and ./fminit for old versions) FMFAILURE
		} if
	} def 
/fmConcatProcs
	{
	/proc2 exch cvlit def/proc1 exch cvlit def/newproc proc1 length proc2 length add array def
	newproc 0 proc1 putinterval newproc proc1 length proc2 putinterval newproc cvx
}def
FrameDict begin [
	/ALDsave
	/FMdicttop
	/FMoptop
	/FMpointsize
	/FMsetsize
	/FMsaveobject
	/b
	/bitmapsave
	/blut
	/bpside
	/bs
	/bstring
	/bwidth
	/c
	/cf
	/cs
	/cynu
	/depth
	/edown
	/fh
	/fillvals
	/fw
	/fx
	/fy
	/g
	/gfile
	/gindex
	/grnt
	/gryt
	/gstring
	/height
	/hh
	/i
	/im
	/indx
	/is
	/k
	/kk
	/landscape
	/lb
	/len
	/llx
	/lly
	/m
	/magu
	/manualfeed
	/n
	/offbits
	/onbits
	/organgle
	/orgbangle
	/orgbfreq
	/orgbproc
	/orgbxfer
	/orgfreq
	/orggangle
	/orggfreq
	/orggproc
	/orggxfer
	/orghalftone
	/orgmatrix
	/orgproc
	/orgrangle
	/orgrfreq
	/orgrproc
	/orgrxfer
	/orgxfer
	/pagesave
	/paperheight
	/papersizedict
	/paperwidth
	/pos
	/pwid
	/r
	/rad
	/redt
	/sl
	/str
	/tran
	/u
	/urx
	/ury
	/val
	/width
	/width
	/ws
	/ww
	/x
	/x1
	/x2
	/xindex
	/xpoint
	/xscale
	/xx
	/y
	/y1
	/y2
	/yelu
	/yindex
	/ypoint
	/yscale
	/yy
	/tintGray
] { 0 def } forall
/FmBD {bind def} bind def
systemdict /pdfmark known systemdict /currentdistillerparams known and {
	/fMAcrobat true def
	
	/FmPD /pdfmark load def
	
	
	/FmPT /show load def
	
	
	currentdistillerparams /CoreDistVersion get 2000 ge {
	
		
		/FmPD2 /pdfmark load def
		
		
		
		
		
		/FmPA { mark exch /Dest exch 5 3 roll 
				/View [ /XYZ null 6 -2 roll FmDC exch pop null] /DEST FmPD 
		}FmBD
	} {
		
		/FmPD2 /cleartomark load def
		/FmPA {pop pop pop}FmBD
	} ifelse
} {
	
	/fMAcrobat false def
	/FmPD /cleartomark load def
	/FmPD2 /cleartomark load def
	/FmPT /pop load def
	/FmPA {pop pop pop}FmBD
} ifelse
/FmDC {
	transform fMDefaultMatrix defaultmatrix itransform cvi exch cvi exch
}FmBD
/FmBx {
	dup 3 index lt {3 1 roll exch} if 
	1 index 4 index lt {4 -1 roll 3 1 roll exch 4 1 roll} if
}FmBD
/FMnone 0 def
/FMcyan 1 def
/FMmagenta 2 def
/FMyellow 3 def
/FMblack 4 def
/FMcustom 5 def
/fMNegative false def 
/FrameSepIs FMnone def 
/FrameSepBlack 0 def
/FrameSepYellow 0 def
/FrameSepMagenta 0 def
/FrameSepCyan 0 def
/FrameSepRed 1 def
/FrameSepGreen 1 def
/FrameSepBlue 1 def
/FrameCurGray 1 def
/FrameCurPat null def
/FrameCurColors [ 0 0 0 1 0 0 0 1] def 
/FrameColorEpsilon .001 def	
/eqepsilon {		
	sub dup 0 lt {neg} if
	FrameColorEpsilon le
} bind def
/FrameCmpColorsCMYK { 
	2 copy 0 get exch 0 get eqepsilon {
		2 copy 1 get exch 1 get eqepsilon {
			2 copy 2 get exch 2 get eqepsilon {
				3 get exch 3 get eqepsilon
			} {pop pop false} ifelse
		}{pop pop false} ifelse
	} {pop pop false} ifelse
} bind def
/FrameCmpColorsRGB { 
	2 copy 4 get exch 0 get eqepsilon {
		2 copy 5 get exch 1 get eqepsilon {
			6 get exch 2 get eqepsilon
		}{pop pop false} ifelse
	} {pop pop false} ifelse
} bind def
/RGBtoCMYK { 
	1 exch sub 
	3 1 roll 
	1 exch sub 
	3 1 roll 
	1 exch sub 
	3 1 roll 
	3 copy 
	2 copy 
	le { pop } { exch pop } ifelse 
	2 copy 
	le { pop } { exch pop } ifelse 
	dup dup dup 
	6 1 roll 
	4 1 roll 
	7 1 roll 
	sub 
	6 1 roll 
	sub 
	5 1 roll 
	sub 
	4 1 roll 
} bind def
/CMYKtoRGB { 
	dup dup 4 -1 roll add 						  
	5 1 roll 3 -1 roll add 						  
	4 1 roll add 								  
	1 exch sub dup 0 lt {pop 0} if 3 1 roll 	  
	1 exch sub dup 0 lt {pop 0} if exch 	      
	1 exch sub dup 0 lt {pop 0} if exch	  		  
} bind def
/FrameSepInit {
	1.0 RealSetgray
} bind def
/FrameSetSepColor { 
	/FrameSepBlue exch def
	/FrameSepGreen exch def
	/FrameSepRed exch def
	/FrameSepBlack exch def
	/FrameSepYellow exch def
	/FrameSepMagenta exch def
	/FrameSepCyan exch def
	/FrameSepIs FMcustom def
	setCurrentScreen	
} bind def
/FrameSetCyan {
	/FrameSepBlue 1.0 def
	/FrameSepGreen 1.0 def
	/FrameSepRed 0.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 1.0 def
	/FrameSepIs FMcyan def
	setCurrentScreen	
} bind def
 
/FrameSetMagenta {
	/FrameSepBlue 1.0 def
	/FrameSepGreen 0.0 def
	/FrameSepRed 1.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 1.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMmagenta def
	setCurrentScreen
} bind def
 
/FrameSetYellow {
	/FrameSepBlue 0.0 def
	/FrameSepGreen 1.0 def
	/FrameSepRed 1.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 1.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMyellow def
	setCurrentScreen
} bind def
 
/FrameSetBlack {
	/FrameSepBlue 0.0 def
	/FrameSepGreen 0.0 def
	/FrameSepRed 0.0 def
	/FrameSepBlack 1.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMblack def
	setCurrentScreen
} bind def
 
/FrameNoSep { 
	/FrameSepIs FMnone def
	setCurrentScreen
} bind def
/FrameSetSepColors { 
	FrameDict begin
	[ exch 1 add 1 roll ]
	/FrameSepColors  
	exch def end
	} bind def
/FrameColorInSepListCMYK { 
	FrameSepColors {  
       		exch dup 3 -1 roll 
       		FrameCmpColorsCMYK 
       		{ pop true exit } if
    	} forall 
	dup true ne {pop false} if
	} bind def
/FrameColorInSepListRGB { 
	FrameSepColors {  
       		exch dup 3 -1 roll 
       		FrameCmpColorsRGB 
       		{ pop true exit } if
    	} forall 
	dup true ne {pop false} if
	} bind def
/RealSetgray /setgray load def
/RealSetrgbcolor /setrgbcolor load def
/RealSethsbcolor /sethsbcolor load def
end 
/setgray { 
	FrameDict begin
	FrameSepIs FMnone eq
		{ RealSetgray } 
		{ 
		FrameSepIs FMblack eq 
			{ RealSetgray } 
			{ FrameSepIs FMcustom eq 
			  FrameSepRed 0 eq and
			  FrameSepGreen 0 eq and
			  FrameSepBlue 0 eq and {
			  	RealSetgray
			  } {
				1 RealSetgray pop 
			  } ifelse
			} ifelse
		} ifelse
	end
} bind def
/setrgbcolor { 
	FrameDict begin
	FrameSepIs FMnone eq
	{  RealSetrgbcolor }
	{
		3 copy [ 4 1 roll ] 
		FrameColorInSepListRGB
		{
				FrameSepBlue eq exch 
			 	FrameSepGreen eq and exch 
			 	FrameSepRed eq and
			 	{ 0 } { 1 } ifelse
		}
		{
			FMPColor {
				RealSetrgbcolor
				currentcmykcolor
			} {
				RGBtoCMYK
			} ifelse
			FrameSepIs FMblack eq
			{1.0 exch sub 4 1 roll pop pop pop} {
			FrameSepIs FMyellow eq
			{pop 1.0 exch sub 3 1 roll pop pop} {
			FrameSepIs FMmagenta eq
			{pop pop 1.0 exch sub exch pop } {
			FrameSepIs FMcyan eq
			{pop pop pop 1.0 exch sub } 
			{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
		} ifelse
		RealSetgray
	} 
	ifelse
	end
} bind def
/sethsbcolor {
	FrameDict begin
	FrameSepIs FMnone eq 
	{ RealSethsbcolor } 
	{
		RealSethsbcolor 
		currentrgbcolor  
		setrgbcolor 
	} 
	ifelse
	end
} bind def
FrameDict begin
/setcmykcolor where {
	pop /RealSetcmykcolor /setcmykcolor load def
} {
	/RealSetcmykcolor {
		4 1 roll
		3 { 3 index add 0 max 1 min 1 exch sub 3 1 roll} repeat 
		RealSetrgbcolor pop
	} bind def
} ifelse
userdict /setcmykcolor { 
		FrameDict begin
		FrameSepIs FMnone eq
		{ RealSetcmykcolor } 
		{
			4 copy [ 5 1 roll ]
			FrameColorInSepListCMYK
			{
				FrameSepBlack eq exch 
				FrameSepYellow eq and exch 
				FrameSepMagenta eq and exch 
				FrameSepCyan eq and 
				{ 0 } { 1 } ifelse
			}
			{
				FrameSepIs FMblack eq
				{1.0 exch sub 4 1 roll pop pop pop} {
				FrameSepIs FMyellow eq
				{pop 1.0 exch sub 3 1 roll pop pop} {
				FrameSepIs FMmagenta eq
				{pop pop 1.0 exch sub exch pop } {
				FrameSepIs FMcyan eq
				{pop pop pop 1.0 exch sub } 
				{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
			} ifelse
			RealSetgray
		}
		ifelse
		end
	} bind put
fMLevel1 { 
	
	
	
	/patScreenDict 7 dict dup begin
		<0f1e3c78f0e1c387> [ 45  { pop } {exch pop} 		.5   2 sqrt] FmBD
		<0f87c3e1f0783c1e> [ 135 { pop } {exch pop}			.5   2 sqrt] FmBD
		<cccccccccccccccc> [ 0   { pop } dup				.5   2	   ] FmBD
		<ffff0000ffff0000> [ 90  { pop } dup				.5   2	   ] FmBD
		<8142241818244281> [ 45  { 2 copy lt {exch} if pop}	dup .75  2 sqrt] FmBD
		<03060c183060c081> [ 45  { pop } {exch pop}			.875 2 sqrt] FmBD
		<8040201008040201> [ 135 { pop } {exch pop}			.875 2 sqrt] FmBD
	end def
} { 
	
	/patProcDict 5 dict dup begin
		<0f1e3c78f0e1c387> { 3 setlinewidth -1 -1 moveto 9 9 lineto stroke 
											4 -4 moveto 12 4 lineto stroke
											-4 4 moveto 4 12 lineto stroke} bind def
		<0f87c3e1f0783c1e> { 3 setlinewidth -1 9 moveto 9 -1 lineto stroke 
											-4 4 moveto 4 -4 lineto stroke
											4 12 moveto 12 4 lineto stroke} bind def
		<8142241818244281> { 1 setlinewidth -1 9 moveto 9 -1 lineto stroke
											-1 -1 moveto 9 9 lineto stroke } bind def
		<03060c183060c081> { 1 setlinewidth -1 -1 moveto 9 9 lineto stroke 
											4 -4 moveto 12 4 lineto stroke
											-4 4 moveto 4 12 lineto stroke} bind def
		<8040201008040201> { 1 setlinewidth -1 9 moveto 9 -1 lineto stroke 
											-4 4 moveto 4 -4 lineto stroke
											4 12 moveto 12 4 lineto stroke} bind def
	end def
	/patDict 15 dict dup begin
		/PatternType 1 def		
		/PaintType 2 def		
		/TilingType 3 def		
		/BBox [ 0 0 8 8 ] def 	
		/XStep 8 def			
		/YStep 8 def			
		/PaintProc {
			begin
			patProcDict bstring known {
				patProcDict bstring get exec
			} {
				8 8 true [1 0 0 -1 0 8] bstring imagemask
			} ifelse
			end
		} bind def
	end def
} ifelse
/tintCMYK {
	1 tintGray sub FrameCurColors 0 4 getinterval aload pop 	
	4 index mul 5 1 roll										
	3 index mul 5 1 roll										
	2 index mul 5 1 roll										
	mul 4 1 roll												
}bind def
/tintRGB {
	1 tintGray sub FrameCurColors 4 3 getinterval aload pop 	
	1 exch sub 3 index mul 1 exch sub 4 1 roll					
	1 exch sub 2 index mul 1 exch sub 4 1 roll					
	1 exch sub mul 1 exch sub 3 1 roll							
}bind def
/combineColor {
	/tintGray 1 1 FrameCurGray sub FrameCurColors 7 get mul sub def
    FrameSepIs FMnone eq
	{
		graymode fMLevel1 or not {
			
			[/Pattern [/DeviceCMYK]] setcolorspace
			tintCMYK FrameCurPat setcolor
		} {
			FrameCurColors 3 get 1.0 ge {
				tintGray RealSetgray
			} {
				fMAcrobat not FMPColor graymode and and {
					tintCMYK
					RealSetcmykcolor
				} {
					tintRGB
					RealSetrgbcolor
				} ifelse
			} ifelse
		} ifelse
	} { 
		FrameCurColors 0 4 getinterval aload
		FrameColorInSepListCMYK {
			FrameSepBlack eq exch 
			FrameSepYellow eq and exch 
			FrameSepMagenta eq and exch 
			FrameSepCyan eq and
			FrameSepIs FMcustom eq and
			{ tintGray } { 1 } ifelse
		} {
			FrameSepIs FMblack eq
			{tintGray 1.0 exch sub mul 1.0 exch sub 4 1 roll pop pop pop} {
			FrameSepIs FMyellow eq
			{pop tintGray 1.0 exch sub mul 1.0 exch sub 3 1 roll pop pop} {
			FrameSepIs FMmagenta eq
			{pop pop tintGray 1.0 exch sub mul 1.0 exch sub exch pop } {
			FrameSepIs FMcyan eq
			{pop pop pop tintGray 1.0 exch sub mul 1.0 exch sub } 
			{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
		} ifelse
		graymode fMLevel1 or not {
			
			[/Pattern [/DeviceGray]] setcolorspace
			FrameCurPat setcolor
		} { 
			graymode not fMLevel1 and {
				
				dup 1 lt {pop FrameCurGray} if
			} if
			RealSetgray
		} ifelse
	} ifelse
} bind def
/savematrix {
	orgmatrix currentmatrix pop
	} bind def
/restorematrix {
	orgmatrix setmatrix
	} bind def
/fMDefaultMatrix matrix def
/fMatrix2 matrix def
/dpi    72 0 fMDefaultMatrix defaultmatrix dtransform
    dup mul exch   dup mul add   sqrt def
	
/freq dpi dup 72 div round dup 0 eq {pop 1} if 8 mul div def
/sangle 1 0 fMDefaultMatrix defaultmatrix dtransform exch atan def
	sangle fMatrix2 rotate 
	fMDefaultMatrix defaultmatrix fMatrix2 concatmatrix 
	dup 0 get /sflipx exch def
	    3 get /sflipy exch def
/screenIndex {
	0 1 dpiranges length 1 sub { dup dpiranges exch get 1 sub dpi le {exit} {pop} ifelse } for
} bind def
/getCyanScreen {
	FMUseHighFrequencyScreens { CHighAngles CMHighFreqs} {CLowAngles CMLowFreqs} ifelse
		screenIndex dup 3 1 roll get 3 1 roll get /FMSpotFunction load
} bind def
/getMagentaScreen {
	FMUseHighFrequencyScreens { MHighAngles CMHighFreqs } {MLowAngles CMLowFreqs} ifelse
		screenIndex dup 3 1 roll get 3 1 roll get /FMSpotFunction load
} bind def
/getYellowScreen {
	FMUseHighFrequencyScreens { YHighTDot YHighFreqs} { YLowTDot YLowFreqs } ifelse
		screenIndex dup 3 1 roll get 3 1 roll get { 3 div
			{2 { 1 add 2 div 3 mul dup floor sub 2 mul 1 sub exch} repeat
			FMSpotFunction } } {/FMSpotFunction load } ifelse
			0.0 exch
} bind def
/getBlackScreen  {
	FMUseHighFrequencyScreens { KHighFreqs } { KLowFreqs } ifelse
		screenIndex get 45.0 /FMSpotFunction load 
} bind def
/getSpotScreen {
	getBlackScreen
} bind def
/getCompositeScreen {
	getBlackScreen
} bind def
/FMSetScreen 
	fMLevel1 { /setscreen load 
	}{ {
		8 dict begin
		/HalftoneType 1 def
		/SpotFunction exch def
		/Angle exch def
		/Frequency exch def
		/AccurateScreens FMUseAcccurateScreens def
		currentdict end sethalftone
	} bind } ifelse
def
/setDefaultScreen {
	fMLevel1 {
		FMPColor {
			orgrxfer cvx orggxfer cvx orgbxfer cvx orgxfer cvx setcolortransfer
		}
		{
			orgxfer cvx settransfer
		} ifelse
		orgfreq organgle orgproc cvx setscreen
	} {
		orghalftone sethalftone
	}ifelse
} bind def
/setCurrentScreen {
	FrameSepIs FMnone eq {
		FMUseDefaultNoSeparationScreen {
			setDefaultScreen
		} {
			getCompositeScreen FMSetScreen
		} ifelse
	} {
		FrameSepIs FMcustom eq {
			FMUseDefaultSpotSeparationScreen {
				setDefaultScreen
			} {
				getSpotScreen FMSetScreen
			} ifelse
		} {
			FMUseDefaultProcessSeparationScreen {
				setDefaultScreen
			} {
				FrameSepIs FMcyan eq {
					getCyanScreen FMSetScreen
				} {
					FrameSepIs FMmagenta eq {
						getMagentaScreen FMSetScreen
					} {
						FrameSepIs FMyellow eq {
							getYellowScreen FMSetScreen
						} {
							getBlackScreen FMSetScreen
						} ifelse
					} ifelse
				} ifelse
			} ifelse
		} ifelse
	} ifelse 
} bind def
end
	
/FMDOCUMENT { 
	array /FMfonts exch def 
	dup 1 gt {/#copies exch def} {pop} ifelse
	FrameDict begin
	0 ne /manualfeed exch def
	/paperheight exch def
	/paperwidth exch def
	0 ne /fMNegative exch def 
	0 ne /edown exch def 
	/yscale exch def
	/xscale exch def
	fMLevel1 {
		manualfeed {setmanualfeed} if
		/FMdicttop countdictstack 1 add def 
		/FMoptop count def 
		setpapername 
		manualfeed {true} {papersize} ifelse 
		{manualpapersize} {false} ifelse 
		{desperatepapersize} {false} ifelse 
		{papersizefailure} if
		count -1 FMoptop {pop pop} for
		countdictstack -1 FMdicttop {pop end} for 
		}
		{2 dict
		 dup /PageSize [paperwidth paperheight] put
		 manualfeed {dup /ManualFeed manualfeed put} if
		 {setpagedevice} stopped {papersizefailure} if
		}
	ifelse 
	
	fMLevel1 not {
		/orghalftone currenthalftone def
	}if 
	
	FMPColor {
		currentcolorscreen
			cvlit /orgproc exch def
				  /organgle exch def 
				  /orgfreq exch def
			cvlit /orgbproc exch def
				  /orgbangle exch def 
				  /orgbfreq exch def
			cvlit /orggproc exch def
				  /orggangle exch def 
				  /orggfreq exch def
			cvlit /orgrproc exch def
				  /orgrangle exch def 
				  /orgrfreq exch def
			currentcolortransfer 
			fMNegative {
				1 1 4 { 
					pop { 1 exch sub } fmConcatProcs 4 1 roll
				} for
				4 copy
				setcolortransfer
			} if
			cvlit /orgxfer exch def
			cvlit /orgbxfer exch def
			cvlit /orggxfer exch def
			cvlit /orgrxfer exch def
	} {
		currentscreen 
			cvlit /orgproc exch def
				  /organgle exch def 
				  /orgfreq exch def
				  
		currenttransfer 
		fMNegative {
			{ 1 exch sub } fmConcatProcs
			dup settransfer
		} if 
		cvlit /orgxfer exch def
	} ifelse
	end 
} def 
/FMENDDOCUMENT {
	FMDocSave restore	
} def
/FMBEGINPAGE { 
	FrameDict begin 
	/pagesave save def
	3.86 setmiterlimit
	0 0 moveto paperwidth 0 lineto paperwidth paperheight lineto 
	0 paperheight lineto 0 0 lineto 1 setgray fill
	/landscape exch 0 ne def
	landscape { 
		90 rotate 0 exch dup /pwid exch def neg translate pop 
	}{
		pop /pwid exch def
	} ifelse
	edown { [-1 0 0 1 pwid 0] concat } if
	xscale yscale scale
	/orgmatrix matrix def
	gsave 
} def 
/FMENDPAGE {
	grestore 
	pagesave restore
	end 
	showpage
	} def 
/FMFONTDEFINE { 
	FrameDict begin
	findfont 
	ReEncode 
	1 index exch 
	definefont 
	FMfonts 3 1 roll 
	put
	end 
	} def 
/FMFILLS {
	FrameDict begin dup
	array /fillvals exch def
	dict /patCache exch def
	end 
	} def 
/FMFILL {
	FrameDict begin
	 fillvals 3 1 roll put
	end 
	} def 
/FMNORMALIZEGRAPHICS { 
	newpath
	1 setlinewidth
	0 setlinecap
	0 0 0 sethsbcolor
	0 setgray 
	} bind def
/FMBEGINEPSF { 
	end 
	/FMEPSF save def 
	/showpage {} def 
	FMNORMALIZEGRAPHICS 
	[/fy /fx /fh /fw /ury /urx /lly /llx] {exch def} forall 
	fx fw 2 div add fy fh 2 div add  translate
	rotate
	fw 2 div neg fh 2 div neg translate
	fw urx llx sub div fh ury lly sub div scale 
	llx neg lly neg translate 
	/FMdicttop countdictstack 1 add def 
	/FMoptop count def 
	} bind def
/FMENDEPSF {
	count -1 FMoptop {pop pop} for 
	countdictstack -1 FMdicttop {pop end} for 
	FMEPSF restore
	FrameDict begin 
	} bind def
FrameDict begin 
/setmanualfeed {
%%BeginFeature: *ManualFeed True
	 statusdict /manualfeed true put
%%EndFeature
	} bind def
/max {2 copy lt {exch} if pop} bind def
/min {2 copy gt {exch} if pop} bind def
/inch {72 mul} def
/pagedimen { 
	paperheight sub abs 16 lt exch 
	paperwidth sub abs 16 lt and
	{/papername exch def} {pop} ifelse
	} bind def
/setpapername { 
	/papersizedict 14 dict def 
	papersizedict begin
	/papername /unknown def 
		/Letter 8.5 inch 11.0 inch pagedimen
		/LetterSmall 7.68 inch 10.16 inch pagedimen
		/Tabloid 11.0 inch 17.0 inch pagedimen
		/Ledger 17.0 inch 11.0 inch pagedimen
		/Legal 8.5 inch 14.0 inch pagedimen
		/Statement 5.5 inch 8.5 inch pagedimen
		/Executive 7.5 inch 10.0 inch pagedimen
		/A3 11.69 inch 16.5 inch pagedimen
		/A4 8.26 inch 11.69 inch pagedimen
		/A4Small 7.47 inch 10.85 inch pagedimen
		/B4 10.125 inch 14.33 inch pagedimen
		/B5 7.16 inch 10.125 inch pagedimen
	end
	} bind def
/papersize {
	papersizedict begin
		/Letter {lettertray letter} def
		/LetterSmall {lettertray lettersmall} def
		/Tabloid {11x17tray 11x17} def
		/Ledger {ledgertray ledger} def
		/Legal {legaltray legal} def
		/Statement {statementtray statement} def
		/Executive {executivetray executive} def
		/A3 {a3tray a3} def
		/A4 {a4tray a4} def
		/A4Small {a4tray a4small} def
		/B4 {b4tray b4} def
		/B5 {b5tray b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	statusdict begin stopped end 
	} bind def
/manualpapersize {
	papersizedict begin
		/Letter {letter} def
		/LetterSmall {lettersmall} def
		/Tabloid {11x17} def
		/Ledger {ledger} def
		/Legal {legal} def
		/Statement {statement} def
		/Executive {executive} def
		/A3 {a3} def
		/A4 {a4} def
		/A4Small {a4small} def
		/B4 {b4} def
		/B5 {b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	stopped 
	} bind def
/desperatepapersize {
	
	mark
	statusdict begin 
		/setpageparams where {
			pop
			paperwidth paperheight 0 1 
			{setpageparams} stopped 
		} { 
			true 
		} ifelse
		
		{
			
			/setpagedevice where {
				pop 
				1 dict dup begin
					/PageSize [ paperwidth paperheight ] def
				end 
				{setpagedevice} stopped
			} {
				true	
			} ifelse
		} {
			false		
		} ifelse 
	end
	{cleartomark true}{cleartomark false}ifelse
} bind def
/papersizefailure {
	FMAllowPaperSizeMismatch not
		{
(The requested paper size is not available in any currently-installed tray)
(Edit the PS file to "FMAllowPaperSizeMismatch true" to use default tray)
		 FMFAILURE } if
	} def
/DiacriticEncoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /space /exclam /quotedbl
/numbersign /dollar /percent /ampersand /quotesingle /parenleft
/parenright /asterisk /plus /comma /hyphen /period /slash /zero /one
/two /three /four /five /six /seven /eight /nine /colon /semicolon
/less /equal /greater /question /at /A /B /C /D /E /F /G /H /I /J /K
/L /M /N /O /P /Q /R /S /T /U /V /W /X /Y /Z /bracketleft /backslash
/bracketright /asciicircum /underscore /grave /a /b /c /d /e /f /g /h
/i /j /k /l /m /n /o /p /q /r /s /t /u /v /w /x /y /z /braceleft /bar
/braceright /asciitilde /.notdef /Adieresis /Aring /Ccedilla /Eacute
/Ntilde /Odieresis /Udieresis /aacute /agrave /acircumflex /adieresis
/atilde /aring /ccedilla /eacute /egrave /ecircumflex /edieresis
/iacute /igrave /icircumflex /idieresis /ntilde /oacute /ograve
/ocircumflex /odieresis /otilde /uacute /ugrave /ucircumflex
/udieresis /dagger /.notdef /cent /sterling /section /bullet
/paragraph /germandbls /registered /copyright /trademark /acute
/dieresis /.notdef /AE /Oslash /.notdef /.notdef /.notdef /.notdef
/yen /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/ordfeminine /ordmasculine /.notdef /ae /oslash /questiondown
/exclamdown /logicalnot /.notdef /florin /.notdef /.notdef
/guillemotleft /guillemotright /ellipsis /.notdef /Agrave /Atilde
/Otilde /OE /oe /endash /emdash /quotedblleft /quotedblright
/quoteleft /quoteright /.notdef /.notdef /ydieresis /Ydieresis
/fraction /currency /guilsinglleft /guilsinglright /fi /fl /daggerdbl
/periodcentered /quotesinglbase /quotedblbase /perthousand
/Acircumflex /Ecircumflex /Aacute /Edieresis /Egrave /Iacute
/Icircumflex /Idieresis /Igrave /Oacute /Ocircumflex /.notdef /Ograve
/Uacute /Ucircumflex /Ugrave /dotlessi /circumflex /tilde /macron
/breve /dotaccent /ring /cedilla /hungarumlaut /ogonek /caron
] def
/ReEncode { 
	dup 
	length 
	dict begin 
	{
	1 index /FID ne 
		{def} 
		{pop pop} ifelse 
	} forall 
	0 eq {/Encoding DiacriticEncoding def} if 
	currentdict 
	end 
	} bind def
FMPColor 
	
	{
	/BEGINBITMAPCOLOR { 
		BITMAPCOLOR} def
	/BEGINBITMAPCOLORc { 
		BITMAPCOLORc} def
	/BEGINBITMAPTRUECOLOR { 
		BITMAPTRUECOLOR } def
	/BEGINBITMAPTRUECOLORc { 
		BITMAPTRUECOLORc } def
	/BEGINBITMAPCMYK { 
		BITMAPCMYK } def
	/BEGINBITMAPCMYKc { 
		BITMAPCMYKc } def
	}
	
	{
	/BEGINBITMAPCOLOR { 
		BITMAPGRAY} def
	/BEGINBITMAPCOLORc { 
		BITMAPGRAYc} def
	/BEGINBITMAPTRUECOLOR { 
		BITMAPTRUEGRAY } def
	/BEGINBITMAPTRUECOLORc { 
		BITMAPTRUEGRAYc } def
	/BEGINBITMAPCMYK { 
		BITMAPCMYKGRAY } def
	/BEGINBITMAPCMYKc { 
		BITMAPCMYKGRAYc } def
	}
ifelse
/K { 
	FMPrintAllColorsAsBlack {
		8 1 roll
		dup 1 eq 2 index 1 eq and 3 index 1 eq and not
			{7 {pop} repeat 0 0 0 1 0 0 0} if
		8 -1 roll
	} if 
	FrameCurColors astore 
	pop combineColor
} bind def
/graymode true def
fMLevel1 {
	/fmGetFlip {
		fMatrix2 exch get mul 0 lt { -1 } { 1 } ifelse
	} FmBD
} if
/setPatternMode {
	fMLevel1 {
		2 index patScreenDict exch known {
			pop pop
			patScreenDict exch get aload pop 
			freq 								
			mul									
			5 2 roll							
			fMatrix2 currentmatrix 1 get 0 ne {
				3 -1 roll 90 add 3 1 roll 		
				sflipx 1 fmGetFlip sflipy 2 fmGetFlip neg mul
			} {  								
				sflipx 0 fmGetFlip sflipy 3 fmGetFlip mul 
			} ifelse
			0 lt {exch pop} {pop} ifelse 		
			fMNegative { 
				{neg} fmConcatProcs 			
			} if
			bind
			
			
			
			systemdict /setscreen get exec		
			/FrameCurGray exch def
		} {
			/bwidth  exch def
			/bpside  exch def
			/bstring exch def
			/onbits 0 def  /offbits 0 def
			freq sangle landscape {90 add} if 
				{/ypoint exch def
				 /xpoint exch def
				 /xindex xpoint 1 add 2 div bpside mul cvi def
				 /yindex ypoint 1 add 2 div bpside mul cvi def
				 bstring yindex bwidth mul xindex 8 idiv add get
				 1 7 xindex 8 mod sub bitshift and 0 ne fMNegative {not} if
				 {/onbits  onbits  1 add def 1}
				 {/offbits offbits 1 add def 0}
				 ifelse
				}
				setscreen
			offbits offbits onbits add dup 0 ne {div} {pop pop .5} ifelse fMNegative {1.0 exch sub} if
			/FrameCurGray exch def
		} ifelse
	} { 
		pop pop
		dup patCache exch known {
			patCache exch get
		} { 
			dup
			patDict /bstring 3 -1 roll put
			patDict 
			9 PatFreq screenIndex get div dup matrix scale
			makepattern
			dup 
			patCache 4 -1 roll 3 -1 roll put
		} ifelse
		/FrameCurGray 0 def
		/FrameCurPat exch def
	} ifelse
	/graymode false def
	combineColor
} bind def
/setGrayScaleMode {
	graymode not {
		/graymode true def
		fMLevel1 {
			setCurrentScreen
		} if
	} if
	/FrameCurGray exch def
	combineColor
} bind def
/normalize {
	transform round exch round exch itransform
	} bind def
/dnormalize {
	dtransform round exch round exch idtransform
	} bind def
/lnormalize { 
	0 dtransform exch cvi 2 idiv 2 mul 1 add exch idtransform pop
	} bind def
/H { 
	lnormalize setlinewidth
	} bind def
/Z {
	setlinecap
	} bind def
	
/PFill {
	graymode fMLevel1 or not {
		gsave 1 setgray eofill grestore
	} if
} bind def
/PStroke {
	graymode fMLevel1 or not {
		gsave 1 setgray stroke grestore
	} if
	stroke
} bind def
/X { 
	fillvals exch get
	dup type /stringtype eq
	{8 1 setPatternMode} 
	{setGrayScaleMode}
	ifelse
	} bind def
/V { 
	PFill gsave eofill grestore
	} bind def
/Vclip {
	clip
	} bind def
/Vstrk {
	currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/N { 
	PStroke
	} bind def
/Nclip {
	strokepath clip newpath
	} bind def
/Nstrk {
	currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/M {newpath moveto} bind def
/E {lineto} bind def
/D {curveto} bind def
/O {closepath} bind def
/L { 
 	/n exch def
	newpath
	normalize
	moveto 
	2 1 n {pop normalize lineto} for
	} bind def
/Y { 
	L 
	closepath
	} bind def
/R { 
	/y2 exch def
	/x2 exch def
	/y1 exch def
	/x1 exch def
	x1 y1
	x2 y1
	x2 y2
	x1 y2
	4 Y 
	} bind def
/rarc 
	{rad 
	 arcto
	} bind def
/RR { 
	/rad exch def
	normalize
	/y2 exch def
	/x2 exch def
	normalize
	/y1 exch def
	/x1 exch def
	mark
	newpath
	{
	x1 y1 rad add moveto
	x1 y2 x2 y2 rarc
	x2 y2 x2 y1 rarc
	x2 y1 x1 y1 rarc
	x1 y1 x1 y2 rarc
	closepath
	} stopped {x1 y1 x2 y2 R} if 
	cleartomark
	} bind def
/RRR { 
	/rad exch def
	normalize /y4 exch def /x4 exch def
	normalize /y3 exch def /x3 exch def
	normalize /y2 exch def /x2 exch def
	normalize /y1 exch def /x1 exch def
	newpath
	normalize moveto 
	mark
	{
	x2 y2 x3 y3 rarc
	x3 y3 x4 y4 rarc
	x4 y4 x1 y1 rarc
	x1 y1 x2 y2 rarc
	closepath
	} stopped
	 {x1 y1 x2 y2 x3 y3 x4 y4 newpath moveto lineto lineto lineto closepath} if
	cleartomark
	} bind def
/C { 
	grestore
	gsave
	R 
	clip
	setCurrentScreen
} bind def
/CP { 
	grestore
	gsave
	Y 
	clip
	setCurrentScreen
} bind def
/F { 
	FMfonts exch get
	[FMsetsize 0 0 FMpointsize 0 0] makefont
	setfont
	} bind def
/Q { 
	/FMpointsize exch def
	/FMsetsize FMpointsize def
	F 
	} bind def
/QQ { 
	/FMsetsize exch def
	/FMpointsize exch def
	F 
	} bind def
/T { 
	moveto show
	} bind def
/RF { 
	rotate
	0 ne {-1 1 scale} if
	} bind def
/TF { 
	gsave
	moveto 
	RF
	show
	grestore
	} bind def
/P { 
	moveto
	0 32 3 2 roll widthshow
	} bind def
/PF { 
	gsave
	moveto 
	RF
	0 32 3 2 roll widthshow
	grestore
	} bind def
/S { 
	moveto
	0 exch ashow
	} bind def
/SF { 
	gsave
	moveto
	RF
	0 exch ashow
	grestore
	} bind def
/B { 
	moveto
	0 32 4 2 roll 0 exch awidthshow
	} bind def
/BF { 
	gsave
	moveto
	RF
	0 32 4 2 roll 0 exch awidthshow
	grestore
	} bind def
/G { 
	gsave
	newpath
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	PFill fill
	grestore
	} bind def
/Gstrk {
	savematrix
    newpath
    2 index 2 div add exch 3 index 2 div sub exch 
    normalize 2 index 2 div sub exch 3 index 2 div add exch 
    translate
    scale 
    0.0 0.0 1.0 5 3 roll arc 
    restorematrix
    currentlinewidth exch setlinewidth PStroke setlinewidth
    } bind def
/Gclip { 
	newpath
	savematrix
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	clip newpath
	restorematrix
	} bind def
/GG { 
	gsave
	newpath
	normalize translate 0.0 0.0 moveto 
	rotate 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath
	PFill
	fill
	grestore
	} bind def
/GGclip { 
	savematrix
	newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath
	clip newpath
	restorematrix
	} bind def
/GGstrk { 
	savematrix
    newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath 
	restorematrix
    currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/A { 
	gsave
	savematrix
	newpath
	2 index 2 div add exch 3 index 2 div sub exch 
	normalize 2 index 2 div sub exch 3 index 2 div add exch 
	translate 
	scale 
	2 copy 0.0 0.0 1.0 5 3 roll arc 
	round cvi 360 mod exch round cvi 360 mod eq {closepath} if 
	restorematrix
	PStroke
	grestore
	} bind def
/Aclip {
	newpath
	savematrix
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	strokepath clip newpath
	restorematrix
} bind def
/Astrk {
	Gstrk
} bind def
/AA { 
	gsave
	savematrix
	newpath
	
	3 index 2 div add exch 4 index 2 div sub exch 
	
	normalize 3 index 2 div sub exch 4 index 2 div add exch
	translate 
	rotate 
	scale 
	0.0 0.0 1.0 5 3 roll arc 
	restorematrix
	PStroke
	grestore
	} bind def
/AAclip {
	savematrix
	newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath
	strokepath clip newpath
	restorematrix
} bind def
/AAstrk {
	GGstrk
} bind def
/BEGINPRINTCODE { 
	/FMdicttop countdictstack 1 add def 
	/FMoptop count 7 sub def 
	/FMsaveobject save def
	userdict begin 
	/showpage {} def 
	FMNORMALIZEGRAPHICS 
	3 index neg 3 index neg translate
	} bind def
/ENDPRINTCODE {
	count -1 FMoptop {pop pop} for 
	countdictstack -1 FMdicttop {pop end} for 
	FMsaveobject restore 
	} bind def
/gn { 
	0 
	{	46 mul 
		cf read pop 
		32 sub 
		dup 46 lt {exit} if 
		46 sub add 
		} loop
	add 
	} bind def
/cfs { 
	/str sl string def 
	0 1 sl 1 sub {str exch val put} for 
	str def 
	} bind def
/ic [ 
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0
	{0 hx} {1 hx} {2 hx} {3 hx} {4 hx} {5 hx} {6 hx} {7 hx} {8 hx} {9 hx}
	{10 hx} {11 hx} {12 hx} {13 hx} {14 hx} {15 hx} {16 hx} {17 hx} {18 hx}
	{19 hx} {gn hx} {0} {1} {2} {3} {4} {5} {6} {7} {8} {9} {10} {11} {12}
	{13} {14} {15} {16} {17} {18} {19} {gn} {0 wh} {1 wh} {2 wh} {3 wh}
	{4 wh} {5 wh} {6 wh} {7 wh} {8 wh} {9 wh} {10 wh} {11 wh} {12 wh}
	{13 wh} {14 wh} {gn wh} {0 bl} {1 bl} {2 bl} {3 bl} {4 bl} {5 bl} {6 bl}
	{7 bl} {8 bl} {9 bl} {10 bl} {11 bl} {12 bl} {13 bl} {14 bl} {gn bl}
	{0 fl} {1 fl} {2 fl} {3 fl} {4 fl} {5 fl} {6 fl} {7 fl} {8 fl} {9 fl}
	{10 fl} {11 fl} {12 fl} {13 fl} {14 fl} {gn fl}
	] def
/ms { 
	/sl exch def 
	/val 255 def 
	/ws cfs 
	/im cfs 
	/val 0 def 
	/bs cfs 
	/cs cfs 
	} bind def
400 ms 
/ip { 
	is 
	0 
	cf cs readline pop 
	{	ic exch get exec 
		add 
		} forall 
	pop 
	
	} bind def
/rip { 
	   
	  
	  bis ris copy pop 
      is
      0
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop 
	  ris gis copy pop 
	  dup is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop
	  gis bis copy pop 
	  dup add is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
      pop 
      
      } bind def
/rip4 { 
	   
	  
	  kis cis copy pop 
      is
      0
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop 
	  cis mis copy pop 
	  dup is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop
	  mis yis copy pop 
	  dup dup add is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop
	  yis kis copy pop 
	  3 mul is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
      pop 
      
      } bind def
/wh { 
	/len exch def 
	/pos exch def 
	ws 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/bl { 
	/len exch def 
	/pos exch def 
	bs 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/s1 1 string def
/fl { 
	/len exch def 
	/pos exch def 
	/val cf s1 readhexstring pop 0 get def
	pos 1 pos len add 1 sub {im exch val put} for
	pos len 
	} bind def
/hx { 
	3 copy getinterval 
	cf exch readhexstring pop pop 
	} bind def
/wbytes { 
      dup dup
      8 gt { pop 8 idiv mul }
      { 8 eq {pop} {1 eq {7 add 8 idiv} {3 add 4 idiv} ifelse} ifelse } ifelse
	} bind def
/BEGINBITMAPBWc { 
	1 {} COMMONBITMAPc
	} bind def
/BEGINBITMAPGRAYc { 
	8 {} COMMONBITMAPc
	} bind def
/BEGINBITMAP2BITc { 
	2 {} COMMONBITMAPc
	} bind def
/COMMONBITMAPc { 
		 
	/cvtProc exch def
	/depth exch def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/lb width depth wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	cvtProc                
	/is im 0 lb getinterval def 
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	width height depth [width 0 0 height neg 0 height] 
	{ip} image 
	bitmapsave restore 
	grestore
	} bind def
/BEGINBITMAPBW { 
	1 {} COMMONBITMAP
	} bind def
/BEGINBITMAPGRAY { 
	8 {} COMMONBITMAP
	} bind def
/BEGINBITMAP2BIT { 
	2 {} COMMONBITMAP
	} bind def
/COMMONBITMAP { 
	/cvtProc exch def
	/depth exch def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/bitmapsave save def 
	cvtProc              
	/is width depth wbytes string def
	/cf currentfile def 
	width height depth [width 0 0 height neg 0 height] 
	{cf is readhexstring pop} image
	bitmapsave restore 
	grestore
	} bind def
/ngrayt 256 array def
/nredt 256 array def
/nbluet 256 array def
/ngreent 256 array def
fMLevel1 {
/colorsetup {
	currentcolortransfer
	/gryt exch def
	/blut exch def
	/grnt exch def
	/redt exch def
	0 1 255 {
		/indx exch def
		/cynu 1 red indx get 255 div sub def
		/magu 1 green indx get 255 div sub def
		/yelu 1 blue indx get 255 div sub def
		/kk cynu magu min yelu min def
		/u kk currentundercolorremoval exec def
%		/u 0 def
		nredt indx 1 0 cynu u sub max sub redt exec put
		ngreent indx 1 0 magu u sub max sub grnt exec put
		nbluet indx 1 0 yelu u sub max sub blut exec put
		ngrayt indx 1 kk currentblackgeneration exec sub gryt exec put
	} for
	{255 mul cvi nredt exch get}
	{255 mul cvi ngreent exch get}
	{255 mul cvi nbluet exch get}
	{255 mul cvi ngrayt exch get}
	setcolortransfer
	{pop 0} setundercolorremoval
	{} setblackgeneration
	} bind def
}
{
/colorSetup2 {
	[ /Indexed /DeviceRGB 255 
		{dup red exch get 255 div 
		 exch dup green exch get 255 div 
		 exch blue exch get 255 div}
	] setcolorspace
} bind def
} ifelse
/fakecolorsetup {
	/tran 256 string def
	0 1 255 {/indx exch def 
		tran indx
		red indx get 77 mul
		green indx get 151 mul
		blue indx get 28 mul
		add add 256 idiv put} for
	currenttransfer
	{255 mul cvi tran exch get 255.0 div}
	exch fmConcatProcs settransfer
} bind def
/BITMAPCOLOR { 
	/depth 8 def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/bitmapsave save def
	fMLevel1 {	
		colorsetup
		/is width depth wbytes string def
		/cf currentfile def 
		width height depth [width 0 0 height neg 0 height] 
		{cf is readhexstring pop} {is} {is} true 3 colorimage 
	} {
		colorSetup2
		/is width depth wbytes string def
		/cf currentfile def 
		7 dict dup begin
			/ImageType 1 def
			/Width width def
			/Height height def
			/ImageMatrix [width 0 0 height neg 0 height] def
			/DataSource {cf is readhexstring pop} bind def
			/BitsPerComponent depth def
			/Decode [0 255] def
		end image	
	} ifelse
	bitmapsave restore 
	grestore
	} bind def
/BITMAPCOLORc { 
	/depth 8 def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/lb width depth wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	fMLevel1 {	
		colorsetup
		/is im 0 lb getinterval def 
		ws 0 lb getinterval is copy pop 
		/cf currentfile def 
		width height depth [width 0 0 height neg 0 height] 
		{ip} {is} {is} true 3 colorimage
	} {
		colorSetup2
		/is im 0 lb getinterval def 
		ws 0 lb getinterval is copy pop 
		/cf currentfile def 
		7 dict dup begin
			/ImageType 1 def
			/Width width def
			/Height height def
			/ImageMatrix [width 0 0 height neg 0 height] def
			/DataSource {ip} bind def
			/BitsPerComponent depth def
			/Decode [0 255] def
		end image	
	} ifelse
	bitmapsave restore 
	grestore
	} bind def
/BITMAPTRUECOLORc { 
	/depth 24 def
        gsave
 	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/lb width depth wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/ris im 0 width getinterval def	
	/gis im width width getinterval def	
	/bis im width 2 mul width getinterval def 
        
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	width height 8 [width 0 0 height neg 0 height] 
	{width rip pop ris} {gis} {bis} true 3 colorimage
	bitmapsave restore 
	grestore
	} bind def
/BITMAPCMYKc { 
	/depth 32 def
        gsave
 	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/lb width depth wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/cis im 0 width getinterval def	
	/mis im width width getinterval def	
	/yis im width 2 mul width getinterval def 
	/kis im width 3 mul width getinterval def 
        
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	width height 8 [width 0 0 height neg 0 height] 
	{width rip4 pop cis} {mis} {yis} {kis} true 4 colorimage
	bitmapsave restore 
	grestore
	} bind def
/BITMAPTRUECOLOR { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/height exch def /width exch def
        /bitmapsave save def 
        /is width string def
        /gis width string def
        /bis width string def
        /cf currentfile def 
        width height 8 [width 0 0 height neg 0 height] 
        { cf is readhexstring pop } 
        { cf gis readhexstring pop } 
        { cf bis readhexstring pop } 
        true 3 colorimage 
        bitmapsave restore 
        grestore
        } bind def
/BITMAPCMYK { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/height exch def /width exch def
        /bitmapsave save def 
        /is width string def
        /mis width string def
        /yis width string def
        /kis width string def
        /cf currentfile def 
        width height 8 [width 0 0 height neg 0 height] 
        { cf is readhexstring pop } 
        { cf mis readhexstring pop } 
        { cf yis readhexstring pop } 
        { cf kis readhexstring pop } 
        true 4 colorimage 
        bitmapsave restore 
        grestore
        } bind def
/BITMAPTRUEGRAYc { 
	/depth 24 def
        gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/lb width depth wbytes def 
	sl lb lt {lb ms} if 
        /bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/ris im 0 width getinterval def	
	/gis im width width getinterval def	
	/bis im width 2 mul width getinterval def 
        ws 0 lb getinterval is copy pop 
        /cf currentfile def 
        width height 8 [width 0 0 height neg 0 height] 
        {width rip pop ris gis bis width gray} image
        bitmapsave restore 
        grestore
        } bind def
/BITMAPCMYKGRAYc { 
	/depth 32 def
        gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/lb width depth wbytes def 
	sl lb lt {lb ms} if 
        /bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/cis im 0 width getinterval def	
	/mis im width width getinterval def	
	/yis im width 2 mul width getinterval def 
	/kis im width 3 mul width getinterval def 
        ws 0 lb getinterval is copy pop 
        /cf currentfile def 
        width height 8 [width 0 0 height neg 0 height] 
        {width rip pop cis mis yis kis width cgray} image
        bitmapsave restore 
        grestore
        } bind def
/cgray { 
        /ww exch def
        /k exch def
        /y exch def
        /m exch def
        /c exch def
        0 1 ww 1 sub { /i exch def c i get m i get y i get k i get CMYKtoRGB
				.144 mul 3 1 roll .587 mul 3 1 roll .299 mul add add
				c i 3 -1 roll floor cvi put } for
        c
 		} bind def
/gray { 
        /ww exch def
        /b exch def
        /g exch def
        /r exch def
        0 1 ww 1 sub { /i exch def r i get .299 mul g i get .587 mul
			b i get .114 mul add add r i 3 -1 roll floor cvi put } for
        r
        } bind def
/BITMAPTRUEGRAY { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/height exch def /width exch def
        /bitmapsave save def 
        /is width string def
        /gis width string def
        /bis width string def
        /cf currentfile def 
        width height 8 [width 0 0 height neg 0 height] 
        { cf is readhexstring pop 
          cf gis readhexstring pop 
          cf bis readhexstring pop width gray}  image
        bitmapsave restore 
        grestore
        } bind def
/BITMAPCMYKGRAY { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/height exch def /width exch def
        /bitmapsave save def 
        /is width string def
        /yis width string def
        /mis width string def
        /kis width string def
        /cf currentfile def 
        width height 8 [width 0 0 height neg 0 height] 
        { cf is readhexstring pop 
          cf mis readhexstring pop 
          cf yis readhexstring pop 
          cf kis readhexstring pop width cgray}  image
        bitmapsave restore 
        grestore
        } bind def
/BITMAPGRAY { 
	8 {fakecolorsetup} COMMONBITMAP
	} bind def
/BITMAPGRAYc { 
	8 {fakecolorsetup} COMMONBITMAPc
	} bind def
/ENDBITMAP {
	} bind def
end 
	/ALDmatrix matrix def ALDmatrix currentmatrix pop
/StartALD {
	/ALDsave save def
	 savematrix
	 ALDmatrix setmatrix
	} bind def
/InALD {
	 restorematrix
	} bind def
/DoneALD {
	 ALDsave restore
	} bind def
/I { setdash } bind def
/J { [] 0 setdash } bind def
%%EndProlog
%%BeginSetup
(5.5) FMVERSION
1 1 0 0 612 792 0 1 15 FMDOCUMENT
%%IncludeFont: Helvetica-Bold
0 0 /Helvetica-Bold FMFONTDEFINE
%%IncludeFont: Times-Bold
1 0 /Times-Bold FMFONTDEFINE
%%IncludeFont: Times-Roman
2 0 /Times-Roman FMFONTDEFINE
%%IncludeFont: Helvetica-Oblique
3 0 /Helvetica-Oblique FMFONTDEFINE
%%IncludeFont: Helvetica
4 0 /Helvetica FMFONTDEFINE
%%IncludeFont: Symbol
5 1 /Symbol FMFONTDEFINE
32 FMFILLS
0 0 FMFILL
1 0.1 FMFILL
2 0.3 FMFILL
3 0.5 FMFILL
4 0.7 FMFILL
5 0.9 FMFILL
6 0.97 FMFILL
7 1 FMFILL
8 <0f1e3c78f0e1c387> FMFILL
9 <0f87c3e1f0783c1e> FMFILL
10 <cccccccccccccccc> FMFILL
11 <ffff0000ffff0000> FMFILL
12 <8142241818244281> FMFILL
13 <03060c183060c081> FMFILL
14 <8040201008040201> FMFILL
16 1 FMFILL
17 0.9 FMFILL
18 0.7 FMFILL
19 0.5 FMFILL
20 0.3 FMFILL
21 0.1 FMFILL
22 0.03 FMFILL
23 0 FMFILL
24 <f0e1c3870f1e3c78> FMFILL
25 <f0783c1e0f87c3e1> FMFILL
26 <3333333333333333> FMFILL
27 <0000ffff0000ffff> FMFILL
28 <7ebddbe7e7dbbd7e> FMFILL
29 <fcf9f3e7cf9f3f7e> FMFILL
30 <7fbfdfeff7fbfdfe> FMFILL
%%EndSetup
%%Page: "mini" 1
%%BeginPaperSize: Letter
%%EndPaperSize
612 792 1 FMBEGINPAGE
0 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 1 K
J
31.64 490.5 386.86 765 C
0 0 0 1 0 0 0 1 K
278.12 514.9 354.81 522.98 R
7 X
V
1 1 0 0 0 0 1 1 K
0 5.38 Q
0 X
(7/20/98 10:08 - page 1 of 18) 285.7 519.39 T
0 0 0 1 0 0 0 1 K
154.53 518.01 259.26 522.61 R
7 X
V
1 1 0 0 0 0 1 1 K
0 X
(Mobile Objects and Agents) 170.68 519.02 T
0 0 0 1 0 0 0 1 K
1 0 0 0 0 1 1 1 K
0 8.07 Q
(The Open Gr) 63.03 517.42 T
(oup) 111.77 517.42 T
0 0 0 1 0 0 0 1 K
1 0 0 0 0 1 1 1 K
(Resear) 63.03 509.34 T
(c) 89.8 509.34 T
(h Institute) 94.2 509.34 T
0 0 0 1 0 0 0 1 K
1 1 0 0 0 0 1 1 K
63.58 532.17 354.21 742.08 R
7 X
V
0 0 0 1 0 0 0 1 K
63.58 721.89 354.21 725.93 C
0 0 0 1 0 0 0 1 K
63.58 721.89 354.21 725.93 R
7 X
V
1 1 0 0 0 0 1 1 K
63.58 724.14 354.21 724.14 2 L
V
1.79 H
0 Z
0 X
N
0 0 0 1 0 0 0 1 K
31.64 490.5 386.86 765 C
1 1 0 0 0 0 1 1 K
0 16.15 Q
0 X
(The Open Group Research Institute) 63.58 731.31 T
1 13.46 Q
(Case Studies in) 165.16 666.88 T
0 16.15 Q
(Security and Resource Management) 69.82 644.6 T
1 13.46 Q
(f) 154.88 623.67 T
(or Mobile Objects) 159.02 623.67 T
0 0 0 1 0 0 0 1 K
2 10.76 Q
(Dejan) 149.85 590.33 T
(Milojicic,) 178.24 590.33 T
(Gul) 223.1 590.33 T
(Agha,) 241.93 590.33 T
1 1 0 0 0 0 1 1 K
0 0 0 1 0 0 0 1 K
(Philippe) 100.12 577.77 T
(Bernadat,) 138.7 577.77 T
(Deepika) 182.94 577.77 T
(Chauhan,) 221.5 577.77 T
(Shai) 265.15 577.77 T
(Guday) 286.98 577.77 T
(,) 314.98 577.77 T
1 1 0 0 0 0 1 1 K
0 0 0 1 0 0 0 1 K
(Nadeem) 130.72 565.21 T
(Jamali,) 169.28 565.21 T
(and) 202.76 565.21 T
(Dan) 221 565.21 T
(Lambright) 241.62 565.21 T
1 1 0 0 0 0 1 1 K
3 8.97 Q
(Presentation at the Mobile Object Systems Workshop) 102.7 544.58 T
(Brussels, July 21 1998) 163.77 535.16 T
0 0 0 1 0 0 0 1 K
1 1 0 0 0 0 1 1 K
0 0 0 1 0 0 0 1 K
405.14 490.5 760.36 765 C
0 0 0 1 0 0 0 1 K
651.62 514.9 728.31 522.98 R
7 X
V
1 1 0 0 0 0 1 1 K
0 5.38 Q
0 X
(7/20/98 10:08 - page 2 of 18) 659.21 519.39 T
0 0 0 1 0 0 0 1 K
528.03 518.01 632.76 522.61 R
7 X
V
1 1 0 0 0 0 1 1 K
0 X
(Mobile Objects and Agents) 544.18 519.02 T
0 0 0 1 0 0 0 1 K
1 0 0 0 0 1 1 1 K
0 8.07 Q
(The Open Gr) 436.53 517.42 T
(oup) 485.27 517.42 T
0 0 0 1 0 0 0 1 K
1 0 0 0 0 1 1 1 K
(Resear) 436.53 509.34 T
(c) 463.3 509.34 T
(h Institute) 467.7 509.34 T
0 0 0 1 0 0 0 1 K
1 1 0 0 0 0 1 1 K
437.08 532.17 727.71 742.08 R
7 X
V
0 0 0 1 0 0 0 1 K
437.08 721.89 727.71 725.93 C
0 0 0 1 0 0 0 1 K
437.08 721.89 727.71 725.93 R
7 X
V
1 1 0 0 0 0 1 1 K
437.08 724.14 727.71 724.14 2 L
V
1.79 H
0 Z
0 X
N
0 0 0 1 0 0 0 1 K
405.14 490.5 760.36 765 C
1 1 0 0 0 0 1 1 K
0 16.15 Q
0 X
(Motivation) 437.08 731.31 T
0 0 0 1 0 0 0 1 K
4 10.76 Q
(\245 Mobility raised a lot of attention recently) 453.22 695.88 T
1 1 0 0 0 0 1 1 K
0 0 0 1 0 0 0 1 K
(\245 e.g. applets, mobile computing, active networks) 469.37 679.73 T
1 1 0 0 0 0 1 1 K
0 0 0 1 0 0 0 1 K
(\245 Security - a key requirement) 453.22 659.1 T
1 1 0 0 0 0 1 1 K
0 0 0 1 0 0 0 1 K
(\245 Authentication and Ecryption) 469.37 642.95 T
1 1 0 0 0 0 1 1 K
0 0 0 1 0 0 0 1 K
(\245 Resist denial of service attacks on resources) 469.37 626.81 T
1 1 0 0 0 0 1 1 K
0 0 0 1 0 0 0 1 K
(\245 Different approaches but similar problems in various) 453.22 606.17 T
1 1 0 0 0 0 1 1 K
0 0 0 1 0 0 0 1 K
(systems) 459.68 594.51 T
1 1 0 0 0 0 1 1 K
0 0 0 1 0 0 0 1 K
1 1 0 0 0 0 1 1 K
0 0 0 1 0 0 0 1 K
31.64 207 386.86 481.5 C
0 0 0 1 0 0 0 1 K
278.12 231.4 354.81 239.48 R
7 X
V
1 1 0 0 0 0 1 1 K
0 5.38 Q
0 X
(7/20/98 10:08 - page 3 of 18) 285.7 235.89 T
0 0 0 1 0 0 0 1 K
154.53 234.51 259.26 239.11 R
7 X
V
1 1 0 0 0 0 1 1 K
0 X
(Mobile Objects and Agents) 170.68 235.52 T
0 0 0 1 0 0 0 1 K
1 0 0 0 0 1 1 1 K
0 8.07 Q
(The Open Gr) 63.03 233.91 T
(oup) 111.77 233.91 T
0 0 0 1 0 0 0 1 K
1 0 0 0 0 1 1 1 K
(Resear) 63.03 225.84 T
(c) 89.8 225.84 T
(h Institute) 94.2 225.84 T
0 0 0 1 0 0 0 1 K
1 1 0 0 0 0 1 1 K
63.58 248.67 354.21 458.58 R
7 X
V
0 0 0 1 0 0 0 1 K
63.58 438.39 354.21 442.43 C
0 0 0 1 0 0 0 1 K
63.58 438.39 354.21 442.43 R
7 X
V
1 1 0 0 0 0 1 1 K
63.58 440.64 354.21 440.64 2 L
V
1.79 H
0 Z
0 X
N
0 0 0 1 0 0 0 1 K
31.64 207 386.86 481.5 C
1 1 0 0 0 0 1 1 K
0 16.15 Q
0 X
(Outline) 63.58 447.81 T
0 0 0 1 0 0 0 1 K
4 10.76 Q
(\245 Task migration on top of Mach) 79.72 412.38 T
1 1 0 0 0 0 1 1 K
0 0 0 1 0 0 0 1 K
(\245 Using Java for mobile objects) 79.72 391.75 T
1 1 0 0 0 0 1 1 K
0 0 0 1 0 0 0 1 K
(\245 MOA: protection of) 79.72 371.11 T
3 F
(logical) 179.22 371.11 T
4 F
( resources) 209.72 371.11 T
1 1 0 0 0 0 1 1 K
0 0 0 1 0 0 0 1 K
(\245 Conversant: protection of) 79.72 350.48 T
3 F
(physical) 209.73 350.48 T
4 F
( resources) 248.62 350.48 T
1 1 0 0 0 0 1 1 K
0 0 0 1 0 0 0 1 K
(\245 Summary) 79.72 329.85 T
1 1 0 0 0 0 1 1 K
0 0 0 1 0 0 0 1 K
1 1 0 0 0 0 1 1 K
0 0 0 1 0 0 0 1 K
405.14 207 760.36 481.5 C
0 0 0 1 0 0 0 1 K
651.62 231.4 728.31 239.48 R
7 X
V
1 1 0 0 0 0 1 1 K
0 5.38 Q
0 X
(7/20/98 10:08 - page 4 of 18) 659.21 235.89 T
0 0 0 1 0 0 0 1 K
528.03 234.51 632.76 239.11 R
7 X
V
1 1 0 0 0 0 1 1 K
0 X
(Mobile Objects and Agents) 544.18 235.52 T
0 0 0 1 0 0 0 1 K
1 0 0 0 0 1 1 1 K
0 8.07 Q
(The Open Gr) 436.53 233.91 T
(oup) 485.27 233.91 T
0 0 0 1 0 0 0 1 K
1 0 0 0 0 1 1 1 K
(Resear) 436.53 225.84 T
(c) 463.3 225.84 T
(h Institute) 467.7 225.84 T
0 0 0 1 0 0 0 1 K
1 1 0 0 0 0 1 1 K
437.08 248.67 727.71 458.58 R
7 X
V
0 0 0 1 0 0 0 1 K
437.08 438.39 727.71 442.43 C
0 0 0 1 0 0 0 1 K
437.08 438.39 727.71 442.43 R
7 X
V
1 1 0 0 0 0 1 1 K
437.08 440.64 727.71 440.64 2 L
V
1.79 H
0 Z
0 X
N
0 0 0 1 0 0 0 1 K
405.14 207 760.36 481.5 C
1 1 0 0 0 0 1 1 K
0 16.15 Q
0 X
(Task Migration on top of Mach) 437.08 447.81 T
0 0 0 1 0 0 0 1 K
4 10.76 Q
(\245 Developed by Milojicic et al. at University of) 453.22 412.38 T
1 1 0 0 0 0 1 1 K
0 0 0 1 0 0 0 1 K
(Kaiserslautern in 1991-1993) 459.68 400.72 T
1 1 0 0 0 0 1 1 K
0 0 0 1 0 0 0 1 K
(\245) 453.22 380.09 T
(Microkernel) 459.42 380.09 T
(task) 517.48 380.09 T
(level) 539.66 380.09 T
(addressed,) 564.22 380.09 T
(not) 619.91 380.09 T
(UNIX) 637.31 380.09 T
(process) 665.46 380.09 T
(level) 705.58 380.09 T
1 1 0 0 0 0 1 1 K
0 0 0 1 0 0 0 1 K
(\245) 453.22 359.45 T
(Three) 459.53 359.45 T
(versions) 490.2 359.45 T
(of) 532.82 359.45 T
(migration:) 544.34 359.45 T
(2) 594.14 359.45 T
(user) 602.67 359.45 T
(space) 626.15 359.45 T
(and) 657.41 359.45 T
(1) 677.91 359.45 T
(in-kernel) 686.44 359.45 T
1 1 0 0 0 0 1 1 K
0 0 0 1 0 0 0 1 K
(\245 App. profiling as a function of processing, IPC & VM) 453.22 338.82 T
1 1 0 0 0 0 1 1 K
0 0 0 1 0 0 0 1 K
(\245 Load distribution on a cluster of 5 PCs) 453.22 318.19 T
1 1 0 0 0 0 1 1 K
0 0 0 1 0 0 0 1 K
1 1 0 0 0 0 1 1 K
0 0 0 1 0 0 0 1 K
FMENDPAGE
%%EndPage: "mini" 1
%%Page: "mini" 2
612 792 1 FMBEGINPAGE
0 FrameSetSepColors
FrameNoSep
31.64 490.5 386.86 765 C
0 0 0 1 0 0 0 1 K
278.12 514.9 354.81 522.98 R
7 X
V
1 1 0 0 0 0 1 1 K
0 5.38 Q
0 X
(7/20/98 10:08 - page 5 of 18) 285.7 519.39 T
0 0 0 1 0 0 0 1 K
154.53 518.01 259.26 522.61 R
7 X
V
1 1 0 0 0 0 1 1 K
0 X
(Mobile Objects and Agents) 170.68 519.02 T
0 0 0 1 0 0 0 1 K
1 0 0 0 0 1 1 1 K
0 8.07 Q
(The Open Gr) 63.03 517.42 T
(oup) 111.77 517.42 T
0 0 0 1 0 0 0 1 K
1 0 0 0 0 1 1 1 K
(Resear) 63.03 509.34 T
(c) 89.8 509.34 T
(h Institute) 94.2 509.34 T
0 0 0 1 0 0 0 1 K
1 1 0 0 0 0 1 1 K
63.58 532.17 354.21 742.08 R
7 X
V
0 0 0 1 0 0 0 1 K
63.58 721.89 354.21 725.93 C
0 0 0 1 0 0 0 1 K
63.58 721.89 354.21 725.93 R
7 X
V
1 1 0 0 0 0 1 1 K
63.58 724.14 354.21 724.14 2 L
V
1.79 H
0 Z
0 X
N
0 0 0 1 0 0 0 1 K
31.64 490.5 386.86 765 C
1 1 0 0 0 0 1 1 K
0 16.15 Q
0 X
(Resource Management for Mach TM) 63.58 731.31 T
0 0 0 1 0 0 0 1 K
4 10.76 Q
(\245 Profiling processing, VM and IPC activities for local and) 79.72 677.49 T
1 1 0 0 0 0 1 1 K
0 0 0 1 0 0 0 1 K
(remote cases) 86.18 665.83 T
1 1 0 0 0 0 1 1 K
0 0 0 1 0 0 0 1 K
(\245 Extended Mach interfaces to export such information) 79.72 645.2 T
1 1 0 0 0 0 1 1 K
0 0 0 1 0 0 0 1 K
(\245 Used mainly for load distribution) 79.72 624.57 T
1 1 0 0 0 0 1 1 K
0 0 0 1 0 0 0 1 K
1 1 0 0 0 0 1 1 K
0 0 0 1 0 0 0 1 K
405.14 490.5 760.36 765 C
0 0 0 1 0 0 0 1 K
651.62 514.9 728.31 522.98 R
7 X
V
1 1 0 0 0 0 1 1 K
0 5.38 Q
0 X
(7/20/98 10:08 - page 6 of 18) 659.21 519.39 T
0 0 0 1 0 0 0 1 K
528.03 518.01 632.76 522.61 R
7 X
V
1 1 0 0 0 0 1 1 K
0 X
(Mobile Objects and Agents) 544.18 519.02 T
0 0 0 1 0 0 0 1 K
1 0 0 0 0 1 1 1 K
0 8.07 Q
(The Open Gr) 436.53 517.42 T
(oup) 485.27 517.42 T
0 0 0 1 0 0 0 1 K
1 0 0 0 0 1 1 1 K
(Resear) 436.53 509.34 T
(c) 463.3 509.34 T
(h Institute) 467.7 509.34 T
0 0 0 1 0 0 0 1 K
1 1 0 0 0 0 1 1 K
437.08 532.17 727.71 742.08 R
7 X
V
0 0 0 1 0 0 0 1 K
437.08 721.89 727.71 725.93 C
0 0 0 1 0 0 0 1 K
437.08 721.89 727.71 725.93 R
7 X
V
1 1 0 0 0 0 1 1 K
437.08 724.14 727.71 724.14 2 L
V
1.79 H
0 Z
0 X
N
0 0 0 1 0 0 0 1 K
405.14 490.5 760.36 765 C
1 1 0 0 0 0 1 1 K
0 16.15 Q
0 X
(Security for Mach Task Migration) 437.08 731.31 T
0 0 0 1 0 0 0 1 K
4 10.76 Q
(\245 Addressed as a part of exporting Task kernel ports) 453.22 677.49 T
1 1 0 0 0 0 1 1 K
0 0 0 1 0 0 0 1 K
(\245) 453.22 656.86 T
(Opens) 459.46 656.86 T
(up) 493.65 656.86 T
(security) 508.1 656.86 T
(hole) 547.66 656.86 T
(\050owner) 570.48 656.86 T
(of) 605.85 656.86 T
(the) 617.3 656.86 T
(kernel) 634.74 656.86 T
(port) 666.53 656.86 T
(controls) 687.55 656.86 T
1 1 0 0 0 0 1 1 K
0 0 0 1 0 0 0 1 K
(object\051) 459.68 645.2 T
1 1 0 0 0 0 1 1 K
0 0 0 1 0 0 0 1 K
(\245 Changes semantics of system calls, other applications) 453.22 624.57 T
1 1 0 0 0 0 1 1 K
0 0 0 1 0 0 0 1 K
(can hang - only applies in case of user space migration) 459.68 612.9 T
1 1 0 0 0 0 1 1 K
0 0 0 1 0 0 0 1 K
(\245 Similar to credentials transfer in most mobile object) 453.22 592.27 T
1 1 0 0 0 0 1 1 K
0 0 0 1 0 0 0 1 K
(systems) 459.68 580.61 T
1 1 0 0 0 0 1 1 K
0 0 0 1 0 0 0 1 K
1 1 0 0 0 0 1 1 K
0 0 0 1 0 0 0 1 K
31.64 207 386.86 481.5 C
0 0 0 1 0 0 0 1 K
278.12 231.4 354.81 239.48 R
7 X
V
1 1 0 0 0 0 1 1 K
0 5.38 Q
0 X
(7/20/98 10:08 - page 7 of 18) 285.7 235.89 T
0 0 0 1 0 0 0 1 K
154.53 234.51 259.26 239.11 R
7 X
V
1 1 0 0 0 0 1 1 K
0 X
(Mobile Objects and Agents) 170.68 235.52 T
0 0 0 1 0 0 0 1 K
1 0 0 0 0 1 1 1 K
0 8.07 Q
(The Open Gr) 63.03 233.91 T
(oup) 111.77 233.91 T
0 0 0 1 0 0 0 1 K
1 0 0 0 0 1 1 1 K
(Resear) 63.03 225.84 T
(c) 89.8 225.84 T
(h Institute) 94.2 225.84 T
0 0 0 1 0 0 0 1 K
1 1 0 0 0 0 1 1 K
63.58 248.67 354.21 458.58 R
7 X
V
0 0 0 1 0 0 0 1 K
63.58 438.39 354.21 442.43 C
0 0 0 1 0 0 0 1 K
63.58 438.39 354.21 442.43 R
7 X
V
1 1 0 0 0 0 1 1 K
63.58 440.64 354.21 440.64 2 L
V
1.79 H
0 Z
0 X
N
0 0 0 1 0 0 0 1 K
31.64 207 386.86 481.5 C
1 1 0 0 0 0 1 1 K
0 16.15 Q
0 X
(Java for Mobile Agents) 63.58 447.81 T
0 0 0 1 0 0 0 1 K
4 10.76 Q
(\245 Advantages) 79.72 412.38 T
1 1 0 0 0 0 1 1 K
0 0 0 1 0 0 0 1 K
(\245 Architecture neutral) 95.87 396.23 T
1 1 0 0 0 0 1 1 K
0 0 0 1 0 0 0 1 K
(\245 Dynamic linking) 95.87 380.09 T
1 1 0 0 0 0 1 1 K
0 0 0 1 0 0 0 1 K
(\245 Type safe) 95.87 363.94 T
1 1 0 0 0 0 1 1 K
0 0 0 1 0 0 0 1 K
(\245 Namespaces = protection domains) 95.87 347.79 T
1 1 0 0 0 0 1 1 K
0 0 0 1 0 0 0 1 K
(\245 Disadvantage: no resource management) 79.72 327.16 T
1 1 0 0 0 0 1 1 K
0 0 0 1 0 0 0 1 K
(\245 Synchronization and scheduling policies undefined) 95.87 311.01 T
1 1 0 0 0 0 1 1 K
0 0 0 1 0 0 0 1 K
(\245 Memory management mechanism undefined) 95.87 294.87 T
1 1 0 0 0 0 1 1 K
0 0 0 1 0 0 0 1 K
(\245 Denial of service attacks possible) 95.87 278.72 T
1 1 0 0 0 0 1 1 K
0 0 0 1 0 0 0 1 K
1 1 0 0 0 0 1 1 K
0 0 0 1 0 0 0 1 K
405.14 207 760.36 481.5 C
0 0 0 1 0 0 0 1 K
651.62 231.4 728.31 239.48 R
7 X
V
1 1 0 0 0 0 1 1 K
0 5.38 Q
0 X
(7/20/98 10:08 - page 8 of 18) 659.21 235.89 T
0 0 0 1 0 0 0 1 K
528.03 234.51 632.76 239.11 R
7 X
V
1 1 0 0 0 0 1 1 K
0 X
(Mobile Objects and Agents) 544.18 235.52 T
0 0 0 1 0 0 0 1 K
1 0 0 0 0 1 1 1 K
0 8.07 Q
(The Open Gr) 436.53 233.91 T
(oup) 485.27 233.91 T
0 0 0 1 0 0 0 1 K
1 0 0 0 0 1 1 1 K
(Resear) 436.53 225.84 T
(c) 463.3 225.84 T
(h Institute) 467.7 225.84 T
0 0 0 1 0 0 0 1 K
1 1 0 0 0 0 1 1 K
437.08 248.67 727.71 458.58 R
7 X
V
0 0 0 1 0 0 0 1 K
437.08 438.39 727.71 442.43 C
0 0 0 1 0 0 0 1 K
437.08 438.39 727.71 442.43 R
7 X
V
1 1 0 0 0 0 1 1 K
437.08 440.64 727.71 440.64 2 L
V
1.79 H
0 Z
0 X
N
0 0 0 1 0 0 0 1 K
405.14 207 760.36 481.5 C
1 1 0 0 0 0 1 1 K
0 16.15 Q
0 X
(MOA) 437.08 447.81 T
0 0 0 1 0 0 0 1 K
4 10.76 Q
(\245 Developed at TOG RI in 1996-1998) 453.22 412.38 T
1 1 0 0 0 0 1 1 K
0 0 0 1 0 0 0 1 K
(\245 Telescript-) 453.22 391.75 T
528.17 390.82 510.22 390.82 2 L
7 X
V
0.24 H
0 Z
0 X
N
0 F
(like) 510.22 391.75 T
4 F
( model:) 528.17 391.75 T
(\245) 469.37 375.6 T
(agents,) 475.42 375.6 T
(places,) 513.01 375.6 T
(comm) 549.39 375.6 T
(channels,) 580.98 375.6 T
(meet,) 629.33 375.6 T
(fork,) 658.54 375.6 T
(track,) 681.76 375.6 T
(etc.) 710.36 375.6 T
(\245 Compliant with Java Beans component model) 453.22 354.97 T
(\245 Four per agent configurable locating schemes) 453.22 334.34 T
(\245 Comm. channels maintained across migration) 453.22 313.7 T
1 1 0 0 0 0 1 1 K
0 0 0 1 0 0 0 1 K
1 1 0 0 0 0 1 1 K
0 0 0 1 0 0 0 1 K
FMENDPAGE
%%EndPage: "mini" 2
%%Page: "mini" 3
612 792 1 FMBEGINPAGE
0 FrameSetSepColors
FrameNoSep
31.64 490.5 386.86 765 C
0 0 0 1 0 0 0 1 K
278.12 514.9 354.81 522.98 R
7 X
V
1 1 0 0 0 0 1 1 K
0 5.38 Q
0 X
(7/20/98 10:08 - page 9 of 18) 285.7 519.39 T
0 0 0 1 0 0 0 1 K
154.53 518.01 259.26 522.61 R
7 X
V
1 1 0 0 0 0 1 1 K
0 X
(Mobile Objects and Agents) 170.68 519.02 T
0 0 0 1 0 0 0 1 K
1 0 0 0 0 1 1 1 K
0 8.07 Q
(The Open Gr) 63.03 517.42 T
(oup) 111.77 517.42 T
0 0 0 1 0 0 0 1 K
1 0 0 0 0 1 1 1 K
(Resear) 63.03 509.34 T
(c) 89.8 509.34 T
(h Institute) 94.2 509.34 T
0 0 0 1 0 0 0 1 K
1 1 0 0 0 0 1 1 K
63.58 532.17 354.21 742.08 R
7 X
V
0 0 0 1 0 0 0 1 K
63.58 721.89 354.21 725.93 C
0 0 0 1 0 0 0 1 K
63.58 721.89 354.21 725.93 R
7 X
V
1 1 0 0 0 0 1 1 K
63.58 724.14 354.21 724.14 2 L
V
1.79 H
0 Z
0 X
N
0 0 0 1 0 0 0 1 K
31.64 490.5 386.86 765 C
1 1 0 0 0 0 1 1 K
0 16.15 Q
0 X
(MOA Resource Management) 63.58 731.31 T
0 0 0 1 0 0 0 1 K
4 10.76 Q
(\245 Protects logical resources) 79.72 695.88 T
1 1 0 0 0 0 1 1 K
0 0 0 1 0 0 0 1 K
(\245 Imposing \050observing & enforcing\051 resource limits on) 79.72 675.25 T
1 1 0 0 0 0 1 1 K
0 0 0 1 0 0 0 1 K
(\245 agent: lifetime, places, hops, open channels, clones) 95.87 659.1 T
1 1 0 0 0 0 1 1 K
0 0 0 1 0 0 0 1 K
(\245) 95.87 642.95 T
(place:) 102.5 642.95 T
(lifetime,) 134.08 642.95 T
(nested) 174.02 642.95 T
(places,) 209.2 642.95 T
(open) 246.16 642.95 T
(channels,) 272.96 642.95 T
(agents) 321.9 642.95 T
1 1 0 0 0 0 1 1 K
0 0 0 1 0 0 0 1 K
(\245 agent environment: agents, places, channels) 95.87 626.81 T
1 1 0 0 0 0 1 1 K
0 0 0 1 0 0 0 1 K
1 1 0 0 0 0 1 1 K
0 0 0 1 0 0 0 1 K
180.99 563.16 217.32 587.38 R
0.22 H
0 Z
N
4 5.38 Q
(Security) 185.03 575.27 T
(manager) 185.03 569.89 T
(Agent) 128.52 571.24 T
(Host) 253.65 575.27 T
(Resource) 253.65 569.89 T
J
136.59 579.31 136.59 580.99 2 L
2 Z
N
[3.225 2.795] 3.225 I
136.59 580.99 136.59 601.85 2 L
N
J
136.59 601.85 136.59 603.53 2 L
N
J
136.59 603.53 138.27 603.53 2 L
N
[3.352 2.905] 3.352 I
138.27 603.53 260.04 603.53 2 L
N
J
260.04 603.53 261.73 603.53 2 L
N
J
261.73 584.26 262.91 584.26 261.73 580.12 260.54 584.26 4 Y
0.45 H
0 Z
N
261.73 584.26 262.91 584.26 261.73 580.12 260.54 584.26 4 Y
V
J
261.73 603.53 261.73 601.85 2 L
0.22 H
2 Z
N
[3.409 2.955] 3.409 I
261.73 601.85 261.73 586.17 2 L
N
J
261.73 586.17 261.73 584.48 2 L
N
J
193.1 611.6 205.21 595.46 2 L
1.35 H
N
205.21 611.6 193.1 595.46 2 L
N
176.04 575.27 176.04 576.46 180.18 575.27 176.04 574.09 4 Y
0.45 H
0 Z
N
176.04 575.27 176.04 576.46 180.18 575.27 176.04 574.09 4 Y
V
148.7 575.27 175.82 575.27 2 L
0.22 H
2 Z
N
244.67 575.27 244.67 576.46 248.8 575.27 244.67 574.09 4 Y
0.45 H
0 Z
N
244.67 575.27 244.67 576.46 248.8 575.27 244.67 574.09 4 Y
V
217.32 575.27 244.44 575.27 2 L
0.22 H
2 Z
N
(The security manager interposes access control and resource) 136.53 547.19 T
(limits between the agent and the resources.) 152.74 541.64 T
405.14 490.5 760.36 765 C
0 0 0 1 0 0 0 1 K
651.62 514.9 728.31 522.98 R
7 X
V
1 1 0 0 0 0 1 1 K
0 5.38 Q
0 X
(7/20/98 10:08 - page 10 of 18) 656.21 519.39 T
0 0 0 1 0 0 0 1 K
528.03 518.01 632.76 522.61 R
7 X
V
1 1 0 0 0 0 1 1 K
0 X
(Mobile Objects and Agents) 544.18 519.02 T
0 0 0 1 0 0 0 1 K
1 0 0 0 0 1 1 1 K
0 8.07 Q
(The Open Gr) 436.53 517.42 T
(oup) 485.27 517.42 T
0 0 0 1 0 0 0 1 K
1 0 0 0 0 1 1 1 K
(Resear) 436.53 509.34 T
(c) 463.3 509.34 T
(h Institute) 467.7 509.34 T
0 0 0 1 0 0 0 1 K
1 1 0 0 0 0 1 1 K
437.08 532.17 727.71 742.08 R
7 X
V
0 0 0 1 0 0 0 1 K
437.08 721.89 727.71 725.93 C
0 0 0 1 0 0 0 1 K
437.08 721.89 727.71 725.93 R
7 X
V
1 1 0 0 0 0 1 1 K
437.08 724.14 727.71 724.14 2 L
V
1.79 H
0 Z
0 X
N
0 0 0 1 0 0 0 1 K
405.14 490.5 760.36 765 C
1 1 0 0 0 0 1 1 K
0 16.15 Q
0 X
(MOA Security) 437.08 731.31 T
0 0 0 1 0 0 0 1 K
4 10.76 Q
(\245 Relies on security manager per system and per agent) 453.22 695.88 T
1 1 0 0 0 0 1 1 K
0 0 0 1 0 0 0 1 K
(\245 Thread switching for executing non-trusted requests) 453.22 675.25 T
1 1 0 0 0 0 1 1 K
0 0 0 1 0 0 0 1 K
(\245 Digital signatures used for signing Agent\325s JAR files) 453.22 654.61 T
1 1 0 0 0 0 1 1 K
0 0 0 1 0 0 0 1 K
(\245 Agent names reflect its original agent system name) 453.22 633.98 T
1 1 0 0 0 0 1 1 K
0 0 0 1 0 0 0 1 K
1 1 0 0 0 0 1 1 K
0 0 0 1 0 0 0 1 K
506.05 555.09 554.49 611.6 R
7 X
V
0.22 H
2 Z
0 X
N
594.86 555.09 643.3 611.6 R
7 X
V
0 X
N
4 5.38 Q
(Agent Namespace) 506.05 547.02 T
(Trusted Namespace) 594.86 547.02 T
90 450 6.05 6.05 520.18 593.44 A
90 450 6.05 6.05 528.26 573.26 A
90 450 6.05 6.05 540.36 589.4 A
(T1) 518.16 591.42 T
(T2) 538.35 587.38 T
(T3) 526.24 571.24 T
563.48 595.46 563.48 594.27 559.34 595.46 563.48 596.64 4 Y
0.45 H
0 Z
N
563.48 595.46 563.48 594.27 559.34 595.46 563.48 596.64 4 Y
V
585.87 595.46 585.87 596.64 590.01 595.46 585.87 594.27 4 Y
N
585.87 595.46 585.87 596.64 590.01 595.46 585.87 594.27 4 Y
V
563.7 595.46 585.65 595.46 2 L
0.22 H
N
90 450 6.05 6.05 613.02 581.33 A
90 450 6.05 6.05 625.14 597.47 A
90 450 6.05 6.05 621.1 565.18 A
(S1) 623.12 595.46 T
(S2) 611.01 579.31 T
(S3) 619.08 563.16 T
(Resource) 566.6 587.38 T
(request) 566.6 582 T
2 Z
90 450 6.05 6.05 665.5 593.44 A
(A thread) 675.59 591.42 T
31.64 207 386.86 481.5 C
0 0 0 1 0 0 0 1 K
278.12 231.4 354.81 239.48 R
7 X
V
1 1 0 0 0 0 1 1 K
0 5.38 Q
0 X
(7/20/98 10:08 - page 11 of 18) 282.71 235.89 T
0 0 0 1 0 0 0 1 K
154.53 234.51 259.26 239.11 R
7 X
V
1 1 0 0 0 0 1 1 K
0 X
(Mobile Objects and Agents) 170.68 235.52 T
0 0 0 1 0 0 0 1 K
1 0 0 0 0 1 1 1 K
0 8.07 Q
(The Open Gr) 63.03 233.91 T
(oup) 111.77 233.91 T
0 0 0 1 0 0 0 1 K
1 0 0 0 0 1 1 1 K
(Resear) 63.03 225.84 T
(c) 89.8 225.84 T
(h Institute) 94.2 225.84 T
0 0 0 1 0 0 0 1 K
1 1 0 0 0 0 1 1 K
63.58 248.67 354.21 458.58 R
7 X
V
0 0 0 1 0 0 0 1 K
63.58 438.39 354.21 442.43 C
0 0 0 1 0 0 0 1 K
63.58 438.39 354.21 442.43 R
7 X
V
1 1 0 0 0 0 1 1 K
63.58 440.64 354.21 440.64 2 L
V
1.79 H
0 Z
0 X
N
0 0 0 1 0 0 0 1 K
31.64 207 386.86 481.5 C
1 1 0 0 0 0 1 1 K
0 16.15 Q
0 X
(Conversant) 63.58 447.81 T
0 0 0 1 0 0 0 1 K
4 10.76 Q
(\245 Active networks prototype, funded by DARPA, \32497-2000) 79.72 393.99 T
1 1 0 0 0 0 1 1 K
0 0 0 1 0 0 0 1 K
(\245 QoS and safety concerns) 79.72 373.36 T
1 1 0 0 0 0 1 1 K
0 0 0 1 0 0 0 1 K
(\245 Addresses lower level of abstraction) 79.72 352.73 T
1 1 0 0 0 0 1 1 K
0 0 0 1 0 0 0 1 K
(\245 e.g. protocol stacks, and device drivers) 95.87 336.58 T
1 1 0 0 0 0 1 1 K
0 0 0 1 0 0 0 1 K
(\245 Goal is to protect both physical and logical resources) 79.72 315.95 T
1 1 0 0 0 0 1 1 K
0 0 0 1 0 0 0 1 K
(\245 Currently not focusing on authentication problem) 79.72 295.32 T
1 1 0 0 0 0 1 1 K
0 0 0 1 0 0 0 1 K
1 1 0 0 0 0 1 1 K
0 0 0 1 0 0 0 1 K
405.14 207 760.36 481.5 C
0 0 0 1 0 0 0 1 K
651.62 231.4 728.31 239.48 R
7 X
V
1 1 0 0 0 0 1 1 K
0 5.38 Q
0 X
(7/20/98 10:08 - page 12 of 18) 656.21 235.89 T
0 0 0 1 0 0 0 1 K
528.03 234.51 632.76 239.11 R
7 X
V
1 1 0 0 0 0 1 1 K
0 X
(Mobile Objects and Agents) 544.18 235.52 T
0 0 0 1 0 0 0 1 K
1 0 0 0 0 1 1 1 K
0 8.07 Q
(The Open Gr) 436.53 233.91 T
(oup) 485.27 233.91 T
0 0 0 1 0 0 0 1 K
1 0 0 0 0 1 1 1 K
(Resear) 436.53 225.84 T
(c) 463.3 225.84 T
(h Institute) 467.7 225.84 T
0 0 0 1 0 0 0 1 K
1 1 0 0 0 0 1 1 K
437.08 248.67 727.71 458.58 R
7 X
V
0 0 0 1 0 0 0 1 K
437.08 438.39 727.71 442.43 C
0 0 0 1 0 0 0 1 K
437.08 438.39 727.71 442.43 R
7 X
V
1 1 0 0 0 0 1 1 K
437.08 440.64 727.71 440.64 2 L
V
1.79 H
0 Z
0 X
N
0 0 0 1 0 0 0 1 K
405.14 207 760.36 481.5 C
1 1 0 0 0 0 1 1 K
0 16.15 Q
0 X
(Conversant Resource Management) 437.08 447.81 T
0 0 0 1 0 0 0 1 K
4 10.76 Q
(\245 First order attacks) 453.22 412.38 T
1 1 0 0 0 0 1 1 K
0 0 0 1 0 0 0 1 K
(\245 Carried out with relative ease, easy to detect) 469.37 396.23 T
1 1 0 0 0 0 1 1 K
0 0 0 1 0 0 0 1 K
(\245 on system heap) 469.37 380.09 T
1 1 0 0 0 0 1 1 K
0 0 0 1 0 0 0 1 K
(\245 endless loops, due to Java scheduling) 469.37 363.94 T
1 1 0 0 0 0 1 1 K
0 0 0 1 0 0 0 1 K
(\245 Second order attacks) 453.22 343.31 T
1 1 0 0 0 0 1 1 K
0 0 0 1 0 0 0 1 K
(\245 Subtle, difficult to prevent, harder to implement) 469.37 327.16 T
1 1 0 0 0 0 1 1 K
0 0 0 1 0 0 0 1 K
(\245 e.g. garbage collection activation and fragmentation) 469.37 311.01 T
1 1 0 0 0 0 1 1 K
0 0 0 1 0 0 0 1 K
(\245) 453.22 290.38 T
(Possible) 459.19 290.38 T
(solutions:) 502.08 290.38 T
(a) 549.75 290.38 T
(process) 557.94 290.38 T
(per) 597.83 290.38 T
(JVM,) 615.59 290.38 T
(a) 642.32 290.38 T
(thread) 650.51 290.38 T
(per) 683.23 290.38 T
(JVM,) 700.99 290.38 T
1 1 0 0 0 0 1 1 K
0 0 0 1 0 0 0 1 K
(and direct JVM modifications) 459.68 278.72 T
1 1 0 0 0 0 1 1 K
0 0 0 1 0 0 0 1 K
1 1 0 0 0 0 1 1 K
0 0 0 1 0 0 0 1 K
FMENDPAGE
%%EndPage: "mini" 3
%%Page: "mini" 4
612 792 1 FMBEGINPAGE
0 FrameSetSepColors
FrameNoSep
31.64 490.5 386.86 765 C
0 0 0 1 0 0 0 1 K
278.12 514.9 354.81 522.98 R
7 X
V
1 1 0 0 0 0 1 1 K
0 5.38 Q
0 X
(7/20/98 10:08 - page 13 of 18) 282.71 519.39 T
0 0 0 1 0 0 0 1 K
154.53 518.01 259.26 522.61 R
7 X
V
1 1 0 0 0 0 1 1 K
0 X
(Mobile Objects and Agents) 170.68 519.02 T
0 0 0 1 0 0 0 1 K
1 0 0 0 0 1 1 1 K
0 8.07 Q
(The Open Gr) 63.03 517.42 T
(oup) 111.77 517.42 T
0 0 0 1 0 0 0 1 K
1 0 0 0 0 1 1 1 K
(Resear) 63.03 509.34 T
(c) 89.8 509.34 T
(h Institute) 94.2 509.34 T
0 0 0 1 0 0 0 1 K
1 1 0 0 0 0 1 1 K
63.58 532.17 354.21 742.08 R
7 X
V
0 0 0 1 0 0 0 1 K
63.58 721.89 354.21 725.93 C
0 0 0 1 0 0 0 1 K
63.58 721.89 354.21 725.93 R
7 X
V
1 1 0 0 0 0 1 1 K
63.58 724.14 354.21 724.14 2 L
V
1.79 H
0 Z
0 X
N
0 0 0 1 0 0 0 1 K
31.64 490.5 386.86 765 C
1 1 0 0 0 0 1 1 K
0 16.15 Q
0 X
(Conversant Solution) 63.58 731.31 T
0 0 0 1 0 0 0 1 K
4 10.76 Q
(\245) 79.72 695.88 T
3 F
(Modify JVM) 86.48 695.88 T
4 F
( to do resource control) 142.7 695.88 T
1 1 0 0 0 0 1 1 K
0 0 0 1 0 0 0 1 K
(\245 Do not change the language\325s semantics) 95.87 679.73 T
1 1 0 0 0 0 1 1 K
0 0 0 1 0 0 0 1 K
(\245 Modify JVM such that it uses pthreads) 79.72 659.1 T
1 1 0 0 0 0 1 1 K
0 0 0 1 0 0 0 1 K
(\245 Modify host OS to implement CPU accrual) 79.72 638.47 T
1 1 0 0 0 0 1 1 K
0 0 0 1 0 0 0 1 K
(\245 Bind one phsyical heap to each namespace) 79.72 617.84 T
1 1 0 0 0 0 1 1 K
0 0 0 1 0 0 0 1 K
(\245 Have a seperate garbage collector for each heap) 95.87 601.69 T
1 1 0 0 0 0 1 1 K
0 0 0 1 0 0 0 1 K
1 1 0 0 0 0 1 1 K
0 0 0 1 0 0 0 1 K
405.14 490.5 760.36 765 C
0 0 0 1 0 0 0 1 K
651.62 514.9 728.31 522.98 R
7 X
V
1 1 0 0 0 0 1 1 K
0 5.38 Q
0 X
(7/20/98 10:08 - page 14 of 18) 656.21 519.39 T
0 0 0 1 0 0 0 1 K
528.03 518.01 632.76 522.61 R
7 X
V
1 1 0 0 0 0 1 1 K
0 X
(Mobile Objects and Agents) 544.18 519.02 T
0 0 0 1 0 0 0 1 K
1 0 0 0 0 1 1 1 K
0 8.07 Q
(The Open Gr) 436.53 517.42 T
(oup) 485.27 517.42 T
0 0 0 1 0 0 0 1 K
1 0 0 0 0 1 1 1 K
(Resear) 436.53 509.34 T
(c) 463.3 509.34 T
(h Institute) 467.7 509.34 T
0 0 0 1 0 0 0 1 K
1 1 0 0 0 0 1 1 K
437.08 532.17 727.71 742.08 R
7 X
V
0 0 0 1 0 0 0 1 K
437.08 721.89 727.71 725.93 C
0 0 0 1 0 0 0 1 K
437.08 721.89 727.71 725.93 R
7 X
V
1 1 0 0 0 0 1 1 K
437.08 724.14 727.71 724.14 2 L
V
1.79 H
0 Z
0 X
N
0 0 0 1 0 0 0 1 K
405.14 490.5 760.36 765 C
1 1 0 0 0 0 1 1 K
0 16.15 Q
0 X
(Conversant Solution) 437.08 731.31 T
0 0 0 1 0 0 0 1 K
4 10.76 Q
(\245 Problem: \322system classes\323 are shared) 453.22 695.88 T
1 1 0 0 0 0 1 1 K
0 0 0 1 0 0 0 1 K
(\245 Solution: Instantiate \322system classes\323 in private heaps) 453.22 675.25 T
1 1 0 0 0 0 1 1 K
437.08 532.17 727.71 742.08 C
0 0 0 1 0 0 0 1 K
485.51 554.95 679.27 671.66 C
0 0 0 1 0 0 0 1 K
537.01 599.22 617.74 619.4 R
5 X
V
0.22 H
0 Z
0 X
N
541.04 619.4 557.19 655.73 R
5 X
V
0 X
N
569.3 619.4 585.45 655.73 R
5 X
V
0 X
N
597.56 619.4 613.7 655.73 R
5 X
V
0 X
N
537.01 619.4 537.01 599.22 2 L
5 X
V
2 Z
0 X
N
J
617.74 619.4 619.42 619.4 2 L
N
[3.656 3.169] 3.656 I
619.42 619.4 636.24 619.4 2 L
N
J
636.24 619.4 637.92 619.4 2 L
N
J
637.92 635.55 636.24 635.55 2 L
N
[3.464 3.002] 3.464 I
636.24 635.55 542.73 635.55 2 L
N
J
542.73 635.55 541.04 635.55 2 L
N
J
557.19 631.51 557.19 619.4 2 L
5 X
V
0 X
N
569.3 627.47 569.3 619.4 2 L
5 X
V
0 X
N
597.56 623.44 597.56 619.4 2 L
5 X
V
0 X
N
585.45 627.47 585.45 619.4 2 L
5 X
V
0 X
N
0 Z
90 450 10.09 6.05 502.69 581.05 A
553.15 575 569.3 587.11 R
4 X
V
0 X
N
2 5.38 Q
(Pri) 625.81 643.62 T
(v) 631.96 643.62 T
(ate User Space) 634.52 643.62 T
(Pri) 625.81 623.44 T
(v) 631.96 623.44 T
(ate System Space) 634.52 623.44 T
(Name) 516.82 583.43 T
(space) 516.98 579.39 T
(Heap) 574.09 580.2 T
90 450 52.48 21.53 577.37 612.67 A
90 450 12.11 6.05 549.12 645.64 A
90 450 12.11 6.05 577.37 645.64 A
90 450 12.11 6.05 605.63 645.64 A
J
593.74 605.79 597.78 605.79 597.78 601.76 593.74 601.76 4 Y
1 X
V
J
593.74 605.79 597.78 605.79 597.78 601.76 593.74 601.76 4 Y
J
593.74 604 593.74 605.79 595.54 605.79 3 L
0 X
N
[0.598 0.448] 0.598 I
595.54 605.79 595.99 605.79 2 L
N
J
595.99 605.79 597.78 605.79 597.78 604 3 L
N
[0.598 0.448] 0.598 I
597.78 604 597.78 603.55 2 L
N
J
597.78 603.55 597.78 601.76 595.99 601.76 3 L
N
[0.598 0.448] 0.598 I
595.99 601.76 595.54 601.76 2 L
N
J
595.54 601.76 593.74 601.76 593.74 603.55 3 L
N
[0.598 0.448] 0.598 I
593.74 603.55 593.74 604 2 L
N
J
545.08 621.49 549.12 625.53 R
1 X
V
0 X
N
603.46 643.62 607.5 647.66 R
1 X
V
0 X
N
545.08 643.62 549.12 647.66 R
1 X
V
0 X
N
J
605.63 638.67 604.44 638.67 605.63 642.81 606.82 638.67 4 Y
0.45 H
N
605.63 638.67 604.44 638.67 605.63 642.81 606.82 638.67 4 Y
V
J
605.63 611.33 605.63 613.01 2 L
0.22 H
2 Z
N
[3.674 3.184] 3.674 I
605.63 613.01 605.63 636.76 2 L
N
J
605.63 636.76 605.63 638.45 2 L
N
J
597.63 604 598.88 605.13 2 L
N
[2.642 2.29] 2.642 I
598.88 605.13 604.23 609.97 2 L
N
J
604.23 609.97 605.48 611.1 2 L
N
J
624.99 584.64 629.03 584.64 629.03 580.6 624.99 580.6 4 Y
1 X
V
J
624.99 584.64 629.03 584.64 629.03 580.6 624.99 580.6 4 Y
J
624.99 582.84 624.99 584.64 626.78 584.64 3 L
0 Z
0 X
N
[0.598 0.448] 0.598 I
626.78 584.64 627.23 584.64 2 L
N
J
627.23 584.64 629.03 584.64 629.03 582.84 3 L
N
[0.598 0.448] 0.598 I
629.03 582.84 629.03 582.4 2 L
N
J
629.03 582.4 629.03 580.6 627.23 580.6 3 L
N
[0.598 0.448] 0.598 I
627.23 580.6 626.78 580.6 2 L
N
J
626.78 580.6 624.99 580.6 624.99 582.4 3 L
N
[0.598 0.448] 0.598 I
624.99 582.4 624.99 582.84 2 L
N
J
602.04 584.41 606.08 584.41 606.08 580.38 602.04 580.38 4 Y
1 X
V
J
602.04 584.41 606.08 584.41 606.08 580.38 602.04 580.38 4 Y
J
602.04 582.62 602.04 584.41 603.84 584.41 3 L
0 X
N
[0.598 0.448] 0.598 I
603.84 584.41 604.28 584.41 2 L
N
J
604.28 584.41 606.08 584.41 606.08 582.62 3 L
N
[0.598 0.448] 0.598 I
606.08 582.62 606.08 582.17 2 L
N
J
606.08 582.17 606.08 580.38 604.28 580.38 3 L
N
[0.598 0.448] 0.598 I
604.28 580.38 603.84 580.38 2 L
N
J
603.84 580.38 602.04 580.38 602.04 582.17 3 L
N
[0.598 0.448] 0.598 I
602.04 582.17 602.04 582.62 2 L
N
J
619.59 582.32 619.59 583.51 623.73 582.32 619.59 581.14 4 Y
0.45 H
N
619.59 582.32 619.59 583.51 623.73 582.32 619.59 581.14 4 Y
V
606.6 582.32 619.37 582.32 2 L
1 X
V
0.22 H
2 Z
0 X
N
(A references B) 634.63 580.83 T
(A) 602.49 574.1 T
(B) 625.29 574.47 T
2 4.04 Q
(H1) 546.2 659.7 T
(H2) 574.45 659.7 T
(H3) 602.71 659.7 T
(L1) 551.66 646.31 T
(L2) 575.95 645.56 T
(L3) 608.54 646.68 T
(L0) 528.93 609.98 T
(H4) 573.34 605.94 T
437.08 532.17 727.71 742.08 C
405.14 490.5 760.36 765 C
0 0 0 1 0 0 0 1 K
31.64 207 386.86 481.5 C
0 0 0 1 0 0 0 1 K
278.12 231.4 354.81 239.48 R
7 X
V
1 1 0 0 0 0 1 1 K
0 5.38 Q
0 X
(7/20/98 10:08 - page 15 of 18) 282.71 235.89 T
0 0 0 1 0 0 0 1 K
154.53 234.51 259.26 239.11 R
7 X
V
1 1 0 0 0 0 1 1 K
0 X
(Mobile Objects and Agents) 170.68 235.52 T
0 0 0 1 0 0 0 1 K
1 0 0 0 0 1 1 1 K
0 8.07 Q
(The Open Gr) 63.03 233.91 T
(oup) 111.77 233.91 T
0 0 0 1 0 0 0 1 K
1 0 0 0 0 1 1 1 K
(Resear) 63.03 225.84 T
(c) 89.8 225.84 T
(h Institute) 94.2 225.84 T
0 0 0 1 0 0 0 1 K
1 1 0 0 0 0 1 1 K
63.58 248.67 354.21 458.58 R
7 X
V
0 0 0 1 0 0 0 1 K
63.58 438.39 354.21 442.43 C
0 0 0 1 0 0 0 1 K
63.58 438.39 354.21 442.43 R
7 X
V
1 1 0 0 0 0 1 1 K
63.58 440.64 354.21 440.64 2 L
V
1.79 H
0 Z
0 X
N
0 0 0 1 0 0 0 1 K
31.64 207 386.86 481.5 C
1 1 0 0 0 0 1 1 K
0 16.15 Q
0 X
(Conversant Solution) 63.58 447.81 T
0 0 0 1 0 0 0 1 K
4 10.76 Q
(\245 Problem: Cannot allow a reference across different) 79.72 412.38 T
1 1 0 0 0 0 1 1 K
0 0 0 1 0 0 0 1 K
(heaps) 86.18 400.72 T
1 1 0 0 0 0 1 1 K
0 0 0 1 0 0 0 1 K
(\245 JVM can crash) 95.87 384.57 T
1 1 0 0 0 0 1 1 K
0 0 0 1 0 0 0 1 K
(\245 Denial of service attacks) 95.87 368.42 T
1 1 0 0 0 0 1 1 K
0 0 0 1 0 0 0 1 K
(\245 Solution: Run-time checks ensure crossreferences are) 79.72 347.79 T
1 1 0 0 0 0 1 1 K
0 0 0 1 0 0 0 1 K
(not created) 86.18 336.13 T
1 1 0 0 0 0 1 1 K
0 0 0 1 0 0 0 1 K
158.9 257.63 258.88 332.54 C
0 0 0 1 0 0 0 1 K
162.94 258.09 255.78 286.35 8.07 RR
0.45 H
0 Z
0 X
N
213.85 286.35 243.67 316.4 8.07 RR
N
2 6.28 Q
(System heap) 191.2 272.97 T
(Pri) 211.51 321.75 T
(v) 218.68 321.75 T
(ate heap) 221.66 321.75 T
(Pri) 171.01 321.86 T
(v) 178.18 321.86 T
(ate heap) 181.17 321.86 T
201.62 282.16 202.62 282.97 203.03 280.42 200.61 281.34 4 Y
N
201.62 282.16 202.62 282.97 203.03 280.42 200.61 281.34 4 Y
V
190.25 296.21 201.48 282.33 2 L
2 Z
N
227.53 296.21 235.6 304.29 R
4 X
V
0 X
N
174.08 286.49 203.31 316.4 8.07 RR
0 Z
N
J
225.42 300.25 225.42 301.21 227.08 300.25 225.42 299.29 4 Y
N
225.42 300.25 225.42 301.21 227.08 300.25 225.42 299.29 4 Y
V
J
191.2 300.25 192.88 300.25 2 L
0.22 H
2 Z
N
[3.676 3.186] 3.676 I
192.88 300.25 223.51 300.25 2 L
N
J
223.51 300.25 225.2 300.25 2 L
N
J
226.26 294.53 225.5 295.1 227.26 295.85 227.03 293.95 4 Y
0.45 H
0 Z
N
226.26 294.53 225.5 295.1 227.26 295.85 227.03 293.95 4 Y
V
215.42 280.07 226.13 294.35 2 L
0.22 H
2 Z
N
5 F
(a) 203.16 322.08 T
(b) 244.57 321.33 T
31.64 207 386.86 481.5 C
0 0 0 1 0 0 0 1 K
405.14 207 760.36 481.5 C
0 0 0 1 0 0 0 1 K
651.62 231.4 728.31 239.48 R
7 X
V
1 1 0 0 0 0 1 1 K
0 5.38 Q
0 X
(7/20/98 10:08 - page 16 of 18) 656.21 235.89 T
0 0 0 1 0 0 0 1 K
528.03 234.51 632.76 239.11 R
7 X
V
1 1 0 0 0 0 1 1 K
0 X
(Mobile Objects and Agents) 544.18 235.52 T
0 0 0 1 0 0 0 1 K
1 0 0 0 0 1 1 1 K
0 8.07 Q
(The Open Gr) 436.53 233.91 T
(oup) 485.27 233.91 T
0 0 0 1 0 0 0 1 K
1 0 0 0 0 1 1 1 K
(Resear) 436.53 225.84 T
(c) 463.3 225.84 T
(h Institute) 467.7 225.84 T
0 0 0 1 0 0 0 1 K
1 1 0 0 0 0 1 1 K
437.08 248.67 727.71 458.58 R
7 X
V
0 0 0 1 0 0 0 1 K
437.08 438.39 727.71 442.43 C
0 0 0 1 0 0 0 1 K
437.08 438.39 727.71 442.43 R
7 X
V
1 1 0 0 0 0 1 1 K
437.08 440.64 727.71 440.64 2 L
V
1.79 H
0 Z
0 X
N
0 0 0 1 0 0 0 1 K
405.14 207 760.36 481.5 C
1 1 0 0 0 0 1 1 K
0 16.15 Q
0 X
(Summary of Resource Management) 437.08 447.81 T
0 0 0 1 0 0 0 1 K
4 10.76 Q
(\245) 453.22 393.99 T
(Early) 459.55 393.99 T
(systems) 486.63 393.99 T
(addressed) 528.67 393.99 T
(resources) 581.49 393.99 T
(in) 631.31 393.99 T
(an) 642.24 393.99 T
(ad) 656.78 393.99 T
(hoc) 671.31 393.99 T
(manner) 691.22 393.99 T
1 1 0 0 0 0 1 1 K
0 0 0 1 0 0 0 1 K
(\245 Recent systems address QoS in a systematic manner) 453.22 373.36 T
1 1 0 0 0 0 1 1 K
0 0 0 1 0 0 0 1 K
(\245 Separation of logical and physical resources) 453.22 352.73 T
1 1 0 0 0 0 1 1 K
0 0 0 1 0 0 0 1 K
1 1 0 0 0 0 1 1 K
0 0 0 1 0 0 0 1 K
FMENDPAGE
%%EndPage: "mini" 4
%%Page: "mini" 5
612 792 1 FMBEGINPAGE
0 FrameSetSepColors
FrameNoSep
31.64 490.5 386.86 765 C
0 0 0 1 0 0 0 1 K
278.12 514.9 354.81 522.98 R
7 X
V
1 1 0 0 0 0 1 1 K
0 5.38 Q
0 X
(7/20/98 10:08 - page 17 of 18) 282.71 519.39 T
0 0 0 1 0 0 0 1 K
154.53 518.01 259.26 522.61 R
7 X
V
1 1 0 0 0 0 1 1 K
0 X
(Mobile Objects and Agents) 170.68 519.02 T
0 0 0 1 0 0 0 1 K
1 0 0 0 0 1 1 1 K
0 8.07 Q
(The Open Gr) 63.03 517.42 T
(oup) 111.77 517.42 T
0 0 0 1 0 0 0 1 K
1 0 0 0 0 1 1 1 K
(Resear) 63.03 509.34 T
(c) 89.8 509.34 T
(h Institute) 94.2 509.34 T
0 0 0 1 0 0 0 1 K
1 1 0 0 0 0 1 1 K
63.58 532.17 354.21 742.08 R
7 X
V
0 0 0 1 0 0 0 1 K
63.58 721.89 354.21 725.93 C
0 0 0 1 0 0 0 1 K
63.58 721.89 354.21 725.93 R
7 X
V
1 1 0 0 0 0 1 1 K
63.58 724.14 354.21 724.14 2 L
V
1.79 H
0 Z
0 X
N
0 0 0 1 0 0 0 1 K
31.64 490.5 386.86 765 C
1 1 0 0 0 0 1 1 K
0 16.15 Q
0 X
(Summary of Security) 63.58 731.31 T
0 0 0 1 0 0 0 1 K
4 10.76 Q
(\245 Early systems not focused on security \050Mach TM) 79.72 695.88 T
2 12.56 Q
(\051) 318.58 695.88 T
1 1 0 0 0 0 1 1 K
0 0 0 1 0 0 0 1 K
4 10.76 Q
(\245) 79.72 675.25 T
(Early) 86.19 675.25 T
(middleware) 113.41 675.25 T
(systems) 171.14 675.25 T
(didn\325t) 213.31 675.25 T
(address) 241.74 675.25 T
(resource) 282.73 675.25 T
(mgmt) 327.3 675.25 T
1 1 0 0 0 0 1 1 K
0 0 0 1 0 0 0 1 K
(\245 Recent mobile object systems address both extensively) 79.72 654.61 T
1 1 0 0 0 0 1 1 K
0 0 0 1 0 0 0 1 K
(\245 Authorization still evolving) 79.72 633.98 T
1 1 0 0 0 0 1 1 K
0 0 0 1 0 0 0 1 K
(\245 Protecting mobile object still open issue) 79.72 613.35 T
1 1 0 0 0 0 1 1 K
0 0 0 1 0 0 0 1 K
1 1 0 0 0 0 1 1 K
0 0 0 1 0 0 0 1 K
405.14 490.5 760.36 765 C
0 0 0 1 0 0 0 1 K
651.62 514.9 728.31 522.98 R
7 X
V
1 1 0 0 0 0 1 1 K
0 5.38 Q
0 X
(7/20/98 10:08 - page 18 of 18) 656.21 519.39 T
0 0 0 1 0 0 0 1 K
528.03 518.01 632.76 522.61 R
7 X
V
1 1 0 0 0 0 1 1 K
0 X
(Mobile Objects and Agents) 544.18 519.02 T
0 0 0 1 0 0 0 1 K
1 0 0 0 0 1 1 1 K
0 8.07 Q
(The Open Gr) 436.53 517.42 T
(oup) 485.27 517.42 T
0 0 0 1 0 0 0 1 K
1 0 0 0 0 1 1 1 K
(Resear) 436.53 509.34 T
(c) 463.3 509.34 T
(h Institute) 467.7 509.34 T
0 0 0 1 0 0 0 1 K
1 1 0 0 0 0 1 1 K
437.08 532.17 727.71 742.08 R
7 X
V
0 0 0 1 0 0 0 1 K
437.08 721.89 727.71 725.93 C
0 0 0 1 0 0 0 1 K
437.08 721.89 727.71 725.93 R
7 X
V
1 1 0 0 0 0 1 1 K
437.08 724.14 727.71 724.14 2 L
V
1.79 H
0 Z
0 X
N
0 0 0 1 0 0 0 1 K
405.14 490.5 760.36 765 C
1 1 0 0 0 0 1 1 K
0 16.15 Q
0 X
(Conclusion) 437.08 731.31 T
0 0 0 1 0 0 0 1 K
4 10.76 Q
(\245 Security and resource management continue to be) 453.22 677.49 T
1 1 0 0 0 0 1 1 K
0 0 0 1 0 0 0 1 K
(important aspects of mobility) 459.68 665.83 T
1 1 0 0 0 0 1 1 K
0 0 0 1 0 0 0 1 K
(\245 Addressed at various levels of system) 453.22 645.2 T
1 1 0 0 0 0 1 1 K
0 0 0 1 0 0 0 1 K
(\050OS, middleware, JVM, application\051) 459.68 633.54 T
1 1 0 0 0 0 1 1 K
0 0 0 1 0 0 0 1 K
(\245 Secure QoS requires combination of techniques at all) 453.22 612.9 T
1 1 0 0 0 0 1 1 K
0 0 0 1 0 0 0 1 K
(levels) 459.68 601.24 T
1 1 0 0 0 0 1 1 K
0 0 0 1 0 0 0 1 K
(\245 Exciting time in this area is coming) 453.22 580.61 T
1 1 0 0 0 0 1 1 K
0 0 0 1 0 0 0 1 K
(having a historic perspective and an overview is useful) 459.68 568.95 T
1 1 0 0 0 0 1 1 K
0 0 0 1 0 0 0 1 K
1 1 0 0 0 0 1 1 K
0 0 0 1 0 0 0 1 K
FMENDPAGE
%%EndPage: "mini" 5
%%Trailer
FMENDDOCUMENT
%%BoundingBox: 0 0 612 792
%%PageOrder: Ascend
%%Pages: 5
%%DocumentFonts: Helvetica-Bold
%%+ Times-Bold
%%+ Times-Roman
%%+ Helvetica-Oblique
%%+ Helvetica
%%+ Symbol
%%DocumentNeedsFonts: Helvetica-Bold
%%+ Times-Bold
%%+ Times-Roman
%%+ Helvetica-Oblique
%%+ Helvetica
%%+ Symbol
%%DocumentSuppliedFonts:
%%EOF
