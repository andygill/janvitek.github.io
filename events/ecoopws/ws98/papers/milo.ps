%!PS-Adobe-3.0
%%BoundingBox: (atend)
%%Pages: (atend)
%%PageOrder: (atend)
%%DocumentFonts: (atend)
%%Creator: Frame 5.1
%%DocumentData: Clean7Bit
%%EndComments
%%BeginProlog
%-
%- Frame ps_prolog 5.0, for use with Frame 5.0 products
%- This ps_prolog file is Copyright (c) 1986-1996 Adobe Systems, Incoporated.
%- All rights reserved.  This ps_prolog file may be freely copied and 
%- distributed in conjunction with documents created using FrameMaker, 
%- FrameMaker/SGML FrameReader and FrameViewer as long as this 
%- copyright notice is preserved.
%-
%- FrameMaker users specify the proper paper size for each print job in the
%- "Print" dialog's "Printer Paper Size" "Width" and "Height~ fields.  If the
%- printer that the PS file is sent to does not support the requested paper
%- size, or if there is no paper tray of the proper size currently installed, 
%- then the job will not be printed.  The following flag, if set to true, will
%- cause the job to print on the default paper in such cases.
/FMAllowPaperSizeMismatch            false def
%-
%- Frame products normally print colors as their true color on a color printer
%- or as shades of gray, based on luminance, on a black-and white printer. The
%- following flag, if set to true, forces all non-white colors to print as pure
%- black. This has no effect on bitmap images.
/FMPrintAllColorsAsBlack             false def
%-
%- Frame products can either set their own line screens or use a printer's 
%- default settings. Three flags below control this separately for no 
%- separations, spot separations and process separations. If a flag
%- is true, then the default printer settings will not be changed. If it is
%- false, Frame products will use their own settings from a table based on
%- the printer's resolution.
/FMUseDefaultNoSeparationScreen      true  def
/FMUseDefaultSpotSeparationScreen    true  def
/FMUseDefaultProcessSeparationScreen false def
%-
%- For any given PostScript printer resolution, Frame products have two sets of 
%- screen angles and frequencies for printing process separations, which are 
%- recomended by Adobe. The following variable chooses the higher frequencies
%- when set to true or the lower frequencies when set to false. This is only
%- effective if the appropriate FMUseDefault...SeparationScreen flag is false.
/FMUseHighFrequencyScreens true def
%-
%- The following is a set of predefined optimal frequencies and angles for various
%- common dpi settings. This is taken from "Advances in Color Separation Using
%- PostScript Software Technology," from Adobe Systems (3/13/89 P.N. LPS 0043)
%- and corrolated with information which is in various PPD (4.0) files.
%-
%- The "dpiranges" figure is the minimum dots per inch device resolution which
%- can support this setting. The "low" and "high" values are controlled by the
%- setting of the FMUseHighFrequencyScreens flag above. The "TDot" flags control
%- the use of the "Yellow Triple Dot" feature whereby the frequency id divided by
%- three, but the dot function is "trippled" giving a block of 3x3 dots per cell.
%-
%- PatFreq is a compromise pattern frequency for ps Level 2 printers which is close
%- to the ideal WYSIWYG pattern frequency of 9 repetitions/inch but does not beat
%- (too badly) against the screen frequencies of any separations for that DPI.
% This is computed by taking dpi/9 as the ideal pixels per repetition, and then
% computing a tiling size in printer pixels for each of the four separations as 
% (dpi/screenFreq)*(cos(screenAngle)+sin(screenAngle)) Actually, this is the same 
% for Cyan and Magenta). Then, we take a "nice" LCM of the tile sizes close to
% the desired pattern tile where the beat factor is not more than 2 or 3.
%
/dpiranges   [  2540    2400    1693     1270    1200     635      600      0      ] def
/CMLowFreqs  [ 100.402  94.8683 89.2289 100.402  94.8683  66.9349  63.2456 47.4342 ] def
/YLowFreqs   [  95.25   90.0    84.65    95.25   90.0     70.5556  66.6667 50.0    ] def
/KLowFreqs   [  89.8026 84.8528 79.8088  89.8026 84.8528  74.8355  70.7107 53.033  ] def
/CLowAngles  [  71.5651 71.5651 71.5651 71.5651  71.5651  71.5651  71.5651 71.5651 ] def
/MLowAngles  [  18.4349 18.4349 18.4349 18.4349  18.4349  18.4349  18.4349 18.4349 ] def
/YLowTDot    [  true    true    false    true    true     false    false   false   ] def

/CMHighFreqs [ 133.87  126.491 133.843  108.503 102.523  100.402   94.8683 63.2456 ] def
/YHighFreqs  [ 127.0   120.0   126.975  115.455 109.091   95.25    90.0    60.0    ] def
/KHighFreqs  [ 119.737 113.137 119.713  128.289 121.218   89.8026  84.8528 63.6395 ] def
/CHighAngles [  71.5651 71.5651 71.5651  70.0169 70.0169  71.5651  71.5651 71.5651 ] def
/MHighAngles [  18.4349 18.4349 18.4349  19.9831 19.9831  18.4349  18.4349 18.4349 ] def
/YHighTDot   [  false   false   true     false   false    true     true    false   ] def

/PatFreq     [	10.5833 10.0     9.4055  10.5833 10.0	  10.5833  10.0	   9.375   ] def
%-
%- PostScript Level 2 printers contain an "Accurate Screens" feature which can
%- improve process separation rendering at the expense of compute time. This 
%- flag is ignored by PostScript Level 1 printers.
/FMUseAcccurateScreens true def
%-
%- The following PostScript procedure defines the spot function that Frame
%- products will use for process separations. You may un-comment-out one of
%- the alternative functions below, or use your own.
%-
%- Dot function
/FMSpotFunction {abs exch abs 2 copy add 1 gt 
		{1 sub dup mul exch 1 sub dup mul add 1 sub }
		{dup mul exch dup mul add 1 exch sub }ifelse } def
%-
%- Line function
%- /FMSpotFunction { pop } def
%-
%- Elipse function
%- /FMSpotFunction { dup 5 mul 8 div mul exch dup mul exch add 
%-		sqrt 1 exch sub } def
%-
%-

/FMversion (5.0) def % matches PS_VERSION in fmprintdriver

% PostScript Level 1 = true, 2 = false
/fMLevel1 /languagelevel where {pop languagelevel} {1} ifelse 2 lt def

% Set up Color vs. Black-and-White
/FMPColor
	fMLevel1 {
		false
		/colorimage where {pop pop true} if
	} {
%		statusdict /processcolors known {
%			statusdict /processcolors get exec
%		} {1} ifelse
%		1 gt
		true
	} ifelse
def

/FrameDict 400 dict def % should check this value each time changes made

%
% For NeWS we add a fake errordict, so we can psh files
%
systemdict /errordict known not {/errordict 10 dict def
		errordict /rangecheck {stop} put} if

%- The readline in PS 23.0 doesn't recognize cr's as nl's on AppleTalk
FrameDict /tmprangecheck errordict /rangecheck get put % save old rangecheck
errordict /rangecheck {FrameDict /bug true put} put % will flag bug found
FrameDict /bug false put % flag bug not found
mark % since we're not sure what will happen next
%- Some PS machines read past the CR, so keep the following 3 lines together!
currentfile 5 string readline
00
0000000000
cleartomark % junk from readline and rangecheck
errordict /rangecheck FrameDict /tmprangecheck get put % restore rangecheck
FrameDict /bug get { % redefine readline if last one got a rangecheck
	/readline {
		/gstring exch def
		/gfile exch def
		/gindex 0 def
		{
			gfile read pop % get a char
			dup 10 eq {exit} if % exit if LF
			dup 13 eq {exit} if % exit if CR
			gstring exch gindex exch put % store it away
			/gindex gindex 1 add def % bump index
		} loop
		pop % eol character
		gstring 0 gindex getinterval true % simulate real readline
		} bind def
	} if

% outer-world defs

/FMshowpage /showpage load def
/FMquit /quit load def

/FMFAILURE { % enter with two error strings on the stack
	dup = flush % send a copy of the message to the console
	FMshowpage % msg on a page by itself, so it can't be, say, black on black
	/Helvetica findfont 12 scalefont setfont
	72 200 moveto show
	72 220 moveto show
	FMshowpage % we might be in the middle of some EPS, where "showpage"
	FMquit % and "quit" are redefined
	} def % only used once at most, so no bind

/FMVERSION {
	FMversion ne {
		(Adobe Frame product version does not match ps_prolog!  Check installation;)
		(also check ~/fminit and ./fminit for old versions) FMFAILURE
		} if
	} def % only used at startup, so no bind

/FMBADEPSF { % Call with bad operator name on stack (as a string)
	(Adobe's PostScript Language Reference Manual, 2nd Edition, section H.2.4)
	(says your EPS file is not valid, as it calls X              )
	dup dup (X) search pop exch pop exch pop length % parmstr errstr errstr indx
	5 -1 roll % errstr errstr index parmstr
	putinterval % errstr
	FMFAILURE
	} def

% standard concatprocs routine
/fmConcatProcs
	{
	/proc2 exch cvlit def/proc1 exch cvlit def/newproc proc1 length proc2 length add array def
	newproc 0 proc1 putinterval newproc proc1 length proc2 putinterval newproc cvx
}def

% Put all local variables here in alphabetical order.
FrameDict begin [
	/ALDsave
	/FMdicttop
	/FMoptop
	/FMpointsize
	/FMsaveobject
	/b
	/bitmapsave
	/blut
	/bpside
	/bs
	/bstring
	/bwidth
	/c
	/cf
	/cs
	/cynu
	/depth
	/edown
	/fh
	/fillvals
	/fw
	/fx
	/fy
	/g
	/gfile
	/gindex
	/grnt
	/gryt
	/gstring
	/height
	/hh
	/i
	/im
	/indx
	/is
	/k
	/kk
	/landscape
	/lb
	/len
	/llx
	/lly
	/m
	/magu
	/manualfeed
	/n
	/offbits
	/onbits
	/organgle
	/orgbangle
	/orgbfreq
	/orgbproc
	/orgbxfer
	/orgfreq
	/orggangle
	/orggfreq
	/orggproc
	/orggxfer
	/orgmatrix
	/orgproc
	/orgrangle
	/orgrfreq
	/orgrproc
	/orgrxfer
	/orgxfer
	/pagesave
	/paperheight
	/papersizedict
	/paperwidth
	/pos
	/pwid
	/r
	/rad
	/redt
	/sl
	/str
	/tran
	/u
	/urx
	/ury
	/val
	/width
	/width
	/ws
	/ww
	/x
	/x1
	/x2
	/xindex
	/xpoint
	/xscale
	/xx
	/y
	/y1
	/y2
	/yelu
	/yindex
	/ypoint
	/yscale
	/yy
] { 0 def } forall

% Start of PDF/Acrobat support

% Bind def
/FmBD {bind def} bind def

systemdict /pdfmark known {
	/fMAcrobat true def

	% FmPD is a conditional PDFMark
	/FmPD /pdfmark load def
	
	% FmPT is a show text operator which only show up when distiller is active
	/FmPT /show load def
	
	% FmPD2 and FmPA are Acrobat 2.0-specific
	currentdistillerparams /CoreDistVersion get 2000 ge {
	
		% FmPD2 is like FmPD but for Acrobat 2.0-specific PDF
		/FmPD2 /pdfmark load def
		
		% x y/name FmPA
		% 	is equivalent to
		% [/Dest/name/View[/FitH x y FmDC exch pop]/DEST FmPD
		% It is a shortcut for pagragraph Uinique ID designators whic occurr commonly.
		/FmPA { mark exch /Dest exch 5 3 roll 
				/View [ /XYZ null 6 -2 roll FmDC exch pop null] /DEST FmPD 
		}FmBD
	} {
		% These are No-Ops for Distiller 1.0
		/FmPD2 /cleartomark load def
		/FmPA {pop pop pop}FmBD
	} ifelse
} {
	% these are the No-Ops for regular PostScript
	/fMAcrobat false def
	/FmPD /cleartomark load def
	/FmPD2 /cleartomark load def
	/FmPT /pop load def
	/FmPA {pop pop pop}FmBD
} ifelse

% This convert a set of X Y coordinates from the current user space to the default
% PostScript coordinates needed by some pdfmark variants. We also convert to 
% integer because the distiller doesn't always like floats!
/FmDC {
	transform fMDefaultMatrix itransform cvi exch cvi exch
}FmBD

% This converts four numbers into a bounding box making sure the first two are maller than the last two
/FmBx {
	dup 3 index lt {3 1 roll exch} if 
	1 index 4 index lt {4 -1 roll 3 1 roll exch 4 1 roll} if
}FmBD

% End of PDF/Acrobat support

%
% Color separation code
%

% Constants.

/FMnone 0 def
/FMcyan 1 def
/FMmagenta 2 def
/FMyellow 3 def
/FMblack 4 def
/FMcustom 5 def

/fMNegative false def % we are inverting the page

% Variables.

/FrameSepIs FMnone def % separation we are printing
% If FrameSepIs is FMcustom, this is the custom color
/FrameSepBlack 0 def
/FrameSepYellow 0 def
/FrameSepMagenta 0 def
/FrameSepCyan 0 def
/FrameSepRed 1 def
/FrameSepGreen 1 def
/FrameSepBlue 1 def
/FrameCurGray 1 def
/FrameCurPat null def

/FrameCurColors [ 0 0 0 1 0 0 0 ] def % c m y k r g b

% Utility routines

/FrameColorEpsilon .001 def	% epsilon by which values can differ and sill be equal
/eqepsilon {		% v1 v2 eqeps bool
	sub dup 0 lt {neg} if
	FrameColorEpsilon le
} bind def

% are the cmyk and cmykrgb arrays on the stack the same color?
/FrameCmpColorsCMYK { % [ c1 m1 y1 k1 ] [ c2 m2 y2 k2 r2 g2 b2] -> bool
	2 copy 0 get exch 0 get eqepsilon {
		2 copy 1 get exch 1 get eqepsilon {
			2 copy 2 get exch 2 get eqepsilon {
				3 get exch 3 get eqepsilon
			} {pop pop false} ifelse
		}{pop pop false} ifelse
	} {pop pop false} ifelse
} bind def
% are the rgb and cmykrgb arrays on the stack the same color?
/FrameCmpColorsRGB { % [ r1 g1 b1 ] [ c2 m2 y2 k2 r2 g2 b2] -> bool
	2 copy 4 get exch 0 get eqepsilon {
		2 copy 5 get exch 1 get eqepsilon {
			6 get exch 2 get eqepsilon
		}{pop pop false} ifelse
	} {pop pop false} ifelse
} bind def

% convert r g b to c m y k
/RGBtoCMYK { % r g b
	1 exch sub % r g y
	3 1 roll % y r g
	1 exch sub % y r m
	3 1 roll % m y r
	1 exch sub % m y c
	3 1 roll % c m y
	3 copy % c m y c m y
	2 copy % c m y c m y m y
	le { pop } { exch pop } ifelse % c m y c min(m,y)
	2 copy % c m y c min(m,y) c min(m,y)
	le { pop } { exch pop } ifelse % c m y min(c, min(m,y))
	dup dup dup % c m y k k k k
	6 1 roll % c k m y k k k
	4 1 roll % c k m k y k k
	7 1 roll % k c k m k y k
	sub % k c k m k y
	6 1 roll % y k c k m k
	sub % y k c k m
	5 1 roll % m y k c k
	sub % m y k c
	4 1 roll % c m y k 
} bind def
/CMYKtoRGB { % c m y k CMYKtoRGB r g b
	dup dup 4 -1 roll add 						  % c m k k y+k
	5 1 roll 3 -1 roll add 						  % y+k c k m+k
	4 1 roll add 								  % m+k y+k c+k
	1 exch sub dup 0 lt {pop 0} if 3 1 roll 	  % r m+k y+k
	1 exch sub dup 0 lt {pop 0} if exch 	      % r b m+k
	1 exch sub dup 0 lt {pop 0} if exch	  		  % r g b
} bind def

% Public routines


% Happens at the top of each page that is a separation
/FrameSepInit {
	1.0 RealSetgray
} bind def
% Tell the separation code that this separation is for a custom color
/FrameSetSepColor { % c m y k r g b
	/FrameSepBlue exch def
	/FrameSepGreen exch def
	/FrameSepRed exch def
	/FrameSepBlack exch def
	/FrameSepYellow exch def
	/FrameSepMagenta exch def
	/FrameSepCyan exch def
	/FrameSepIs FMcustom def
	setCurrentScreen	
} bind def
% Tell the separation code that this separation is Cyan
/FrameSetCyan {
	/FrameSepBlue 1.0 def
	/FrameSepGreen 1.0 def
	/FrameSepRed 0.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 1.0 def
	/FrameSepIs FMcyan def
	setCurrentScreen	
} bind def
 
% Tell the separation code that this separation is Magenta
/FrameSetMagenta {
	/FrameSepBlue 1.0 def
	/FrameSepGreen 0.0 def
	/FrameSepRed 1.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 1.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMmagenta def
	setCurrentScreen
} bind def
 
% Tell the separation code that this separation is Yellow
/FrameSetYellow {
	/FrameSepBlue 0.0 def
	/FrameSepGreen 1.0 def
	/FrameSepRed 1.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 1.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMyellow def
	setCurrentScreen
} bind def
 
% Tell the separation code that this separation is Black
/FrameSetBlack {
	/FrameSepBlue 0.0 def
	/FrameSepGreen 0.0 def
	/FrameSepRed 0.0 def
	/FrameSepBlack 1.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMblack def
	setCurrentScreen
} bind def
 
% Tell the separation code we are not doing a separation
/FrameNoSep { %
	/FrameSepIs FMnone def
	setCurrentScreen
} bind def

% Initialize the separation code with all the custom colors we are
% separating (not process colors)
/FrameSetSepColors { % list of arrays of [c m y k r g b] count 
	FrameDict begin
	[ exch 1 add 1 roll ]
	/FrameSepColors  % array of arrays of colors we are separating
	exch def end
	} bind def

% is this color array in the array of custom color separations?
/FrameColorInSepListCMYK { % [ c m y k ] -> bool
	FrameSepColors {  % color elem-of-array
       		exch dup 3 -1 roll % color color elem
       		FrameCmpColorsCMYK % color bool
       		{ pop true exit } if
    	} forall % exits with either [color] or true
	dup true ne {pop false} if
	} bind def
/FrameColorInSepListRGB { % [ r g b ] -> bool
	FrameSepColors {  % color elem-of-array
       		exch dup 3 -1 roll % color color elem
       		FrameCmpColorsRGB % color bool
       		{ pop true exit } if
    	} forall % exits with either [color] or true
	dup true ne {pop false} if
	} bind def

% Level 1 color operators saved and redefined
/RealSetgray /setgray load def
/RealSetrgbcolor /setrgbcolor load def
/RealSethsbcolor /sethsbcolor load def
end 

% Setgray patch
/setgray { % num
	FrameDict begin
	FrameSepIs FMnone eq
		{ RealSetgray } 
		{ % go to white unless the current sep color is black
		FrameSepIs FMblack eq 
			{ RealSetgray } 
			{ FrameSepIs FMcustom eq 
			  FrameSepRed 0 eq and
			  FrameSepGreen 0 eq and
			  FrameSepBlue 0 eq and {
			  	RealSetgray
			  } {
				1 RealSetgray pop 
			  } ifelse
			} ifelse
		} ifelse
	end
} bind def
/setrgbcolor { % r g b
	FrameDict begin
	FrameSepIs FMnone eq
	{  RealSetrgbcolor }
	{
		3 copy [ 4 1 roll ] % r g b [ r g b ]
		FrameColorInSepListRGB
		{
				FrameSepBlue eq exch 
			 	FrameSepGreen eq and exch 
			 	FrameSepRed eq and
			 	{ 0 } { 1 } ifelse
		}
		{
			FMPColor {
				RealSetrgbcolor
				currentcmykcolor
			} {
				RGBtoCMYK
			} ifelse
			FrameSepIs FMblack eq
			{1.0 exch sub 4 1 roll pop pop pop} {
			FrameSepIs FMyellow eq
			{pop 1.0 exch sub 3 1 roll pop pop} {
			FrameSepIs FMmagenta eq
			{pop pop 1.0 exch sub exch pop } {
			FrameSepIs FMcyan eq
			{pop pop pop 1.0 exch sub } 
			{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
		} ifelse
		RealSetgray
	} 
	ifelse
	end
} bind def
/sethsbcolor {
	FrameDict begin
	FrameSepIs FMnone eq 
	{ RealSethsbcolor } 
	{
		RealSethsbcolor % safe since we will overwrite the color state
		currentrgbcolor  % r g b - Let PostsCript to the conversion.
		setrgbcolor % call our version
	} 
	ifelse
	end
} bind def
FrameDict begin

/setcmykcolor where {
	pop /RealSetcmykcolor /setcmykcolor load def
} {
	/RealSetcmykcolor {
		4 1 roll
		3 { 3 index add 0 max 1 min 1 exch sub 3 1 roll} repeat 
		RealSetrgbcolor pop
	} bind def
} ifelse
userdict /setcmykcolor { % c m y k
		FrameDict begin
		FrameSepIs FMnone eq
		{ RealSetcmykcolor } 
		{
			4 copy [ 5 1 roll ]
			FrameColorInSepListCMYK
			{
				FrameSepBlack eq exch 
				FrameSepYellow eq and exch 
				FrameSepMagenta eq and exch 
				FrameSepCyan eq and 
				{ 0 } { 1 } ifelse
			}
			{
				FrameSepIs FMblack eq
				{1.0 exch sub 4 1 roll pop pop pop} {
				FrameSepIs FMyellow eq
				{pop 1.0 exch sub 3 1 roll pop pop} {
				FrameSepIs FMmagenta eq
				{pop pop 1.0 exch sub exch pop } {
				FrameSepIs FMcyan eq
				{pop pop pop 1.0 exch sub } 
				{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
			} ifelse
			RealSetgray
		}
		ifelse
		end
	} bind put

% Set up a prototype pattern for PostScript Level 2
fMLevel1 { 
	% set up screen functions for the patterns in PS level 1
	% each entry contains an angle, spot function, flipped spot function,
	% gray level and frequency multiplier.
	/patScreenDict 7 dict dup begin
		<0f1e3c78f0e1c387> [ 45  { pop } {exch pop} 		.5   2 sqrt] FmBD
		<0f87c3e1f0783c1e> [ 135 { pop } {exch pop}			.5   2 sqrt] FmBD
		<cccccccccccccccc> [ 0   { pop } dup				.5   2	   ] FmBD
		<ffff0000ffff0000> [ 90  { pop } dup				.5   2	   ] FmBD
		<8142241818244281> [ 45  { 2 copy lt {exch} if pop}	dup .75  2 sqrt] FmBD
		<03060c183060c081> [ 45  { pop } {exch pop}			.875 2 sqrt] FmBD
		<8040201008040201> [ 135 { pop } {exch pop}			.875 2 sqrt] FmBD
	end def
} { % prototype level 2 pattern dictionary
	% define some PostScript procedures for known jaggy patterns.
	/patProcDict 5 dict dup begin
		<0f1e3c78f0e1c387> { 3 setlinewidth -1 -1 moveto 9 9 lineto stroke 
											4 -4 moveto 12 4 lineto stroke
											-4 4 moveto 4 12 lineto stroke} bind def
		<0f87c3e1f0783c1e> { 3 setlinewidth -1 9 moveto 9 -1 lineto stroke 
											-4 4 moveto 4 -4 lineto stroke
											4 12 moveto 12 4 lineto stroke} bind def
		<8142241818244281> { 1 setlinewidth -1 9 moveto 9 -1 lineto stroke
											-1 -1 moveto 9 9 lineto stroke } bind def
		<03060c183060c081> { 1 setlinewidth -1 -1 moveto 9 9 lineto stroke 
											4 -4 moveto 12 4 lineto stroke
											-4 4 moveto 4 12 lineto stroke} bind def
		<8040201008040201> { 1 setlinewidth -1 9 moveto 9 -1 lineto stroke 
											-4 4 moveto 4 -4 lineto stroke
											4 12 moveto 12 4 lineto stroke} bind def
	end def
	/patDict 15 dict dup begin
		/PatternType 1 def		% Always 1 for PS Level 2
		/PaintType 2 def		% Uncolored pattern
		/TilingType 3 def		% constant spacing and faster tiling
		/BBox [ 0 0 8 8 ] def 	% bounding box
		/XStep 8 def			% X offset
		/YStep 8 def			% Y offset
		/PaintProc {
			begin
			patProcDict bstring known {
				patProcDict bstring get exec
			} {
				8 8 true [1 0 0 -1 0 8] bstring imagemask
			} ifelse
			end
		} bind def
	end def
} ifelse

%combineColor puts together the current gray value (which could also be
%a fraction of on bits for a fill pattern and the current color and calls
%the appropriate function
%
/combineColor {
    FrameSepIs FMnone eq
	{
		graymode fMLevel1 or not {
			% Level 2 pattern
			[/Pattern [/DeviceCMYK]] setcolorspace
			FrameCurColors 0 4 getinterval aload pop FrameCurPat setcolor
		} {
			FrameCurColors 3 get 1.0 ge {
				FrameCurGray RealSetgray
			} {
				fMAcrobat not FMPColor graymode and and {
					0 1 3 { 
						FrameCurColors exch get
						1 FrameCurGray sub mul
					} for
					RealSetcmykcolor
				} {
					4 1 6 {
						FrameCurColors exch get
						graymode {
							1 exch sub 1 FrameCurGray sub mul 1 exch sub
						} {
							1.0 lt {FrameCurGray} {1} ifelse
						} ifelse
					} for
					RealSetrgbcolor
				} ifelse
			} ifelse
		} ifelse
	} { % separation case
		FrameCurColors 0 4 getinterval aload
		FrameColorInSepListCMYK {
			FrameSepBlack eq exch 
			FrameSepYellow eq and exch 
			FrameSepMagenta eq and exch 
			FrameSepCyan eq and
			FrameSepIs FMcustom eq and
			{ FrameCurGray } { 1 } ifelse
		} {
			FrameSepIs FMblack eq
			{FrameCurGray 1.0 exch sub mul 1.0 exch sub 4 1 roll pop pop pop} {
			FrameSepIs FMyellow eq
			{pop FrameCurGray 1.0 exch sub mul 1.0 exch sub 3 1 roll pop pop} {
			FrameSepIs FMmagenta eq
			{pop pop FrameCurGray 1.0 exch sub mul 1.0 exch sub exch pop } {
			FrameSepIs FMcyan eq
			{pop pop pop FrameCurGray 1.0 exch sub mul 1.0 exch sub } 
			{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
		} ifelse
		graymode fMLevel1 or not {
			% Level 2 pattern
			[/Pattern [/DeviceGray]] setcolorspace
			FrameCurPat setcolor
		} { 
			graymode not fMLevel1 and {
				% Level 1 patterns are either all there or not there at all
				dup 1 lt {pop FrameCurGray} if
			} if
			RealSetgray
		} ifelse
	} ifelse
} bind def

/savematrix {
	orgmatrix currentmatrix pop
	} bind def
/restorematrix {
	orgmatrix setmatrix
	} bind def
/fMDefaultMatrix matrix defaultmatrix def
/fMatrix2 matrix def
/dpi    72 0 fMDefaultMatrix dtransform
    dup mul exch   dup mul add   sqrt def
	
% freq and sangle are used for ps Level 1 pattern building.
/freq dpi dup 72 div round dup 0 eq {pop 1} if 8 mul div def
/sangle 1 0 fMDefaultMatrix dtransform exch atan def
	sangle fMatrix2 rotate 
	fMDefaultMatrix fMatrix2 concatmatrix 
	dup 0 get /sflipx exch def
	    3 get /sflipy exch def

%
% screen index depending on dpi
%	- screenIndex smallint
/screenIndex {
	0 1 dpiranges length 1 sub { dup dpiranges exch get 1 sub dpi le {exit} {pop} ifelse } for
} bind def

%
% These routines get the standard Adobe frequencies, angles, and spot functions
% depending on the DPI
%
% - getCyanScreen freq angle spotfunction
/getCyanScreen {
	FMUseHighFrequencyScreens { CHighAngles CMHighFreqs} {CLowAngles CMLowFreqs} ifelse
		screenIndex dup 3 1 roll get 3 1 roll get /FMSpotFunction load
} bind def

%
% - getMagentaScreen freq angle spotFunction
/getMagentaScreen {
	FMUseHighFrequencyScreens { MHighAngles CMHighFreqs } {MLowAngles CMLowFreqs} ifelse
		screenIndex dup 3 1 roll get 3 1 roll get /FMSpotFunction load
} bind def

%
% - getYellowScreen freq angle spotFunction
% note that some of these use a "tripple dot" function at 1/3 the frequency
/getYellowScreen {
	FMUseHighFrequencyScreens { YHighTDot YHighFreqs} { YLowTDot YLowFreqs } ifelse
		screenIndex dup 3 1 roll get 3 1 roll get { 3 div
			{2 { 1 add 2 div 3 mul dup floor sub 2 mul 1 sub exch} repeat
			FMSpotFunction } } {/FMSpotFunction load } ifelse
			0.0 exch
} bind def

%
% - getBlackScreen freq angle spotFunction
/getBlackScreen  {
	FMUseHighFrequencyScreens { KHighFreqs } { KLowFreqs } ifelse
		screenIndex get 45.0 /FMSpotFunction load 
} bind def

%
% - getSpotScreen freq angle spotFunction
/getSpotScreen {
	getBlackScreen
} bind def

%
% - getCompositeScreen freq angle spotFunction
/getCompositeScreen {
	getBlackScreen
} bind def

% FmSetScreen sets the screen for either PostScript Level 1 or Level 2 and optionally
% sets the accuratescreens flag in the latter case
% freq angle spotfunction FMSetScreen -
/FMSetScreen 
	fMLevel1 { /setscreen load 
	}{ {
		8 dict begin
		/HalftoneType 1 def
		/SpotFunction exch def
		/Angle exch def
		/Frequency exch def
		/AccurateScreens FMUseAcccurateScreens def
		currentdict end sethalftone
	} bind } ifelse
def

% This sets the default screen as was set at the beginning of the job
% - setDefaultScreen -
/setDefaultScreen {
	FMPColor {
		orgrxfer cvx orggxfer cvx orgbxfer cvx orgxfer cvx setcolortransfer
	}
	{
		orgxfer cvx settransfer
	} ifelse
	orgfreq organgle orgproc cvx setscreen
} bind def

% This sets the current screen depending on FrameSepIs
% - setCurrentScreen -
/setCurrentScreen {
	FrameSepIs FMnone eq {
		FMUseDefaultNoSeparationScreen {
			setDefaultScreen
		} {
			getCompositeScreen FMSetScreen
		} ifelse
	} {
		FrameSepIs FMcustom eq {
			FMUseDefaultSpotSeparationScreen {
				setDefaultScreen
			} {
				getSpotScreen FMSetScreen
			} ifelse
		} {
			FMUseDefaultProcessSeparationScreen {
				setDefaultScreen
			} {
				FrameSepIs FMcyan eq {
					getCyanScreen FMSetScreen
				} {
					FrameSepIs FMmagenta eq {
						getMagentaScreen FMSetScreen
					} {
						FrameSepIs FMyellow eq {
							getYellowScreen FMSetScreen
						} {
							getBlackScreen FMSetScreen
						} ifelse
					} ifelse
				} ifelse
			} ifelse
		} ifelse
	} ifelse 
} bind def


end

% End of Color separation code
%
	
/FMDOCUMENT { % xscale yscale edown negative paperwidth paperheight manfeed numcopies numfonts
	array /FMfonts exch def % Why isn't this in FrameDict???
	/#copies exch def
	FrameDict begin
	0 ne /manualfeed exch def
	/paperheight exch def
	/paperwidth exch def
	0 ne /fMNegative exch def % invert page
	0 ne /edown exch def % flip page along y axis
	/yscale exch def
	/xscale exch def

	fMLevel1 {
		manualfeed {setmanualfeed} if
		/FMdicttop countdictstack 1 add def % some PS's leave junk on dict ...
		/FMoptop count def % ...or on operand stack...
		setpapername % This stuff may alter the transfer/screen/angle
		manualfeed {true} {papersize} ifelse % true->more work to do
		{manualpapersize} {false} ifelse % true->more work to do
		{desperatepapersize} {false} ifelse % true->failed completely
		{papersizefailure} if
		count -1 FMoptop {pop pop} for
		countdictstack -1 FMdicttop {pop end} for %...if tray not installed
		}
		{2 dict
		 dup /PageSize [paperwidth paperheight] put
		 manualfeed {dup /ManualFeed manualfeed put} if
		 {setpagedevice} stopped {papersizefailure} if
		}
	ifelse % fMLevel1
	
	FMPColor {
		currentcolorscreen
			cvlit /orgproc exch def
				  /organgle exch def 
				  /orgfreq exch def
			cvlit /orgbproc exch def
				  /orgbangle exch def 
				  /orgbfreq exch def
			cvlit /orggproc exch def
				  /orggangle exch def 
				  /orggfreq exch def
			cvlit /orgrproc exch def
				  /orgrangle exch def 
				  /orgrfreq exch def

			currentcolortransfer 
			fMNegative {
				1 1 4 { 
					pop { 1 exch sub } fmConcatProcs 4 1 roll
				} for
				4 copy
				setcolortransfer
			} if
			cvlit /orgxfer exch def
			cvlit /orgbxfer exch def
			cvlit /orggxfer exch def
			cvlit /orgrxfer exch def
	} {
		currentscreen 
			cvlit /orgproc exch def
				  /organgle exch def 
				  /orgfreq exch def
				  
		currenttransfer 
		fMNegative {
			{ 1 exch sub } fmConcatProcs
			dup settransfer
		} if 
		cvlit /orgxfer exch def
	} ifelse

	end % FrameDict
} def % only used at startup, so no bind

/FMBEGINPAGE { % pagewidth pageheight landscape color-arrays count
	FrameDict begin % for the whole page...
	/pagesave save def
	3.86 setmiterlimit
	/landscape exch 0 ne def
	landscape { % check for landscape
		90 rotate 0 exch dup /pwid exch def neg translate pop 
	}{
		pop /pwid exch def
	} ifelse
	edown { [-1 0 0 1 pwid 0] concat } if
% paint the whole page in "white".  If the page is inverted, then
% this will actually paint our black background
	0 0 moveto paperwidth 0 lineto paperwidth paperheight lineto 
	0 paperheight lineto 0 0 lineto 1 setgray fill
	xscale yscale scale
	/orgmatrix matrix def
	gsave % for CLIP
} def % only used infrequently, so no bind

/FMENDPAGE {
	grestore % for CLIP
	pagesave restore
	end % FrameDict
	showpage
	} def % only used infrequently, so no bind

/FMFONTDEFINE { % fontindex nonstd_encoding fontname -- 
	FrameDict begin
	findfont % fontindex nonstd_encoding font
	ReEncode % fontindex font'
	1 index exch % fontindex fontindex font'
	definefont % fontindex font"
	FMfonts 3 1 roll %  FMfonts fontindex font"
	put
	end % FrameDict
	} def % only used infrequently, so no bind

/FMFILLS {
	FrameDict begin dup
	array /fillvals exch def
	dict /patCache exch def
	end % framedict
	} def % Only called once, so no bind

/FMFILL {
	FrameDict begin
	 fillvals 3 1 roll put
	end % FrameDict
	} def % only used infrequently, so no bind

% Set things to a known, quiescent state, for when we switch to another writer
/FMNORMALIZEGRAPHICS { 
	newpath
	1 setlinewidth
	0 setlinecap
	0 0 0 sethsbcolor
	0 setgray % Not FMsetgray; only called outside of our environment!
	} bind def

/FMBEGINEPSF { % <theta> llx lly urx ury fw fh fx fy
	end % FrameDict
	/FMEPSF save def % in userdict
	/showpage {} def % this def is in userdict
%- See Adobe's "PostScript Language Reference Manual, 2nd Edition", page 714.
%- "...the following operators MUST NOT be used in an EPS file:" (emphasis ours)
	/banddevice {(banddevice) FMBADEPSF} def
	/clear {(clear) FMBADEPSF} def
	/cleardictstack {(cleardictstack) FMBADEPSF} def % FMBADEPSF knows this is the longest!
	/copypage {(copypage) FMBADEPSF} def
	/erasepage {(erasepage) FMBADEPSF} def
	/exitserver {(exitserver) FMBADEPSF} def
	/framedevice {(framedevice) FMBADEPSF} def
	/grestoreall {(grestoreall) FMBADEPSF} def
	/initclip {(initclip) FMBADEPSF} def
	/initgraphics {(initgraphics) FMBADEPSF} def
%	/initmatrix {(initmatrix) FMBADEPSF} def	% Aldus Freehand 4.0 epsf uses this harmlessly <Gus 4/26/95>
	/quit {(quit) FMBADEPSF} def
	/renderbands {(renderbands) FMBADEPSF} def
	/setglobal {(setglobal) FMBADEPSF} def
	/setpagedevice {(setpagedevice) FMBADEPSF} def
	/setshared {(setshared) FMBADEPSF} def
	/startjob {(startjob) FMBADEPSF} def
	/lettertray {(lettertray) FMBADEPSF} def
	/letter {(letter) FMBADEPSF} def
	/lettersmall {(lettersmall) FMBADEPSF} def
	/11x17tray {(11x17tray) FMBADEPSF} def
	/11x17 {(11x17) FMBADEPSF} def
	/ledgertray {(ledgertray) FMBADEPSF} def
	/ledger {(ledger) FMBADEPSF} def
	/legaltray {(legaltray) FMBADEPSF} def
	/legal {(legal) FMBADEPSF} def
	/statementtray {(statementtray) FMBADEPSF} def
	/statement {(statement) FMBADEPSF} def
	/executivetray {(executivetray) FMBADEPSF} def
	/executive {(executive) FMBADEPSF} def
	/a3tray {(a3tray) FMBADEPSF} def
	/a3 {(a3) FMBADEPSF} def
	/a4tray {(a4tray) FMBADEPSF} def
	/a4 {(a4) FMBADEPSF} def
	/a4small {(a4small) FMBADEPSF} def
	/b4tray {(b4tray) FMBADEPSF} def
	/b4 {(b4) FMBADEPSF} def
	/b5tray {(b5tray) FMBADEPSF} def
	/b5 {(b5) FMBADEPSF} def
	FMNORMALIZEGRAPHICS % in case we're in a strange state
	[/fy /fx /fh /fw /ury /urx /lly /llx] {exch def} forall % neat trick
	fx fw 2 div add fy fh 2 div add  translate
	rotate
	fw 2 div neg fh 2 div neg translate
	fw urx llx sub div fh ury lly sub div scale % then scale
	llx neg lly neg translate % then compensate for LL offset 
	/FMdicttop countdictstack 1 add def % high-water mark of dict stack
	/FMoptop count def % tricky! "/FMoptop" on stack
	} bind def

/FMENDEPSF {
	count -1 FMoptop {pop pop} for % clear EPS junk from operand stack
	countdictstack -1 FMdicttop {pop end} for % ditto for dict stack
	FMEPSF restore
	FrameDict begin % for the whole page...
	} bind def

FrameDict begin % put most defs here

/setmanualfeed {
%%BeginFeature *ManualFeed True
	 statusdict /manualfeed true put
%%EndFeature
	} bind def

/max {2 copy lt {exch} if pop} bind def
/min {2 copy gt {exch} if pop} bind def
/inch {72 mul} def

/pagedimen { % name width height
	paperheight sub abs 16 lt exch % 16pt is an arbitrary slop amount
	paperwidth sub abs 16 lt and
	{/papername exch def} {pop} ifelse
	} bind def

/setpapername { % Already set up: paperwidth paperheight and manualfeed
	/papersizedict 14 dict def % one for /papername, one for /unknown
	papersizedict begin
	/papername /unknown def % in case no match
		/Letter 8.5 inch 11.0 inch pagedimen
		/LetterSmall 7.68 inch 10.16 inch pagedimen
		/Tabloid 11.0 inch 17.0 inch pagedimen
		/Ledger 17.0 inch 11.0 inch pagedimen
		/Legal 8.5 inch 14.0 inch pagedimen
		/Statement 5.5 inch 8.5 inch pagedimen
		/Executive 7.5 inch 10.0 inch pagedimen
		/A3 11.69 inch 16.5 inch pagedimen
		/A4 8.26 inch 11.69 inch pagedimen
		/A4Small 7.47 inch 10.85 inch pagedimen
		/B4 10.125 inch 14.33 inch pagedimen
		/B5 7.16 inch 10.125 inch pagedimen
	end
	} bind def

/papersize {
	papersizedict begin
		/Letter {lettertray letter} def
		/LetterSmall {lettertray lettersmall} def
		/Tabloid {11x17tray 11x17} def
		/Ledger {ledgertray ledger} def
		/Legal {legaltray legal} def
		/Statement {statementtray statement} def
		/Executive {executivetray executive} def
		/A3 {a3tray a3} def
		/A4 {a4tray a4} def
		/A4Small {a4tray a4small} def
		/B4 {b4tray b4} def
		/B5 {b5tray b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	statusdict begin stopped end % return true if more work to do
	} bind def

/manualpapersize {
	papersizedict begin
		/Letter {letter} def
		/LetterSmall {lettersmall} def
		/Tabloid {11x17} def
		/Ledger {ledger} def
		/Legal {legal} def
		/Statement {statement} def
		/Executive {executive} def
		/A3 {a3} def
		/A4 {a4} def
		/A4Small {a4small} def
		/B4 {b4} def
		/B5 {b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	stopped % return true if more work to do
	} bind def

/desperatepapersize {
	statusdict /setpageparams known
		{
		paperwidth paperheight 0 1 
		statusdict begin
		{setpageparams} stopped % return true iff failed
		end
		} {true} ifelse % return true iff failed
	} bind def

/papersizefailure {
	FMAllowPaperSizeMismatch not
		{
(The requested paper size is not available in any currently-installed tray)
(Edit the PS file to "FMAllowPaperSizeMismatch true" to use default tray)
		 FMFAILURE } if
	} def

%
% Font re-encoding to include diacritics
% 
/DiacriticEncoding [

/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /space /exclam /quotedbl
/numbersign /dollar /percent /ampersand /quotesingle /parenleft
/parenright /asterisk /plus /comma /hyphen /period /slash /zero /one
/two /three /four /five /six /seven /eight /nine /colon /semicolon
/less /equal /greater /question /at /A /B /C /D /E /F /G /H /I /J /K
/L /M /N /O /P /Q /R /S /T /U /V /W /X /Y /Z /bracketleft /backslash
/bracketright /asciicircum /underscore /grave /a /b /c /d /e /f /g /h
/i /j /k /l /m /n /o /p /q /r /s /t /u /v /w /x /y /z /braceleft /bar
/braceright /asciitilde /.notdef /Adieresis /Aring /Ccedilla /Eacute
/Ntilde /Odieresis /Udieresis /aacute /agrave /acircumflex /adieresis
/atilde /aring /ccedilla /eacute /egrave /ecircumflex /edieresis
/iacute /igrave /icircumflex /idieresis /ntilde /oacute /ograve
/ocircumflex /odieresis /otilde /uacute /ugrave /ucircumflex
/udieresis /dagger /.notdef /cent /sterling /section /bullet
/paragraph /germandbls /registered /copyright /trademark /acute
/dieresis /.notdef /AE /Oslash /.notdef /.notdef /.notdef /.notdef
/yen /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/ordfeminine /ordmasculine /.notdef /ae /oslash /questiondown
/exclamdown /logicalnot /.notdef /florin /.notdef /.notdef
/guillemotleft /guillemotright /ellipsis /.notdef /Agrave /Atilde
/Otilde /OE /oe /endash /emdash /quotedblleft /quotedblright
/quoteleft /quoteright /.notdef /.notdef /ydieresis /Ydieresis
/fraction /currency /guilsinglleft /guilsinglright /fi /fl /daggerdbl
/periodcentered /quotesinglbase /quotedblbase /perthousand
/Acircumflex /Ecircumflex /Aacute /Edieresis /Egrave /Iacute
/Icircumflex /Idieresis /Igrave /Oacute /Ocircumflex /.notdef /Ograve
/Uacute /Ucircumflex /Ugrave /dotlessi /circumflex /tilde /macron
/breve /dotaccent /ring /cedilla /hungarumlaut /ogonek /caron

] def

/ReEncode { % nonstd_encoding font -- reencodedfont
	dup % nonstd_encoding font font
	length % nonstd_encoding font dictlength
	dict begin % nonstd_encoding font % currentdict = newdict
	{% forall % forall is over font to be copied
	1 index /FID ne % skip FID
		{def} % defs go into newfontdict which is currentdict
		{pop pop} ifelse % copy all keys including /Encoding
	} forall % nonstd_encoding
	0 eq {/Encoding DiacriticEncoding def} if % --
	currentdict % push a copy of the copied font dict onto operand stack
	end % font' % before popping it off dictionary stack
	} bind def

FMPColor 
	% setup procs for color printing
	{

	/BEGINBITMAPCOLOR { % iw, ih, width, height, theta, x y 
		BITMAPCOLOR} def
	/BEGINBITMAPCOLORc { % iw, ih, width, height, theta, x y 
		BITMAPCOLORc} def
	/BEGINBITMAPTRUECOLOR { 
		BITMAPTRUECOLOR } def
	/BEGINBITMAPTRUECOLORc { 
		BITMAPTRUECOLORc } def
	/BEGINBITMAPCMYK { 
		BITMAPCMYK } def
	/BEGINBITMAPCMYKc { 
		BITMAPCMYKc } def
	}
	% setup procs for B&W printing
	{
	/BEGINBITMAPCOLOR { % iw, ih, width, height, theta, x y 
		BITMAPGRAY} def
	/BEGINBITMAPCOLORc { % iw, ih, width, height, theta, x y 
		BITMAPGRAYc} def
	/BEGINBITMAPTRUECOLOR { 
		BITMAPTRUEGRAY } def
	/BEGINBITMAPTRUECOLORc { 
		BITMAPTRUEGRAYc } def
	/BEGINBITMAPCMYK { 
		BITMAPCMYKGRAY } def
	/BEGINBITMAPCMYKc { 
		BITMAPCMYKGRAYc } def
	}
ifelse

/K { % c m y k r g b SEPARATION
	FMPrintAllColorsAsBlack {
		dup 1 eq 2 index 1 eq and 3 index 1 eq and not
			{7 {pop} repeat 0 0 0 1 0 0 0} if
	} if 
	FrameCurColors astore 
	pop combineColor
} bind def
%
% graymode is true if we are just doing gray fills, this way do not keep calling
% setscreen. I don't know what the cost is on calling setscreen with defaults, but
% this is easy to keep track of, and we know for sure we aren't wasting cycles.
% if graymode is false and fMLevel1 is false, then we are using Level 2 patterns.
%
/graymode true def

% used by level 1 patterns
% defaultflip matrixentry fmGetFlit -> eith -1 or 1
fMLevel1 {
	/fmGetFlip {
		fMatrix2 exch get mul 0 lt { -1 } { 1 } ifelse
	} FmBD
} if

/setPatternMode {
	fMLevel1 {
		2 index patScreenDict exch known {
			pop pop
			patScreenDict exch get aload pop % angle spot fspot gray mult
			freq 								% freq
			mul									% times multiplier
			5 2 roll							% angle spot fspot gray mult freq -> gray freq angle spot fspot
			fMatrix2 currentmatrix 1 get 0 ne {
				3 -1 roll 90 add 3 1 roll 		% landscape
				sflipx 1 fmGetFlip sflipy 2 fmGetFlip neg mul
			} {  								% portrait     
				sflipx 0 fmGetFlip sflipy 3 fmGetFlip mul 
			} ifelse
			0 lt {exch pop} {pop} ifelse 		% take regular or flipped spot function
			fMNegative { 
				{neg} fmConcatProcs 			% invert spot function
			} if
			bind
			% we need to bypass any screen filter and go directly to systemdict
			% to avoid problems with Kodak Precision calibration software
			% <Gus 9/13/93>
			systemdict /setscreen get exec		% leave graylevel on stack
			/FrameCurGray exch def
		} {
			/bwidth  exch def
			/bpside  exch def
			/bstring exch def
			/onbits 0 def  /offbits 0 def
			freq sangle landscape {90 add} if 
				{/ypoint exch def
				 /xpoint exch def
				 /xindex xpoint 1 add 2 div bpside mul cvi def
				 /yindex ypoint 1 add 2 div bpside mul cvi def
				 bstring yindex bwidth mul xindex 8 idiv add get
				 1 7 xindex 8 mod sub bitshift and 0 ne fMNegative {not} if
				 {/onbits  onbits  1 add def 1}
				 {/offbits offbits 1 add def 0}
				 ifelse
				}
				setscreen
			offbits offbits onbits add div fMNegative {1.0 exch sub} if
			/FrameCurGray exch def
		} ifelse
	} { % Level 2 version
		pop pop
		dup patCache exch known {
			patCache exch get
		} { % not in cache
			dup
			patDict /bstring 3 -1 roll put
			patDict 
			9 PatFreq screenIndex get div dup matrix scale
%			9 orgfreq 
%				organgle sin abs organgle cos abs add div
%				dup 16 div round dup 0 le {pop 1} if  % Unix pattern size
%			    dup  9 div round dup 0 le {pop 1} if  % Mac larger (WYSIWYG) size
%					div div dup matrix scale % This gives Unix pattern size.
			makepattern
			dup 
			patCache 4 -1 roll 3 -1 roll put
		} ifelse
		/FrameCurGray 0 def
		/FrameCurPat exch def
	} ifelse
	/graymode false def
	combineColor
} bind def

/setGrayScaleMode {
	graymode not {
		/graymode true def
		fMLevel1 {
			setCurrentScreen
		} if
	} if
	/FrameCurGray exch def
	combineColor
} bind def

/normalize {
	transform round exch round exch itransform
	} bind def

/dnormalize {
	dtransform round exch round exch idtransform
	} bind def

/lnormalize { % line widths are always odd so that arrow heads work
	0 dtransform exch cvi 2 idiv 2 mul 1 add exch idtransform pop
	} bind def

/H { % THICK
	lnormalize setlinewidth
	} bind def

/Z {
	setlinecap
	} bind def
	
% This is used to fill or stroke white behind a Level 2 pattern
/PFill {
	graymode fMLevel1 or not {
		gsave 1 setgray eofill grestore
	} if
} bind def
/PStroke {
	graymode fMLevel1 or not {
		gsave 1 setgray stroke grestore
	} if
	stroke
} bind def

/X { % TEXTURE
	fillvals exch get
	dup type /stringtype eq
	{8 1 setPatternMode} % Silly to pass parameters here
	{setGrayScaleMode}
	ifelse
	} bind def

/V { % FILL
	PFill gsave eofill grestore
	} bind def

/Vclip {
	clip
	} bind def

/Vstrk {
	currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def

/N { % PEN
	PStroke
	} bind def

/Nclip {
	strokepath clip newpath
	} bind def

/Nstrk {
	currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def

/M {newpath moveto} bind def
/E {lineto} bind def
/D {curveto} bind def
/O {closepath} bind def

/L { % POLYLINE
 	/n exch def
	newpath
	normalize
	moveto 
	2 1 n {pop normalize lineto} for
	} bind def

/Y { % POLYGON !!!
	L % POLYLINE
	closepath
	} bind def

/R { % RECT x1 y1 x2 y2
	/y2 exch def
	/x2 exch def
	/y1 exch def
	/x1 exch def
	x1 y1
	x2 y1
	x2 y2
	x1 y2
	4 Y % POLYGON
	} bind def

/rarc % Leaves all sorts of junk on the operand stack for caller to clear off
	{rad % arcto might fail if we're scaled way down
	 arcto
	} bind def

/RR { % ROUNDRECT x1 y1 x2 y2 r
	/rad exch def
	normalize
	/y2 exch def
	/x2 exch def
	normalize
	/y1 exch def
	/x1 exch def
	mark
	newpath
	{
	x1 y1 rad add moveto
	x1 y2 x2 y2 rarc
	x2 y2 x2 y1 rarc
	x2 y1 x1 y1 rarc
	x1 y1 x1 y2 rarc
	closepath
	} stopped {x1 y1 x2 y2 R} if % in case rarc failed for degenerate arcs
	cleartomark
	} bind def

/RRR { % ROUNDRECT ROTATED xs ys x1 y1 x2 y2 x3 y3 x4 y4 r
	/rad exch def
	normalize /y4 exch def /x4 exch def
	normalize /y3 exch def /x3 exch def
	normalize /y2 exch def /x2 exch def
	normalize /y1 exch def /x1 exch def
	newpath
	normalize moveto % eats xs ys
	mark
	{
	x2 y2 x3 y3 rarc
	x3 y3 x4 y4 rarc
	x4 y4 x1 y1 rarc
	x1 y1 x2 y2 rarc
	closepath
	} stopped
	 {x1 y1 x2 y2 x3 y3 x4 y4 newpath moveto lineto lineto lineto closepath} if
	cleartomark
	} bind def

/C { % CLIP
	grestore
	gsave
	R % RECT
	clip
	setCurrentScreen
} bind def

/CP { % CLIPPOLY p1x p1y p2x p2y ... n 
	grestore
	gsave
	Y % POLYGON
	clip
	setCurrentScreen
} bind def

/F { % FONT
	FMfonts exch get
	FMpointsize scalefont
	setfont
	} bind def

/Q { % POINTSIZE (& font)
	/FMpointsize exch def
	F % could be slightly optimized here
	} bind def

/T { % TEXT <string> <x> <y>
	moveto show
	} bind def

% Callers of RF (rotate/flip) must gsave (or save) first; (g)restore when done
/RF { % <flip> <theta>
	rotate
	0 ne {-1 1 scale} if
	} bind def

/TF { % TEXTFLIPROTATE <string> <flip> <theta> <x> <y>
	gsave
	moveto 
	RF
	show
	grestore
	} bind def

/P { % PADTEXT <pad> <string> <x> <y>
	moveto
	0 32 3 2 roll widthshow
	} bind def

/PF { % PADTEXTFLIPROTATE <pad> <string> <flip> <theta> <x> <y>
	gsave
	moveto 
	RF
	0 32 3 2 roll widthshow
	grestore
	} bind def

/S { % SPREADTEXT <spread> <string> <x> <y>
	moveto
	0 exch ashow
	} bind def

/SF { % SPREADTEXTFLIPROTATE <spread> <string> <flip> <theta> <x> <y>
	gsave
	moveto
	RF
	0 exch ashow
	grestore
	} bind def

/B { % PADSPREADTEXT <pad> <spread> <string> <x> <y>
	moveto
	0 32 4 2 roll 0 exch awidthshow
	} bind def

/BF { % PADSPREADTEXTFLIPROTATE <pad> <spread> <string> <flip> <theta> <x> <y>
	gsave
	moveto
	RF
	0 32 4 2 roll 0 exch awidthshow
	grestore
	} bind def

/G { % ARCFILL theta1 theta2 width height x y
	gsave
	newpath
	normalize translate 0.0 0.0 moveto % eats x y
	dnormalize scale % eats width height
	0.0 0.0 1.0 5 3 roll arc % eats theta1 theta2
	closepath 
	PFill fill
	grestore
	} bind def

/Gstrk {
	savematrix
    newpath
    2 index 2 div add exch 3 index 2 div sub exch % theta1 theta2 width height x y
    normalize 2 index 2 div sub exch 3 index 2 div add exch % theta1 theta2 width height x y
    translate
    scale % eats width height
    0.0 0.0 1.0 5 3 roll arc % eats theta1 theta2
    restorematrix
    currentlinewidth exch setlinewidth PStroke setlinewidth
    } bind def

/Gclip { % ARCFILL theta1 theta2 width height x y swid
	newpath
	savematrix
	normalize translate 0.0 0.0 moveto % eats x y
	dnormalize scale % eats width height
	0.0 0.0 1.0 5 3 roll arc % eats theta1 theta2
	closepath 
	clip newpath
	restorematrix
	} bind def

/GG { % ARCFILL ROTATED theta1 theta2 width height angle x y
	gsave
	newpath
	normalize translate 0.0 0.0 moveto % eats x y
	rotate % eats angle
	dnormalize scale % eats width height
	0.0 0.0 1.0 5 3 roll arc % eats theta1 theta2
	closepath
	PFill
	fill
	grestore
	} bind def

/GGclip { % ARCFILL ROTATED theta1 theta2 width height angle x y
	savematrix
	newpath
    normalize translate 0.0 0.0 moveto % eats x y
    rotate % eats angle
    dnormalize scale % eats width height
    0.0 0.0 1.0 5 3 roll arc % eats theta1 theta2
    closepath
	clip newpath
	restorematrix
	} bind def

/GGstrk { % ARCFILL ROTATED swid theta1 theta2 width height angle x y
	savematrix
    newpath
    normalize translate 0.0 0.0 moveto % eats x y
    rotate % eats angle
    dnormalize scale % eats width height
    0.0 0.0 1.0 5 3 roll arc % eats theta1 theta2
    closepath 
	restorematrix
    currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def

/A { % ARCPEN theta1 theta2 width height x y
	gsave
	savematrix
	newpath
	2 index 2 div add exch 3 index 2 div sub exch % theta1 theta2 width height x y
	normalize 2 index 2 div sub exch 3 index 2 div add exch % theta1 theta2 width height x y
	translate 
	scale % eats width height
	0.0 0.0 1.0 5 3 roll arc % eats theta1 theta2
	restorematrix
	PStroke
	grestore
	} bind def

/Aclip {
	newpath
	savematrix
	normalize translate 0.0 0.0 moveto % eats x y
	dnormalize scale % eats width height
	0.0 0.0 1.0 5 3 roll arc % eats theta1 theta2
	closepath 
	strokepath clip newpath
	restorematrix
} bind def

/Astrk {
	Gstrk
} bind def

/AA { % ARCPEN ROTATED theta1 theta2 width height angle x y
	gsave
	savematrix
	newpath
	% theta1 theta2 width height angle x y
	3 index 2 div add exch 4 index 2 div sub exch 
	% theta1 theta2 width height angle x y
	normalize 3 index 2 div sub exch 4 index 2 div add exch
	translate % eats x y
	rotate % eats angle
	scale % eats width height
	0.0 0.0 1.0 5 3 roll arc % eats theta1 theta2
	restorematrix
	PStroke
	grestore
	} bind def

/AAclip {
	savematrix
	newpath
    normalize translate 0.0 0.0 moveto % eats x y
    rotate % eats angle
    dnormalize scale % eats width height
    0.0 0.0 1.0 5 3 roll arc % eats theta1 theta2
    closepath
	strokepath clip newpath
	restorematrix
} bind def

/AAstrk {
	GGstrk
} bind def

/BEGINPRINTCODE { % -x -y width height
	/FMdicttop countdictstack 1 add def % high-water mark of dict stack
	/FMoptop count 7 sub def % tricky! 7 params on stack, plus "/FMoptop"
	/FMsaveobject save def
	userdict begin % insulate user from FrameDict; not in /FMdicttop count
	/showpage {} def % this def is in userdict
	FMNORMALIZEGRAPHICS % in case we're in a strange state
	3 index neg 3 index neg translate
	} bind def

/ENDPRINTCODE {
	count -1 FMoptop {pop pop} for % clear user junk from operand stack
	countdictstack -1 FMdicttop {pop end} for % ditto for dict stack
	FMsaveobject restore % this is now safe, unless user very malicious
	} bind def

/gn { % get a number in a funny encoding scheme
	0 % result on stack
	{	46 mul % shift old digits
		cf read pop % get next character
		32 sub % zero is the space character
		dup 46 lt {exit} if % quit if we're the last digit
		46 sub add % add in this digit and loop around for next
		} loop
	add % result on stack
	} bind def

/cfs { % create a string of length "sl" filled with "val"s
	/str sl string def % create string as "str"
	0 1 sl 1 sub {str exch val put} for % fill array
	str def % define real array name, too; name is on stack from caller
	} bind def

/ic [ % "case" stmt list of procedures that the image commands should call
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0
	{0 hx} {1 hx} {2 hx} {3 hx} {4 hx} {5 hx} {6 hx} {7 hx} {8 hx} {9 hx}
	{10 hx} {11 hx} {12 hx} {13 hx} {14 hx} {15 hx} {16 hx} {17 hx} {18 hx}
	{19 hx} {gn hx} {0} {1} {2} {3} {4} {5} {6} {7} {8} {9} {10} {11} {12}
	{13} {14} {15} {16} {17} {18} {19} {gn} {0 wh} {1 wh} {2 wh} {3 wh}
	{4 wh} {5 wh} {6 wh} {7 wh} {8 wh} {9 wh} {10 wh} {11 wh} {12 wh}
	{13 wh} {14 wh} {gn wh} {0 bl} {1 bl} {2 bl} {3 bl} {4 bl} {5 bl} {6 bl}
	{7 bl} {8 bl} {9 bl} {10 bl} {11 bl} {12 bl} {13 bl} {14 bl} {gn bl}
	{0 fl} {1 fl} {2 fl} {3 fl} {4 fl} {5 fl} {6 fl} {7 fl} {8 fl} {9 fl}
	{10 fl} {11 fl} {12 fl} {13 fl} {14 fl} {gn fl}
	] def

/ms { % make all the strings
	/sl exch def % remember length of currently existing strings
	/val 255 def % that's white
	/ws cfs % make "ws" a string filled with white
	/im cfs % and "im" is a complete image scanline
	/val 0 def % that's black
	/bs cfs % make "bs" a string filled with black
	/cs cfs % here's where we'll put complete command lines
	} bind def

400 ms % make strings that will be plenty long for most applications

/ip { % image procedure; reads and executes commands to make scanlines
	is % leave image string and...
	0 % ...image position on stack all through this procedure
	cf cs readline pop % get a string of commands
	{	ic exch get exec % execute next command
		add % all commands leave a length on the stack; update pos
		} forall % step through all commands
	pop % get rid of image position pointer
	% image string left on stack, so it's returned to image primitive
	} bind def
/rip { % this is similar to ip above, except for 24 bit images
	   % this takes an extra argument, the width of the image
	  % do red
	  bis ris copy pop % copy blue to red
      is
      0
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop % remove is and position from stack
	  ris gis copy pop % copy red to green
	  dup is exch % position of green is width bytes into is
	  % do green
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop
	  gis bis copy pop % copy green to blue
	  dup add is exch % position of blue is 2*width bytes into is
	  % do blue
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
      pop 
      
      } bind def

/rip4 { % this is similar to ip above, except for 32 bit images
	   % this takes an extra argument, the width of the image
	  % do cyan
	  kis cis copy pop % copy black to cyan
      is
      0
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop % remove is and position from stack
	  cis mis copy pop % copy cyan to magenta
	  dup is exch % position of magenta is width bytes into is
	  % do magenta
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop
	  mis yis copy pop % copy magenta to yellow
	  dup dup add is exch % position of yellow is 2*width bytes into is
	  % do yellow
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop
	  yis kis copy pop % copy yellow to black
	  3 mul is exch % position of black is 3*width bytes into is
	  % do black
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
      pop 
      
      } bind def


/wh { % fill a number of bytes with "white"
	/len exch def % number of bytes to fill
	/pos exch def % position to put them at
	ws 0 len getinterval im pos len getinterval copy pop
	pos len % remember where we got to
	} bind def

/bl { % fill a number of bytes with "black"
	/len exch def % number of bytes to fill
	/pos exch def % position to put them at
	bs 0 len getinterval im pos len getinterval copy pop
	pos len % remember where we got to
	} bind def

/s1 1 string def

/fl { % fill a number of bytes with a specific hex value
	/len exch def % number of bytes to fill
	/pos exch def % position to put them at
	/val cf s1 readhexstring pop 0 get def
	pos 1 pos len add 1 sub {im exch val put} for
	pos len % remember where we got to
	} bind def

/hx { % read hex bytes directly; on entry, stack has <str> <pos> <len>
	3 copy getinterval % stack has <str> <pos> <len> <substr>
	cf exch readhexstring pop pop % stack back to <str> <pos> <len>
	} bind def

/wbytes { % width depth -> wb      find width in bytes  given 1, 2, 8 or 24 or 32
      dup dup
      8 gt { pop 8 idiv mul }
      { 8 eq {pop} {1 eq {7 add 8 idiv} {3 add 4 idiv} ifelse} ifelse } ifelse
	} bind def
/BEGINBITMAPBWc { % iw, ih, width, height, theta, x y 
	1 {} COMMONBITMAPc
	} bind def
/BEGINBITMAPGRAYc { % iw, ih, width, height, theta, x y 
	8 {} COMMONBITMAPc
	} bind def
/BEGINBITMAP2BITc { % iw, ih, width, height, theta, x y 
	2 {} COMMONBITMAPc
	} bind def
%
% Common routine for imaging compressed images
%
/COMMONBITMAPc { % iw, ih, width, height, theta, x y depth proc
		 % (x,y) is the lower left corner of the image
	/cvtProc exch def
	/depth exch def
	gsave
	% rotate about center of image
	3 index 2 div add exch	% iw ih width height theta y+(height/2) x
	4 index 2 div add exch	% iw ih width height theta x+(width/2) y+(height/2)
	translate		% iw ih width height theta
	rotate			% iw ih width height
	1 index 2 div neg	% iw ih width height -(width/2)
	1 index 2 div neg	% iw ih width height -(width/2) -(height/2)
	translate		% iw ih width height
	scale			% iw ih
	/height exch def /width exch def
	/lb width depth wbytes def % so "lb" has width in bytes
	sl lb lt {lb ms} if % maybe make bigger strings
	/bitmapsave save def % LW+ has a buggy memory leak!
	cvtProc                % run the desired proc after save has occurred
	/is im 0 lb getinterval def % image substring
	ws 0 lb getinterval is copy pop % whiten it
	/cf currentfile def % evaluate "currentfile" only once
	width height depth [width 0 0 height neg 0 height] % top to bottom
	{ip} image % zap!
	bitmapsave restore % avoid occasional disaster on the LW+
	grestore
	} bind def
/BEGINBITMAPBW { % iw, ih, width, height, theta, x y 
	1 {} COMMONBITMAP
	} bind def
/BEGINBITMAPGRAY { % iw, ih, width, height, theta, x y 
	8 {} COMMONBITMAP
	} bind def
/BEGINBITMAP2BIT { % iw, ih, width, height, theta, x y 
	2 {} COMMONBITMAP
	} bind def
%
% Common routine for uncompressed images
%
/COMMONBITMAP { % iw, ih, width, height, theta, x y depth proc
	/cvtProc exch def
	/depth exch def
	gsave
	% rotate about center of image
	3 index 2 div add exch	% iw ih width height theta y+(height/2) x
	4 index 2 div add exch	% iw ih width height theta x+(width/2) y+(height/2)
	translate		% iw ih width height theta
	rotate			% iw ih width height
	1 index 2 div neg	% iw ih width height -(width/2)
	1 index 2 div neg	% iw ih width height -(width/2) -(height/2)
	translate		% iw ih width height
	scale			% iw ih
	/height exch def /width exch def
	/bitmapsave save def % LW+ has a buggy memory leak!
	cvtProc              % run the desired proc after save has occurred
	/is width depth wbytes string def
	/cf currentfile def % evaluate "currentfile" only once
	width height depth [width 0 0 height neg 0 height] % top to bottom
	{cf is readhexstring pop} image
	bitmapsave restore % avoid occasional disaster on the LW+
	grestore
	} bind def

%
% All this hairy color setup stuff gus wrote on the mac, I just copied and
% changed the variable names to be humanly readable.

/ngrayt 256 array def
/nredt 256 array def
/nbluet 256 array def
/ngreent 256 array def

fMLevel1 {
/colorsetup {
	currentcolortransfer
	/gryt exch def
	/blut exch def
	/grnt exch def
	/redt exch def
	0 1 255 {
		/indx exch def
		/cynu 1 red indx get 255 div sub def
		/magu 1 green indx get 255 div sub def
		/yelu 1 blue indx get 255 div sub def
		/kk cynu magu min yelu min def
% The HP PaintJet XL300 ignores the gray transfer curve but still sets its
% default black generation and undercolor removal functions as if it is
% used. This causes black colors not to work. Bug#56844 <Gus 2/22/93>
% - We go back to the old (correct?) way of doing this since this code
% is now bypassed for PS Level 2 printers in favor of colorSetup2 which
% uses PS Level 2 indexed color, which is much cleaner. <Gus 3/3/93>
		/u kk currentundercolorremoval exec def
%-		/u 0 def
		nredt indx 1 0 cynu u sub max sub redt exec put
		ngreent indx 1 0 magu u sub max sub grnt exec put
		nbluet indx 1 0 yelu u sub max sub blut exec put
		ngrayt indx 1 kk currentblackgeneration exec sub gryt exec put
	} for
	{255 mul cvi nredt exch get}
	{255 mul cvi ngreent exch get}
	{255 mul cvi nbluet exch get}
	{255 mul cvi ngrayt exch get}
	setcolortransfer
	{pop 0} setundercolorremoval
	{} setblackgeneration
	} bind def
}
{
% Here, we set up indexed color for imaging on PS Level 2 without mucking around
% with the transfer functions.

/colorSetup2 {
	[ /Indexed /DeviceRGB 255 
		{dup red exch get 255 div 
		 exch dup green exch get 255 div 
		 exch blue exch get 255 div}
	] setcolorspace
} bind def
} ifelse

%
% Setup a transfer function to convert psuedo color values into grayscale
% values based on the color lookup tables.
%
/fakecolorsetup {
	/tran 256 string def
	0 1 255 {/indx exch def 
		tran indx
		red indx get 77 mul
		green indx get 151 mul
		blue indx get 28 mul
		add add 256 idiv put} for
	currenttransfer
	{255 mul cvi tran exch get 255.0 div}
	exch fmConcatProcs settransfer
} bind def
%
% image a color image
%
/BITMAPCOLOR { % iw, ih, width, height, theta, x y 
	/depth 8 def
	gsave
	% rotate about center of image
	3 index 2 div add exch	% iw ih width height theta y+(height/2) x
	4 index 2 div add exch	% iw ih width height theta x+(width/2) y+(height/2)
	translate		% iw ih width height theta
	rotate			% iw ih width height
	1 index 2 div neg	% iw ih width height -(width/2)
	1 index 2 div neg	% iw ih width height -(width/2) -(height/2)
	translate		% iw ih width height
	scale			% iw ih
	/height exch def /width exch def
	/bitmapsave save def
	fMLevel1 {	
		colorsetup
		/is width depth wbytes string def
		/cf currentfile def % evaluate "currentfile" only once
		width height depth [width 0 0 height neg 0 height] % top to bottom
		{cf is readhexstring pop} {is} {is} true 3 colorimage 
	} {
		colorSetup2
		/is width depth wbytes string def
		/cf currentfile def % evaluate "currentfile" only once
		7 dict dup begin
			/ImageType 1 def
			/Width width def
			/Height height def
			/ImageMatrix [width 0 0 height neg 0 height] def
			/DataSource {cf is readhexstring pop} bind def
			/BitsPerComponent depth def
			/Decode [0 255] def
		end image	
	} ifelse
	bitmapsave restore 
	grestore
	} bind def
%
% Compressed color image rendering
%
/BITMAPCOLORc { % iw, ih, width, height, theta, x y 
	/depth 8 def
	gsave
	% rotate about center of image
	3 index 2 div add exch	% iw ih width height theta y+(height/2) x
	4 index 2 div add exch	% iw ih width height theta x+(width/2) y+(height/2)
	translate		% iw ih width height theta
	rotate			% iw ih width height
	1 index 2 div neg	% iw ih width height -(width/2)
	1 index 2 div neg	% iw ih width height -(width/2) -(height/2)
	translate		% iw ih width height
	scale			% iw ih
	/height exch def /width exch def
	/lb width depth wbytes def % so "lb" has width in bytes
	sl lb lt {lb ms} if % maybe make bigger strings
	/bitmapsave save def 
	fMLevel1 {	
		colorsetup
		/is im 0 lb getinterval def % image substring
		ws 0 lb getinterval is copy pop % whiten it
		/cf currentfile def % evaluate "currentfile" only once
		width height depth [width 0 0 height neg 0 height] % top to bottom
		{ip} {is} {is} true 3 colorimage
	} {
		colorSetup2
		/is im 0 lb getinterval def % image substring
		ws 0 lb getinterval is copy pop % whiten it
		/cf currentfile def % evaluate "currentfile" only once
		7 dict dup begin
			/ImageType 1 def
			/Width width def
			/Height height def
			/ImageMatrix [width 0 0 height neg 0 height] def
			/DataSource {ip} bind def
			/BitsPerComponent depth def
			/Decode [0 255] def
		end image	
	} ifelse
	bitmapsave restore 
	grestore
	} bind def
/BITMAPTRUECOLORc { 
	/depth 24 def
        gsave
 	% rotate about center of image
	3 index 2 div add exch	% iw ih width height theta y+(height/2) x
	4 index 2 div add exch	% iw ih width height theta x+(width/2) y+(height/2)
	translate		% iw ih width height theta
	rotate			% iw ih width height
	1 index 2 div neg	% iw ih width height -(width/2)
	1 index 2 div neg	% iw ih width height -(width/2) -(height/2)
	translate		% iw ih width height
	scale			% iw ih
	/height exch def /width exch def
	/lb width depth wbytes def % so "lb" has width in bytes
	sl lb lt {lb ms} if % maybe make bigger strings
	/bitmapsave save def 
        
	/is im 0 lb getinterval def	% Whole scanline
	/ris im 0 width getinterval def	% red part of im
	/gis im width width getinterval def	% green part of im
	/bis im width 2 mul width getinterval def % blue part of im
        
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	width height 8 [width 0 0 height neg 0 height] 
	{width rip pop ris} {gis} {bis} true 3 colorimage
	bitmapsave restore 
	grestore
	} bind def
/BITMAPCMYKc { 
	/depth 32 def
        gsave
 	% rotate about center of image
	3 index 2 div add exch	% iw ih width height theta y+(height/2) x
	4 index 2 div add exch	% iw ih width height theta x+(width/2) y+(height/2)
	translate		% iw ih width height theta
	rotate			% iw ih width height
	1 index 2 div neg	% iw ih width height -(width/2)
	1 index 2 div neg	% iw ih width height -(width/2) -(height/2)
	translate		% iw ih width height
	scale			% iw ih
	/height exch def /width exch def
	/lb width depth wbytes def % so "lb" has width in bytes
	sl lb lt {lb ms} if % maybe make bigger strings
	/bitmapsave save def 
        
	/is im 0 lb getinterval def	% Whole scanline
	/cis im 0 width getinterval def	% cyan part of im
	/mis im width width getinterval def	% magenta part of im
	/yis im width 2 mul width getinterval def % yellow part of im
	/kis im width 3 mul width getinterval def % black part of im
        
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	width height 8 [width 0 0 height neg 0 height] 
	{width rip4 pop cis} {mis} {yis} {kis} true 4 colorimage
	bitmapsave restore 
	grestore
	} bind def
/BITMAPTRUECOLOR { 
        gsave
		% rotate about center of image
		3 index 2 div add exch	% iw ih width height theta y+(height/2) x
		4 index 2 div add exch	% iw ih width height theta x+(width/2) y+(height/2)
		translate		% iw ih width height theta
		rotate			% iw ih width height
		1 index 2 div neg	% iw ih width height -(width/2)
		1 index 2 div neg	% iw ih width height -(width/2) -(height/2)
		translate		% iw ih width height
		scale			% iw ih
		/height exch def /width exch def
        /bitmapsave save def 
        /is width string def
        /gis width string def
        /bis width string def
        /cf currentfile def 
        width height 8 [width 0 0 height neg 0 height] 
        { cf is readhexstring pop } 
        { cf gis readhexstring pop } 
        { cf bis readhexstring pop } 
        true 3 colorimage 
        bitmapsave restore 
        grestore
        } bind def
/BITMAPCMYK { 
        gsave
		% rotate about center of image
		3 index 2 div add exch	% iw ih width height theta y+(height/2) x
		4 index 2 div add exch	% iw ih width height theta x+(width/2) y+(height/2)
		translate		% iw ih width height theta
		rotate			% iw ih width height
		1 index 2 div neg	% iw ih width height -(width/2)
		1 index 2 div neg	% iw ih width height -(width/2) -(height/2)
		translate		% iw ih width height
		scale			% iw ih
		/height exch def /width exch def
        /bitmapsave save def 
        /is width string def
        /mis width string def
        /yis width string def
        /kis width string def
        /cf currentfile def 
        width height 8 [width 0 0 height neg 0 height] 
        { cf is readhexstring pop } 
        { cf mis readhexstring pop } 
        { cf yis readhexstring pop } 
        { cf kis readhexstring pop } 
        true 4 colorimage 
        bitmapsave restore 
        grestore
        } bind def
%
% image a color image to a b&width device
%
/BITMAPTRUEGRAYc { 
	/depth 24 def
        gsave
	% rotate about center of image
	3 index 2 div add exch	% iw ih width height theta y+(height/2) x
	4 index 2 div add exch	% iw ih width height theta x+(width/2) y+(height/2)
	translate		% iw ih width height theta
	rotate			% iw ih width height
	1 index 2 div neg	% iw ih width height -(width/2)
	1 index 2 div neg	% iw ih width height -(width/2) -(height/2)
	translate		% iw ih width height
	scale			% iw ih
	/height exch def /width exch def
	/lb width depth wbytes def % so "lb" has width in bytes
	sl lb lt {lb ms} if % maybe make bigger strings
        /bitmapsave save def 
        
	/is im 0 lb getinterval def	% Whole scanline
	/ris im 0 width getinterval def	% red part of im
	/gis im width width getinterval def	% green part of im
	/bis im width 2 mul width getinterval def % blue part of im
        ws 0 lb getinterval is copy pop 
        /cf currentfile def 
        width height 8 [width 0 0 height neg 0 height] 
        {width rip pop ris gis bis width gray} image
        bitmapsave restore 
        grestore
        } bind def
/BITMAPCMYKGRAYc { 
	/depth 32 def
        gsave
	% rotate about center of image
	3 index 2 div add exch	% iw ih width height theta y+(height/2) x
	4 index 2 div add exch	% iw ih width height theta x+(width/2) y+(height/2)
	translate		% iw ih width height theta
	rotate			% iw ih width height
	1 index 2 div neg	% iw ih width height -(width/2)
	1 index 2 div neg	% iw ih width height -(width/2) -(height/2)
	translate		% iw ih width height
	scale			% iw ih
	/height exch def /width exch def
	/lb width depth wbytes def % so "lb" has width in bytes
	sl lb lt {lb ms} if % maybe make bigger strings
        /bitmapsave save def 
        
	/is im 0 lb getinterval def	% Whole scanline
	/cis im 0 width getinterval def	% cyan part of im
	/mis im width width getinterval def	% magenta part of im
	/yis im width 2 mul width getinterval def % yellow part of im
	/kis im width 3 mul width getinterval def % black part of im
        ws 0 lb getinterval is copy pop 
        /cf currentfile def 
        width height 8 [width 0 0 height neg 0 height] 
        {width rip pop cis mis yis kis width cgray} image
        bitmapsave restore 
        grestore
        } bind def
/cgray { % c m y k width
        /ww exch def
        /k exch def
        /y exch def
        /m exch def
        /c exch def
        0 1 ww 1 sub { /i exch def c i get m i get y i get k i get CMYKtoRGB
				.144 mul 3 1 roll .587 mul 3 1 roll .299 mul add add
				c i 3 -1 roll floor cvi put } for
        c
 		} bind def
/gray { % r g b width
        /ww exch def
        /b exch def
        /g exch def
        /r exch def
        0 1 ww 1 sub { /i exch def r i get .299 mul g i get .587 mul
			b i get .114 mul add add r i 3 -1 roll floor cvi put } for
        r
        } bind def
/BITMAPTRUEGRAY { 
        gsave
		% rotate about center of image
		3 index 2 div add exch	% iw ih width height theta y+(height/2) x
		4 index 2 div add exch	% iw ih width height theta x+(width/2) y+(height/2)
		translate		% iw ih width height theta
		rotate			% iw ih width height
		1 index 2 div neg	% iw ih width height -(width/2)
		1 index 2 div neg	% iw ih width height -(width/2) -(height/2)
		translate		% iw ih width height
		scale			% iw ih
		/height exch def /width exch def
        /bitmapsave save def 
        /is width string def
        /gis width string def
        /bis width string def
        /cf currentfile def 
        width height 8 [width 0 0 height neg 0 height] 
        { cf is readhexstring pop 
          cf gis readhexstring pop 
          cf bis readhexstring pop width gray}  image
        bitmapsave restore 
        grestore
        } bind def
/BITMAPCMYKGRAY { 
        gsave
		% rotate about center of image
		3 index 2 div add exch	% iw ih width height theta y+(height/2) x
		4 index 2 div add exch	% iw ih width height theta x+(width/2) y+(height/2)
		translate		% iw ih width height theta
		rotate			% iw ih width height
		1 index 2 div neg	% iw ih width height -(width/2)
		1 index 2 div neg	% iw ih width height -(width/2) -(height/2)
		translate		% iw ih width height
		scale			% iw ih
		/height exch def /width exch def
        /bitmapsave save def 
        /is width string def
        /yis width string def
        /mis width string def
        /kis width string def
        /cf currentfile def 
        width height 8 [width 0 0 height neg 0 height] 
        { cf is readhexstring pop 
          cf mis readhexstring pop 
          cf yis readhexstring pop 
          cf kis readhexstring pop width cgray}  image
        bitmapsave restore 
        grestore
        } bind def
/BITMAPGRAY { % iw, ih, width, height, theta, x y 
	8 {fakecolorsetup} COMMONBITMAP
	} bind def
/BITMAPGRAYc { % iw, ih, width, height, theta, x y 
	8 {fakecolorsetup} COMMONBITMAPc
	} bind def
/ENDBITMAP {
	} bind def
end % of FrameDict definitions

% OPI stuff
	/ALDmatrix matrix def ALDmatrix currentmatrix pop
/StartALD {
	/ALDsave save def
	 savematrix
	 ALDmatrix setmatrix
	} bind def
/InALD {
	 restorematrix
	} bind def
/DoneALD {
	 ALDsave restore
	} bind def

% Dashed lines stuff
/I { setdash } bind def
/J { [] 0 setdash } bind def

%%EndProlog
%%BeginSetup
(5.0) FMVERSION
1 1 0 0 612 792 0 1 28 FMDOCUMENT
0 0 /Times-Roman FMFONTDEFINE
1 0 /Times-Bold FMFONTDEFINE
2 0 /Times-Italic FMFONTDEFINE
3 0 /Helvetica FMFONTDEFINE
4 1 /Symbol FMFONTDEFINE
5 0 /Times-BoldItalic FMFONTDEFINE
6 0 /Helvetica-Narrow FMFONTDEFINE
7 0 /Helvetica-Narrow-Bold FMFONTDEFINE
32 FMFILLS
0 0 FMFILL
1 0.1 FMFILL
2 0.3 FMFILL
3 0.5 FMFILL
4 0.7 FMFILL
5 0.9 FMFILL
6 0.97 FMFILL
7 1 FMFILL
8 <0f1e3c78f0e1c387> FMFILL
9 <0f87c3e1f0783c1e> FMFILL
10 <cccccccccccccccc> FMFILL
11 <ffff0000ffff0000> FMFILL
12 <8142241818244281> FMFILL
13 <03060c183060c081> FMFILL
14 <8040201008040201> FMFILL
16 1 FMFILL
17 0.9 FMFILL
18 0.7 FMFILL
19 0.5 FMFILL
20 0.3 FMFILL
21 0.1 FMFILL
22 0.03 FMFILL
23 0 FMFILL
24 <f0e1c3870f1e3c78> FMFILL
25 <f0783c1e0f87c3e1> FMFILL
26 <3333333333333333> FMFILL
27 <0000ffff0000ffff> FMFILL
28 <7ebddbe7e7dbbd7e> FMFILL
29 <fcf9f3e7cf9f3f7e> FMFILL
30 <7fbfdfeff7fbfdfe> FMFILL
%%EndSetup
%%Page: "1" 1
%%BeginPaperSize: Letter
%%EndPaperSize
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
[ 0.5 0.5 0 0.5 0 0 0.5]
[ 0.5 0 0 0.5 0 0.5 0.5]
[ 0.5 0 0.5 0.5 0 0.5 0]
[ 0 0.5 0 0.5 0.5 0 0.5]
[ 0 0.5 0.5 0.5 0.5 0 0]
[ 0 0 0.5 0.5 0.5 0.5 0]
[ 0 0 0 0.5 0.5 0.5 0.5]
[ 0 0 0 0.25 0.75 0.75 0.75]
 15 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
J
0 0 0 1 0 0 0 K
0 11 Q
0 X
0 0 0 1 0 0 0 K
(1) 300 47.5 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 12 Q
(1.  Introduction) 72 401 T
0 11 Q
0.88 (In a distrib) 72 381.67 P
0.88 (uted system, objects may migrate from) 121.19 381.67 P
1.24 (one node to another for a v) 72 368.67 P
1.24 (ariety of reasons. The) 197.66 368.67 P
0.6 (ne) 72 355.67 P
0.6 (w location may pro) 82.11 355.67 P
0.6 (vide a more suitable compu-) 168.99 355.67 P
7.93 (tational en) 72 342.67 P
7.93 (vironment, it may of) 125.62 342.67 P
7.93 (fer cheaper) 239.58 342.67 P
0.03 (resources, or it may ha) 72 329.67 P
0.03 (v) 171.77 329.67 P
0.03 (e data needed by the object) 177.1 329.67 P
0.27 (to satisfy its goals. The ability of an object to e) 72 316.67 P
0.27 (xist) 280.77 316.67 P
0.29 (in a resource space that is not entirely dedicated to) 72 303.67 P
2.05 (its o) 72 290.67 P
2.05 (wn computation raises security concerns for) 92.42 290.67 P
0.68 (the object itself, and raises performance and secu-) 72 277.67 P
1.05 (rity concerns for the host en) 72 264.67 P
1.05 (vironment. Indi) 199.94 264.67 P
1.05 (vidual) 269.17 264.67 P
1.35 (objects or groups of objects may e) 72 251.67 P
1.35 (xhibit undesir-) 230.85 251.67 P
3.06 (able) 72 238.67 P
2 F
3.06 (r) 96.14 238.67 P
3.06 (esour) 100.01 238.67 P
3.06 (ce consumptive behavior) 124.05 238.67 P
0 F
3.06 (. These rea-) 238.93 238.67 P
-0.23 (sons mak) 72 225.67 P
-0.23 (e it important to study w) 112.91 225.67 P
-0.23 (ays of controlling) 219.52 225.67 P
(resources used by mobile objects.) 72 212.67 T
4.89 0.11 (Most of the w) 72 190.67 B
4.89 0.11 (ork on security and resource) 149.4 190.67 B
2.48 0.11 (management has been performed for stationary) 72 176.67 B
6.95 0.11 (systems: client serv) 72 162.67 B
6.95 0.11 (er security models and) 174.1 162.67 B
2.8 0.11 (operating systems based resource management.) 72 148.67 B
3.39 0.11 (A mobile object system must protect its o) 72 134.67 B
3.39 0.11 (wn) 283 134.67 B
1.6 0.11 (resources, including the underlying en) 72 120.67 B
1.6 0.11 (vironment) 250.46 120.67 B
5.64 0.11 (\050such as the operating system or a virtual) 72 106.67 B
2.83 0.11 (machine, e.g. JVM, or Tcl/Tk interpreter\051, \336le) 72 92.67 B
1.1 0.11 (system, de) 72 78.67 B
1.1 0.11 (vices, memory) 120.37 78.67 B
1.1 0.11 (, and other \050non\051mobile) 186.96 78.67 B
0 1 1 0 1 0 0 K
0 0 0 1 0 0 0 K
4.26 0.11 (objects. In order to achie) 315 401.67 B
4.26 0.11 (v) 443.68 401.67 B
4.26 0.11 (e this, the mobile) 449.13 401.67 B
0.47 0.11 (object system has to identify the incoming object) 315 387.67 B
0.33 0.11 (as well the sender of the object. The system must) 315 373.67 B
4.99 0.11 (recognize the access rights of the incoming) 315 359.67 B
1.81 0.11 (object and optionally support its con\336dentiality) 315 345.67 B
1.81 0.11 (.) 536.7 345.67 B
0.86 0.11 (There are v) 315 331.67 B
0.86 0.11 (arious possible threats and attacks on) 367.74 331.67 B
5.03 0.11 (a mobile object system, including denial of) 315 317.67 B
2.46 0.11 (service attacks, unauthorized access, corruption) 315 303.67 B
6.04 0.11 (of data, spamming, spoo\336ng, trojan horses,) 315 289.67 B
7.36 0.11 (replay) 315 275.67 B
7.36 0.11 (, impersonation, co) 342.43 275.67 B
7.36 0.11 (v) 443.4 275.67 B
7.36 0.11 (ert channels, and) 448.85 275.67 B
9.72 0.11 (ea) 315 261.67 B
9.72 0.11 (v) 324.77 261.67 B
9.72 0.11 (esdropping [32]. The attacks can be) 330.21 261.67 B
4.7 0.11 (performed through an application or through) 315 247.67 B
2.86 0.11 (mobile object systems, utilizing weaknesses in) 315 233.67 B
3.27 0.11 (the communication infrastructure, language, or) 315 219.67 B
0.57 0.11 (mobile object system implementation.) 315 205.67 B
1.19 (The security polic) 315 185.67 P
1.19 (y is determined by f) 396.65 185.67 P
1.19 (actors such) 489.29 185.67 P
-0.2 (as the credentials of the communicating parties, the) 315 172.67 P
3.29 (object classes, and the authority of the mobile) 315 159.67 P
0.32 (object. Policies may restrict or grant mobile object) 315 146.67 P
0.26 (capabilities by setting resource consumption limits) 315 133.67 P
1.14 (and access permissions to resources. The security) 315 120.67 P
0.89 (and safety services of the underlying communica-) 315 107.67 P
0.27 (tions infrastructure and the programming language) 315 94.67 P
-0.08 (enforce the security policies. Multiple security pol-) 315 81.67 P
0 1 1 0 1 0 0 K
0 0 0 1 0 0 0 K
1 15 Q
(Case Studies in) 256.83 710 T
1 17 Q
(Security and Resour) 174.24 690.67 T
(ce Management) 322.21 690.67 T
1 15 Q
(f) 245.37 672 T
(or Mobile Objects) 249.99 672 T
0 12 Q
(Dejan) 138.17 656 T
(Milojicic) 169.83 656 T
0 9.6 Q
(\240) 213.83 660.8 T
0 12 Q
(,) 218.63 656 T
(Gul) 224.63 656 T
(Agha) 245.63 656 T
0 9.6 Q
(\340) 271.62 660.8 T
0 12 Q
(,) 276.42 656 T
(Philippe) 282.42 656 T
(Bernadat) 325.43 656 T
0 9.6 Q
(\240) 368.75 660.8 T
0 12 Q
(,) 373.55 656 T
(Deepika) 379.55 656 T
(Chauhan) 422.54 656 T
0 9.6 Q
(\240) 465.2 660.8 T
0 12 Q
(,) 469.99 656 T
(Shai) 180.07 642 T
(Guday) 204.4 642 T
0 9.6 Q
(\240) 236.4 646.8 T
0 12 Q
(, Nadeem) 241.2 642 T
(Jamali) 290.18 642 T
0 9.6 Q
(\340) 321.51 646.8 T
0 12 Q
(,) 326.31 642 T
(and) 332.31 642 T
(Dan) 352.64 642 T
(Lambright) 375.63 642 T
0 9.6 Q
(\240) 426.3 646.8 T
1 F
(\240) 95.28 627.8 T
1 12 Q
(The) 100.08 623 T
(Open) 123.08 623 T
(Gr) 154.09 623 T
(oup) 168.54 623 T
(Resear) 190.88 623 T
(ch) 225.98 623 T
(Institute) 240.98 623 T
1 9.6 Q
(\340) 287.31 627.8 T
1 12 Q
(Uni) 292.11 623 T
(v) 310.67 623 T
(ersity) 316.55 623 T
(of) 348.2 623 T
(Illinois) 361.2 623 T
(at) 399.55 623 T
(Urbana-Champaign) 412.55 623 T
0 1 1 0 1 0 0 K
0 0 0 1 0 0 0 K
0.12 (Abstract) 283.03 599.5 S
0 10 Q
0.64 (Mobile objects ha) 108.33 580.83 P
0.64 (v) 181.07 580.83 P
0.64 (e g) 185.92 580.83 P
0.64 (ained a lot of attention in research and industry in the recent past, b) 198.44 580.83 P
0.64 (ut the) 475.35 580.83 P
0.64 (y) 498.33 580.83 P
0.76 (also ha) 108.33 568.83 P
0.76 (v) 136.95 568.83 P
0.76 (e a long history) 141.8 568.83 P
0.76 (. Security is one of the k) 205.38 568.83 P
0.76 (e) 307.36 568.83 P
0.76 (y requirements and one of the most researched) 311.64 568.83 P
-0.05 (characteristics related to mobility) 108.33 556.83 P
-0.05 (. Resource management has been some) 241.14 556.83 P
-0.05 (what ne) 397.29 556.83 P
-0.05 (glected in the past,) 428.48 556.83 P
0.95 (b) 108.33 544.83 P
0.95 (ut it is being increasingly addressed, in both the conte) 113.13 544.83 P
0.95 (xt of security and QoS. In this paper we) 336.56 544.83 P
1.87 (place a fe) 108.33 532.83 P
1.87 (w mobile objects systems in perspecti) 150.12 532.83 P
1.87 (v) 310.58 532.83 P
1.87 (e based upon ho) 315.43 532.83 P
1.87 (w the) 385.49 532.83 P
1.87 (y address security and) 409.15 532.83 P
1.95 (resource management. W) 108.33 520.83 P
1.95 (e start with the theoretical model of Actors that supports concurrent) 213.34 520.83 P
-0.09 (mobile objects in a programming en) 108.33 508.83 P
-0.09 (vironment. Then we describe task migration in Mach, a mobile) 252.21 508.83 P
-0.1 (object system supported at the operating system le) 108.33 496.83 P
-0.1 (v) 308.78 496.83 P
-0.1 (el. OMG MASIF standardizes a CORB) 313.63 496.83 P
-0.1 (A-based) 470.01 496.83 P
-0.17 (middle) 108.33 484.83 P
-0.17 (w) 135.86 484.83 P
-0.17 (are support for mobile objects. Mobile Objects and Agents \050MO) 142.98 484.83 P
-0.17 (A\051 system is a middle) 397.72 484.83 P
-0.17 (w) 484 484.83 P
-0.17 (are) 491.12 484.83 P
0.83 (le) 108.33 472.83 P
0.83 (v) 115.3 472.83 P
0.83 (el system based on Ja) 120.15 472.83 P
0.83 (v) 209.39 472.83 P
0.83 (a. Acti) 214.14 472.83 P
0.83 (v) 241.38 472.83 P
0.83 (e netw) 246.23 472.83 P
0.83 (orks project, Con) 273.34 472.83 P
0.83 (v) 343.77 472.83 P
0.83 (ersant, supports object mobility at the) 348.62 472.83 P
0.38 (communication protocol le) 108.33 460.83 P
0.38 (v) 216.6 460.83 P
0.38 (el. Finally) 221.46 460.83 P
0.38 (, we include a proposal for lar) 261.74 460.83 P
0.38 (ge scale agent ensembles. W) 383.5 460.83 P
0.38 (e) 498.89 460.83 P
1.25 (summarize these projects, comparing their security and resource management, and conclude by) 108.33 448.83 P
0.43 (deri) 108.33 436.83 P
0.43 (ving a fe) 123.63 436.83 P
0.43 (w general observ) 159.24 436.83 P
0.43 (ations on ho) 228.16 436.83 P
0.43 (w security and resource management ha) 277.67 436.83 P
0.43 (v) 439.86 436.83 P
0.43 (e been applied) 444.71 436.83 P
(and ho) 108.33 424.83 T
(w the) 135.02 424.83 T
(y might e) 156.81 424.83 T
(v) 194.34 424.83 T
(olv) 199.14 424.83 T
(e in the future.) 211.77 424.83 T
0 1 1 0 1 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "1" 1
%%Page: "2" 2
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
[ 0.5 0.5 0 0.5 0 0 0.5]
[ 0.5 0 0 0.5 0 0.5 0.5]
[ 0.5 0 0.5 0.5 0 0.5 0]
[ 0 0.5 0 0.5 0.5 0 0.5]
[ 0 0.5 0.5 0.5 0.5 0 0]
[ 0 0 0.5 0.5 0.5 0.5 0]
[ 0 0 0 0.5 0.5 0.5 0.5]
[ 0 0 0 0.25 0.75 0.75 0.75]
 15 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 11 Q
0 X
0 0 0 1 0 0 0 K
(2) 303.25 37.34 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2.43 (icies may be set for mobile objects and for the) 72 604.67 P
(mobile object systems.) 72 591.67 T
1.92 (Mobile object systems use communication trans-) 72 572.67 P
3.84 (port calls to transfer objects between systems.) 72 559.67 P
0.94 (Mutual authentication of mobile object systems is) 72 546.67 P
5.27 (typically required for these calls to succeed.) 72 533.67 P
4 (Mobile objects are authenticated based on the) 72 520.67 P
1.81 (authentication of the source object system \050or of) 72 507.67 P
2.29 (the creator of the object\051, information about the) 72 494.67 P
6.14 (object itself, and possibly information about) 72 481.67 P
(trusted authorities that can authenticate the object.) 72 468.67 T
0.17 (This paper is an o) 72 449.67 P
0.17 (v) 150.71 449.67 P
0.17 (ervie) 156.05 449.67 P
0.17 (w of the pre) 177.76 449.67 P
0.17 (v) 230.83 449.67 P
0.17 (alent research) 236.06 449.67 P
3.29 (topics of security and resource management of) 72 436.67 P
0.69 (object systems. W) 72 423.67 P
0.69 (e pro) 152.85 423.67 P
0.69 (vide some practical e) 175.67 423.67 P
0.69 (xperi-) 270.73 423.67 P
-0.17 (ence dra) 72 410.67 P
-0.17 (wn from six e) 108.62 410.67 P
-0.17 (xamples of mobile agent sys-) 168.74 410.67 P
7.03 (tems that we were in) 72 397.67 P
7.03 (v) 190.74 397.67 P
7.03 (olv) 196.02 397.67 P
7.03 (ed in specifying,) 209.91 397.67 P
0.9 (designing, and implementing. These systems ha) 72 384.67 P
0.9 (v) 286.78 384.67 P
0.9 (e) 292.12 384.67 P
0.97 (achie) 72 371.67 P
0.97 (v) 94.93 371.67 P
0.97 (ed v) 100.27 371.67 P
0.97 (arious stages of implementation, usage,) 119.6 371.67 P
3.16 (and technology transfer to other projects. The) 72 358.67 P
3.16 (y) 291.5 358.67 P
2.5 (of) 72 345.67 P
2.5 (fer an interesting mix of platforms and goals.) 80.89 345.67 P
2.94 (Figure 1 presents the systems described in this) 72 332.67 P
1.9 (paper in the chronological order of their appear-) 72 319.67 P
(ance.) 72 306.67 T
0.58 (The rest of the paper is or) 72 287.67 P
0.58 (g) 188.34 287.67 P
0.58 (anized in the follo) 193.78 287.67 P
0.58 (wing) 275 287.67 P
-0.09 (manner) 72 274.67 P
-0.09 (. The ne) 104.38 274.67 P
-0.09 (xt six sections describe six dif) 139.78 274.67 P
-0.09 (ferent) 271.35 274.67 P
0.82 (mobile objects systems paying particular attention) 72 261.67 P
1.1 (to the security and resource management support.) 72 248.67 P
2.11 (Section 2 describes the Actors model. Section 3) 72 235.67 P
0.55 (presents task migration on top of the Mach micro-) 72 222.67 P
2.94 (k) 72 209.67 P
2.94 (ernel. Section 5 describes Mobile Objects and) 77.39 209.67 P
-0.07 (Agents \050MO) 72 196.67 P
-0.07 (A\051 project. Section 4 analyzes MASIF) 126.84 196.67 P
-0.07 (,) 294.25 196.67 P
1.16 (an OMG standard for mobile agent systems. Sec-) 72 183.67 P
2.63 (tion 6 describes CONVERSANT) 72 170.67 P
2.63 (, an acti) 224.8 170.67 P
2.63 (v) 264.3 170.67 P
2.63 (e net-) 269.63 170.67 P
1.52 (w) 72 157.67 P
1.52 (orks project. Section 7 describes a proposal for) 79.83 157.67 P
0.98 (agent ensembles project. In Section 8 we summa-) 72 144.67 P
2.03 (rize the paper by making some general observ) 72 131.67 P
2.03 (a-) 288.45 131.67 P
4.77 (tions g) 72 118.67 P
4.77 (arnered from the dif) 106.36 118.67 P
4.77 (ferent systems we) 208.65 118.67 P
1.01 (described. Gi) 72 105.67 P
1.01 (v) 131.39 105.67 P
1.01 (en the surv) 136.73 105.67 P
1.01 (e) 186.85 105.67 P
1.01 (y type of the paper) 191.57 105.67 P
1.01 (, we) 277.66 105.67 P
0.94 (brie\337y mention related research in each of the six) 72 92.67 P
0.78 (sections that describe a type of mobile object sys-) 315 712.67 P
(tem.) 315 699.67 T
1 12 Q
(2.  Actors) 315 676 T
0 11 Q
-0.27 (Actors were initially de) 315 656.67 P
-0.27 (v) 417.48 656.67 P
-0.27 (eloped by Carl He) 422.82 656.67 P
-0.27 (witt [23]) 502.08 656.67 P
0.89 (for conceptual modeling of open systems, and the) 315 643.67 P
0.97 (idea w) 315 630.67 P
0.97 (as further re\336ned by Gul Agha [2] to serv) 344.87 630.67 P
0.97 (e) 535.12 630.67 P
0.43 (as a computational model for concurrent computa-) 315 617.67 P
(tion in distrib) 315 604.67 T
(uted systems.) 374.07 604.67 T
0.53 (Actors e) 315 585.67 P
0.53 (xtend the concept of objects to concurrent) 352.32 585.67 P
3.73 (computation. Speci\336cally) 315 572.67 P
3.73 (, objects encapsulate a) 430.45 572.67 P
1.7 (state and a set of procedures that manipulate the) 315 559.67 P
2.44 (state; actors e) 315 546.67 P
2.44 (xtend this by also encapsulating a) 379.6 546.67 P
2.16 (thread of control. Actors are mobile. Each actor) 315 533.67 P
2.32 (potentially e) 315 520.67 P
2.32 (x) 371.85 520.67 P
2.32 (ecutes in parallel with other actors) 377.18 520.67 P
2.95 (and may send messages to actors it kno) 315 507.67 P
2.95 (ws the) 508.63 507.67 P
0.38 (address of. Actor addresses may be communicated) 315 494.67 P
3.46 (in messages, allo) 315 481.67 P
3.46 (wing dynamic interconnection.) 396.51 481.67 P
2.52 (Finally) 315 468.67 P
2.52 (, ne) 345.46 468.67 P
2.52 (w actors may be created; such actors) 363.59 468.67 P
1.87 (ha) 315 455.67 P
1.87 (v) 325.16 455.67 P
1.87 (e their o) 330.5 455.67 P
1.87 (wn unique address. A more concrete) 370 455.67 P
-0.12 (w) 315 442.67 P
-0.12 (ay to think of actors is as an abstraction o) 322.83 442.67 P
-0.12 (v) 503.95 442.67 P
-0.12 (er con-) 509.28 442.67 P
-0.02 (current architectures. An actor runtime system pro-) 315 429.67 P
4.27 (vides the interf) 315 416.67 P
4.27 (ace to services such as global) 389.42 416.67 P
0.75 (addressing, memory management, f) 315 403.67 P
0.75 (air scheduling,) 474.48 403.67 P
4.78 (and communication. Actors are self-contained,) 315 390.67 P
0.97 (interacti) 315 377.67 P
0.97 (v) 350.77 377.67 P
0.97 (e, autonomous components of a comput-) 356.11 377.67 P
3.88 (ing system that communicate by asynchronous) 315 364.67 P
0.99 (message passing [2, 4]. This model abstracts o) 315 351.67 P
0.99 (v) 526.12 351.67 P
0.99 (er) 531.45 351.67 P
0.72 (issues of lo) 315 338.67 P
0.72 (w-le) 365.67 338.67 P
0.72 (v) 384.94 338.67 P
0.72 (el synchronization by encapsulat-) 390.28 338.67 P
0.8 (ing the state of an object and its e) 315 325.67 P
0.8 (x) 468.49 325.67 P
0.8 (ecution thread,) 473.83 325.67 P
0.33 (and limiting communication to asynchronous mes-) 315 312.67 P
(sage passing.) 315 299.67 T
-0.18 (The model has been used as a basis for a number of) 315 280.67 P
3.7 (programming languages and systems including:) 315 267.67 P
-0.07 (Acore for AI applications at MIT) 315 254.67 P
-0.07 (, Cantor for scien-) 460.17 254.67 P
1.19 (ti\336c computations at Caltech, Rosette for systems) 315 241.67 P
1.78 (architectures at MCC as a part of the InfoSleuth) 315 228.67 P
1.56 (project, ActT) 315 215.67 P
1.56 (alk for object-oriented programming) 374.33 215.67 P
0.68 (at Uni) 315 202.67 P
0.68 (v) 342.6 202.67 P
0.68 (ersit) 347.93 202.67 P
0.68 (\216) 366.88 202.67 P
0.68 ( de P) 371.76 202.67 P
0.68 (aris, Actra for multitasking/mul-) 394.96 202.67 P
4.62 (tiprocessing at Carleton Uni) 315 189.67 P
4.62 (v) 452.33 189.67 P
4.62 (ersity) 457.66 189.67 P
4.62 (, Act++ for) 481.39 189.67 P
0.56 (Real-time Systems at V) 315 176.67 P
0.56 (ir) 420.21 176.67 P
0.56 (ginia T) 426.73 176.67 P
0.56 (ech and A) 457.99 176.67 P
0.56 (\325UM for) 502.48 176.67 P
4.12 (lar) 315 163.67 P
4.12 (ge-scale softw) 326.41 163.67 P
4.12 (are de) 393.65 163.67 P
4.12 (v) 424.06 163.67 P
4.12 (elopment at ICO) 429.39 163.67 P
4.12 (T and) 510.52 163.67 P
(NEC \050T) 315 150.67 T
(ok) 349.25 150.67 T
(yo\051.) 360.09 150.67 T
1 F
(2.1  Resource Management) 315 129.67 T
0 F
1.68 (The Actor model is e) 315 110.67 P
1.68 (xtended to e) 414.43 110.67 P
1.68 (xplicitly model) 471.39 110.67 P
1.7 (the location of actors on particular) 315 97.67 P
2 F
1.7 (hosts) 479.16 97.67 P
0 F
1.7 ( and the) 501.78 97.67 P
2 F
2.73 (bounded computational r) 315 84.67 P
2.73 (esour) 431.27 84.67 P
2.73 (ces) 455.3 84.67 P
0 F
2.73 ( that the) 469.35 84.67 P
2.73 (y may) 510.08 84.67 P
72 612 295.34 720 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
121.64 662.37 124.62 662.37 121.64 651.99 118.67 662.37 4 Y
0.5 H
0 Z
0 X
0 0 0 1 0 0 0 K
N
121.64 662.37 124.62 662.37 121.64 651.99 118.67 662.37 4 Y
V
121.64 720 121.64 662.62 2 L
2 Z
N
0 9 Q
(1977-) 77.48 709.64 T
(1991-1993) 77.48 697.64 T
1 F
(Actors) 129.39 710.83 T
0 F
( \050Theory/programming en) 154.88 710.83 T
(vironment\051) 248 710.83 T
1 F
(Mach T) 129.39 698.83 T
(ask Migration) 158.81 698.83 T
0 F
( \050Operating System\051) 213.07 698.83 T
(1996-) 77.48 672.39 T
1 F
(MO) 129.39 673.58 T
(A) 144.53 673.58 T
0 F
( \050middle) 151.03 673.58 T
(w) 181.05 673.58 T
(are, Ja) 187.46 673.58 T
(v) 210.27 673.58 T
(a\051) 214.54 673.58 T
(1996-1998) 77.23 684.89 T
(1996-) 77.48 661.64 T
(1998) 77.48 649.64 T
1 F
(MASIF) 129.14 686.08 T
0 F
( \050middle) 158.14 686.08 T
(w) 188.16 686.08 T
(are, CORB) 194.57 686.08 T
(A\051) 234.25 686.08 T
1 F
(CONVERSANT) 129.39 662.83 T
0 F
( \050Acti) 192.39 662.83 T
(v) 212.91 662.83 T
(e Netw) 217.28 662.83 T
(orks\051) 242.93 662.83 T
1 F
(Agent Ensembles) 129.39 650.83 T
0 F
( \050Scalable Middle) 195.64 650.83 T
(w) 259.41 650.83 T
(are\051) 265.82 650.83 T
1 10 Q
(Figure 1 Mobile Object Systems described) 94.37 632.67 T
0 1 1 0 1 0 0 K
0 0 0 1 0 0 0 K
0 0 612 792 C
0 1 1 0 1 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "2" 2
%%Page: "3" 3
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
[ 0.5 0.5 0 0.5 0 0 0.5]
[ 0.5 0 0 0.5 0 0.5 0.5]
[ 0.5 0 0.5 0.5 0 0.5 0]
[ 0 0.5 0 0.5 0.5 0 0.5]
[ 0 0.5 0.5 0.5 0.5 0 0]
[ 0 0 0.5 0.5 0.5 0.5 0]
[ 0 0 0 0.5 0.5 0.5 0.5]
[ 0 0 0 0.25 0.75 0.75 0.75]
 15 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 11 Q
0 X
0 0 0 1 0 0 0 K
(3) 303.25 37.34 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.01 (use. Hosts are actors that manage ph) 72 712.67 P
-0.01 (ysical and log-) 232.26 712.67 P
1.51 (ical resources of a node and of) 72 699.67 P
1.51 (fer them to actors) 215.18 699.67 P
(interested in paying for them.) 72 686.67 T
2.98 (The notion of computational resources must be) 72 667.67 P
1.16 (broad enough to include all entities in the system) 72 654.67 P
0.29 (whose use by one actor can af) 72 641.67 P
0.29 (fect the performance) 205.41 641.67 P
0.97 (of the rest of the system. These may include both) 72 628.67 P
0.74 (ph) 72 615.67 P
0.74 (ysical resources \050e.g., processors, memory) 82.94 615.67 P
0.74 (, etc.\051) 271.52 615.67 P
0.33 (and logical resources \050e.g., threads\051. The analog of) 72 602.67 P
1.29 (renting seems to apply more accurately here than) 72 589.67 P
(that of purchasing.) 72 576.67 T
1.37 (In addition to the resources consumed while pro-) 72 557.67 P
1.81 (gressing to) 72 544.67 P
1.81 (w) 121.51 544.67 P
1.81 (ards accomplishing their goals, indi-) 129.34 544.67 P
0.52 (vidual actors may be w) 72 531.67 P
0.52 (aiting for information from) 175.99 531.67 P
0.24 (other actors, or for reasons of coordination, requir-) 72 518.67 P
-0.29 (ing accounting of memory usage. At the same time,) 72 505.67 P
1.03 (an actor should not ha) 72 492.67 P
1.03 (v) 173.05 492.67 P
1.03 (e to pay if the idle w) 178.38 492.67 P
1.03 (ait is) 274.88 492.67 P
2.46 (increased by the host\325) 72 479.67 P
2.46 (s o) 175.01 479.67 P
2.46 (wn scheduling choices.) 189.73 479.67 P
-0.09 (This mak) 72 466.67 P
-0.09 (es it important to represent resources both) 113.04 466.67 P
0.53 (in terms of indi) 72 453.67 P
0.53 (vidual actors as well as in terms of) 140.84 453.67 P
(the lar) 72 440.67 T
(ger application the) 99.6 440.67 T
(y belong to.) 181.31 440.67 T
-0.18 (Usage of netw) 72 421.67 P
-0.18 (ork bandwidth must be modeled sep-) 135.06 421.67 P
0.12 (arately because its cost goes be) 72 408.67 P
0.12 (yond that of service) 209.58 408.67 P
3.45 (pro) 72 395.67 P
3.45 (vided by an indi) 86.5 395.67 P
3.45 (vidual host. Ev) 167.77 395.67 P
3.45 (ery netw) 240.82 395.67 P
3.45 (ork) 282.34 395.67 P
-0.21 (communication results in a cost incurred by the ini-) 72 382.67 P
1.79 (tiator) 72 369.67 P
1.79 (, depending on the size of the message and) 94.78 369.67 P
(some abstraction of the route to be tak) 72 356.67 T
(en.) 240.22 356.67 T
0.73 (An economic model can pro) 72 337.67 P
0.73 (vide a basis on which) 199.38 337.67 P
3.68 (nodes may allo) 72 324.67 P
3.68 (w actors to use their resources) 145.7 324.67 P
2.14 (according to pre-ne) 72 311.67 P
2.14 (gotiated contracts, while pro-) 161.65 311.67 P
1.95 (tecting ag) 72 298.67 P
1.95 (ainst resource consumpti) 116.97 298.67 P
1.95 (v) 229.96 298.67 P
1.95 (e beha) 235.29 298.67 P
1.95 (vior of) 265.42 298.67 P
1.54 (actors in a multi-agent system [3]. T) 72 285.67 P
1.54 (o implement) 240.15 285.67 P
0.15 (such a model, we use the notion of a uni) 72 272.67 P
0.15 (v) 250.29 272.67 P
0.15 (ersal cur-) 255.62 272.67 P
0.17 (renc) 72 259.67 P
0.17 (y) 90.77 259.67 P
0.17 (. Speci\336cally) 95.55 259.67 P
0.17 (, resource allocation is measured) 152.45 259.67 P
0.5 (in a common currenc) 72 246.67 P
0.5 (y called) 166.5 246.67 P
3 8.8 Q
0.56 (GCU) 204.77 246.67 P
0 11 Q
0.5 ( \050for) 224.32 246.67 P
2 F
0.5 (global cur-) 247.31 246.67 P
1.95 (r) 72 233.67 P
1.95 (ency unit) 75.87 233.67 P
0 F
1.95 (\051. Ev) 117.84 233.67 P
1.95 (ery computational acti) 141 233.67 P
1.95 (vity is allo-) 242.99 233.67 P
1.09 (cated) 72 220.67 P
3 8.8 Q
1.21 (GCU) 99.05 220.67 P
0 11 Q
1.09 (\325) 118.6 220.67 P
1.09 (s which can be used in completing the) 121.66 220.67 P
0.11 (task. Each actor is allotted some subsistence) 72 207.67 P
3 8.8 Q
0.12 (GCU) 270.11 207.67 P
0 11 Q
0.11 (\325) 289.66 207.67 P
0.11 (s) 292.72 207.67 P
1.51 (at the time of its creation by its creator) 72 194.67 P
1.51 (. Because) 253.34 194.67 P
0.1 (acti) 72 181.67 P
0.1 (vity in message-based systems is triggered by a) 87.61 181.67 P
0.67 (message send,) 72 168.67 P
3 8.8 Q
0.74 (GCU) 139.01 168.67 P
0 11 Q
0.67 (\325) 158.57 168.67 P
0.67 (s must also be allocated at the) 161.63 168.67 P
1.6 (message send time. The) 72 155.67 P
3 8.8 Q
1.77 (GCU) 186.22 155.67 P
0 11 Q
1.6 (\325) 205.78 155.67 P
1.6 (s so transferred are) 208.84 155.67 P
2.31 (deducted from the account of the creator or the) 72 142.67 P
(sender) 72 129.67 T
(, respecti) 100.27 129.67 T
(v) 139.71 129.67 T
(ely) 145.04 129.67 T
(.) 157.77 129.67 T
-0.06 (An actor interested in migrating to a particular host) 72 110.67 P
-0.14 (must ne) 72 97.67 P
-0.14 (gotiate a contract with the host ahead of the) 106.23 97.67 P
0.41 (actual migration. Independent of the actual ne) 72 84.67 P
0.41 (goti-) 276.22 84.67 P
-0.19 (ation protocol, the purpose is to agree on a function) 315 712.67 P
-0.2 (that w) 315 699.67 P
-0.2 (ould determine costs of resources that will be) 341.89 699.67 P
2.32 (made a) 315 686.67 P
2.32 (v) 348.56 686.67 P
2.32 (ailable, the rates of such a) 353.78 686.67 P
2.32 (v) 479.39 686.67 P
2.32 (ailability) 484.62 686.67 P
2.32 (, as) 523.02 686.67 P
-0.02 (well as the granularity at which usage will be mon-) 315 673.67 P
1.97 (itored. The ne) 315 660.67 P
1.97 (gotiated function may also in) 380.18 660.67 P
1.97 (v) 515.94 660.67 P
1.97 (olv) 521.22 660.67 P
1.97 (e) 535.12 660.67 P
1.72 (the state of the host. Once the contract has been) 315 647.67 P
-0.03 (agreed upon, an actor may arri) 315 634.67 P
-0.03 (v) 448.97 634.67 P
-0.03 (e at the node with a) 454.31 634.67 P
1.43 (certain number of) 315 621.67 P
3 8.8 Q
1.59 (GCU) 400.24 621.67 P
0 11 Q
1.43 (\325) 419.8 621.67 P
1.43 (s.) 422.86 621.67 P
3 8.8 Q
1.59 (GCU) 434.07 621.67 P
0 11 Q
1.43 (\325) 453.62 621.67 P
1.43 (s held by an actor) 456.68 621.67 P
6.93 (may be spent for purchasing computational) 315 608.67 P
0.59 (resources from a host as it computes, according to) 315 595.67 P
0.51 (the ne) 315 582.67 P
0.51 (gotiated contract, or the) 341.92 582.67 P
0.51 (y may be transferred) 447.76 582.67 P
(to other actors.) 315 569.67 T
4.41 (Requirements of an actor that may determine) 315 550.67 P
-0.28 (desired characteristics of the hosting computational) 315 537.67 P
-0.04 (en) 315 524.67 P
-0.04 (vironment may be abstracted out in the form of a) 324.94 524.67 P
2 F
0.24 (dynamic speci\336cation) 315 511.67 P
0 F
0.24 ( which may be used to estab-) 410.86 511.67 P
3.13 (lish the actor\325) 315 498.67 P
3.13 (s need to migrate. Computational) 381.14 498.67 P
1.91 (re\337ection [30] may be emplo) 315 485.67 P
1.91 (yed by using meta-) 450.24 485.67 P
2.98 (actors that monitor changes in speci\336cations of) 315 472.67 P
3.39 (actors\325 computational needs to determine when) 315 459.67 P
1.47 (migrating to a dif) 315 446.67 P
1.47 (ferent node w) 395.84 446.67 P
1.47 (ould be desirable.) 459.15 446.67 P
-0.18 (These meta-actors can acti) 315 433.67 P
-0.18 (v) 431.18 433.67 P
-0.18 (ely ne) 436.51 433.67 P
-0.18 (gotiate with man-) 462.75 433.67 P
0.37 (agers of remote nodes, searching for more suitable) 315 420.67 P
(and af) 315 407.67 T
(fordable computational en) 341.91 407.67 T
(vironments.) 456.94 407.67 T
1 F
(2.2  Security) 315 386.67 T
0 F
0.39 (The security a) 315 367.67 P
0.39 (v) 377.87 367.67 P
0.39 (ailable in the basic Actors model is) 383.09 367.67 P
1.09 (pro) 315 354.67 P
1.09 (vided by ha) 329.5 354.67 P
1.09 (ving unfor) 382.79 354.67 P
1.09 (geable names for actors,) 429.82 354.67 P
2.82 (and by a guaranteed message deli) 315 341.67 P
2.82 (v) 476.35 341.67 P
2.82 (ery) 481.69 341.67 P
2.82 (. Security) 495.02 341.67 P
0.2 (features can be added using high-le) 315 328.67 P
0.2 (v) 471.22 328.67 P
0.2 (el abstractions) 476.56 328.67 P
4.19 (suitable for enforcing interaction policies. The) 315 315.67 P
1.69 (resource management model serv) 315 302.67 P
1.69 (es to secure the) 467.43 302.67 P
0.96 (system from chaotic resource consumpti) 315 289.67 P
0.96 (v) 496.36 289.67 P
0.96 (e beha) 501.7 289.67 P
0.96 (v-) 530.84 289.67 P
0.57 (ior which may otherwise be e) 315 276.67 P
0.57 (xhibited by actors or) 447.54 276.67 P
(ensembles of actors.) 315 263.67 T
1 F
(2.3  Related Work) 315 242.67 T
0 F
0.13 (Actors is one of the earliest mobile object systems,) 315 223.67 P
0.19 (ho) 315 210.67 P
0.19 (we) 325.73 210.67 P
0.19 (v) 338.28 210.67 P
0.19 (er there were a fe) 343.61 210.67 P
0.19 (w others, such as) 420.42 210.67 P
1 F
0.19 (Emerald) 499.06 210.67 P
0 F
0.4 ([27],) 315 197.67 P
1 F
0.4 (COOL) 339.22 197.67 P
0 F
0.4 ( [5], and) 371.62 197.67 P
1 F
0.4 (SOS) 412.52 197.67 P
0 F
0.4 ( [44]. Similar to Actors,) 433.31 197.67 P
0.74 (these systems rely on programming language sup-) 315 184.67 P
2.07 (port for mobility) 315 171.67 P
2.07 (. No speci\336c security w) 391.77 171.67 P
2.07 (ork w) 503.52 171.67 P
2.07 (as) 530.84 171.67 P
1.62 (done, though some resource management aspects) 315 158.67 P
(were addressed.) 315 145.67 T
1 12 Q
(3.  Task Migration on top of Mach) 315 122 T
0 11 Q
1.91 (The task migration project w) 315 102.67 P
1.91 (as conducted in the) 449.64 102.67 P
0.5 (period 1991-1993 at the Uni) 315 89.67 P
0.5 (v) 441.4 89.67 P
0.5 (ersity of Kaiserslaut-) 446.73 89.67 P
0 1 1 0 1 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "3" 3
%%Page: "4" 4
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
[ 0.5 0.5 0 0.5 0 0 0.5]
[ 0.5 0 0 0.5 0 0.5 0.5]
[ 0.5 0 0.5 0.5 0 0.5 0]
[ 0 0.5 0 0.5 0.5 0 0.5]
[ 0 0.5 0.5 0.5 0.5 0 0]
[ 0 0 0.5 0.5 0.5 0.5 0]
[ 0 0 0 0.5 0.5 0.5 0.5]
[ 0 0 0 0.25 0.75 0.75 0.75]
 15 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 11 Q
0 X
0 0 0 1 0 0 0 K
(4) 303.25 37.34 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1.37 (ern. The team consisted of a Ph.D. student and a) 72 541.67 P
-0.24 (fe) 72 528.67 P
-0.24 (w M.Sc. students who designed and implemented) 80.27 528.67 P
0.48 (a fe) 72 515.67 P
0.48 (w v) 88.39 515.67 P
0.48 (ersions of task migration and load distrib) 104.9 515.67 P
0.48 (u-) 287.84 515.67 P
0.85 (tion on top of the Mach microk) 72 502.67 P
0.85 (ernel. All v) 214.5 502.67 P
0.85 (ersions) 265.84 502.67 P
0.91 (relied on distrib) 72 489.67 P
0.91 (uted IPC and on distrib) 143.26 489.67 P
0.91 (uted mem-) 248.74 489.67 P
0.12 (ory management support. An in-k) 72 476.67 P
0.12 (ernel v) 221.16 476.67 P
0.12 (ersion and) 251.36 476.67 P
1.84 (a user le) 72 463.67 P
1.84 (v) 112.06 463.67 P
1.84 (el v) 117.39 463.67 P
1.84 (ersion relied entirely on distrib) 135.26 463.67 P
1.84 (uted) 278.06 463.67 P
3.79 (memory management, while another user le) 72 450.67 P
3.79 (v) 283.72 450.67 P
3.79 (el) 289.06 450.67 P
0.18 (v) 72 437.67 P
0.18 (ersion relied on a migration pager) 77.33 437.67 P
0.18 (. This w) 226.41 437.67 P
0.18 (ork w) 262.41 437.67 P
0.18 (as) 287.84 437.67 P
1.02 (used as the basis for tw) 72 424.67 P
1.02 (o implementations of pro-) 179.35 424.67 P
(cess migration for the OSF/1 AD serv) 72 411.67 T
(er [38, 46].) 238.65 411.67 T
1 F
(3.1  Security) 72 390.67 T
0 F
1.08 (In the task migration project, security w) 72 371.67 P
1.08 (as mostly) 254.05 371.67 P
1.07 (addressed by e) 72 358.67 P
1.07 (xporting the task and k) 138.73 358.67 P
1.07 (ernel thread) 243.71 358.67 P
4.41 (ports representing the task and the associated) 72 345.67 P
0.76 (threads. These ports are part of the k) 72 332.67 P
0.76 (ernel internal) 237.9 332.67 P
1.43 (state that has to be e) 72 319.67 P
1.43 (xtracted and transferred to a) 167.88 319.67 P
2.33 (destination node \050see Figure) 72 306.67 P
2.33 (2\051. A holder of the) 206.1 306.67 P
-0.22 (task port is capable of controlling the task \050e.g. sus-) 72 293.67 P
1.16 (pend, resume, r/w address space, and control IPC) 72 280.67 P
0.1 (space and threads\051 by sending messages to the task) 72 267.67 P
(k) 72 254.67 T
(ernel port.) 77.39 254.67 T
1.92 (In all v) 72 235.67 P
1.92 (ersions of task migration, the task k) 106.84 235.67 P
1.92 (ernel) 275.01 235.67 P
-0.25 (port needed to be temporarily suspended, so that all) 72 222.67 P
2.77 (messages sent to it are not interpreted as com-) 72 209.67 P
2.76 (mands, b) 72 196.67 P
2.76 (ut rather as true messages that can be) 114.26 196.67 P
1.16 (queued and then restarted after migration. In nor-) 72 183.67 P
2.62 (mal operation, such messages are guaranteed to) 72 170.67 P
0.4 (e) 72 157.67 P
0.4 (x) 76.72 157.67 P
0.4 (ecute in \336nite time. It is possible to compromise) 82.05 157.67 P
-0.22 (security when migrating the task k) 72 144.67 P
-0.22 (ernel port. While) 222.61 144.67 P
-0.06 (the port is in transfer) 72 131.67 P
-0.06 (, all messages sent to it are not) 162.98 131.67 P
0.56 (interpreted as control messages that in) 72 118.67 P
0.56 (v) 242.7 118.67 P
0.56 (ok) 247.98 118.67 P
0.56 (e certain) 258.87 118.67 P
0.97 (k) 72 105.67 P
0.97 (ernel procedures, b) 77.39 105.67 P
0.97 (ut are queued as re) 163.11 105.67 P
0.97 (gular mes-) 249.29 105.67 P
1.3 (sages. This changes the e) 72 92.67 P
1.3 (xpected beha) 187.93 92.67 P
1.3 (vior and in) 246.74 92.67 P
1.21 (the case of problems with the transfer of the task) 72 79.67 P
2.99 (k) 315 417.16 P
2.99 (ernel port, could inde\336nitely delay the sender) 320.39 417.16 P
2.99 (.) 537.25 417.16 P
2.18 (The only possible w) 315 404.16 P
2.18 (ay to protect arbitrary users) 410.33 404.16 P
1.94 (from w) 315 391.16 P
1.94 (aiting on their task control message is to) 348.9 391.16 P
0.16 (associate a timer with their request. T) 315 378.16 P
0.16 (imeouts were) 480.88 378.16 P
0.36 (not part of the task control interf) 315 365.16 P
0.36 (aces, so the) 460.04 365.16 P
0.36 (y ha) 511 365.16 P
0.36 (v) 529.78 365.16 P
0.36 (e) 535.12 365.16 P
(to be a con\336gurable constant per k) 315 352.16 T
(ernel.) 466.42 352.16 T
0.66 (The other problem is that in the user space migra-) 315 333.16 P
5.28 (tion implementations, the task k) 315 320.16 P
5.28 (ernel port is) 476.89 320.16 P
1.05 (e) 315 307.16 P
1.05 (xtracted from the user space \050see Figure) 319.72 307.16 P
1.05 (3\051. This) 504.73 307.16 P
-0.19 (is particularly dangerous since an arbitrary task can) 315 294.16 P
-0.02 (ha) 315 281.16 P
-0.02 (v) 325.16 281.16 P
-0.02 (e its k) 330.5 281.16 P
-0.02 (ernel port sw) 356.63 281.16 P
-0.02 (apped. There is no particular) 413.92 281.16 P
2.28 (solution to this problem. Whoe) 315 268.16 P
2.28 (v) 460.45 268.16 P
2.28 (er possesses the) 465.78 268.16 P
0.06 (task k) 315 255.16 P
0.06 (ernel port can harm the migrated task with or) 340.92 255.16 P
4.63 (without interposition. From the perspecti) 315 242.16 P
4.63 (v) 513.23 242.16 P
4.63 (e of) 518.57 242.16 P
0.01 (security) 315 229.16 P
0.01 (, interposing on a task k) 349.11 229.16 P
0.01 (ernel port can com-) 454.14 229.16 P
1.52 (promise its pri) 315 216.16 P
1.52 (v) 381.31 216.16 P
1.52 (ac) 386.54 216.16 P
1.52 (y and allo) 396.14 216.16 P
1.52 (w for arbitrary moni-) 442.28 216.16 P
-0.12 (toring of all tasks acti) 315 203.16 P
-0.12 (vities. This also compromises) 409.58 203.16 P
0.39 (the inte) 315 190.16 P
0.39 (gration of the k) 347.91 190.16 P
0.39 (ernel, since part of its inter-) 416.48 190.16 P
0.4 (nal state is e) 315 177.16 P
0.4 (xported, and the k) 370.1 177.16 P
0.4 (ernel port semantics) 450.61 177.16 P
(are changed.) 315 164.16 T
1.51 (T) 315 145.16 P
1.51 (ask k) 320.84 145.16 P
1.51 (ernel port interposition is related to subse-) 345.16 145.16 P
0.8 (quent w) 315 132.16 P
0.8 (ork in the mobile agents area where agent) 350.82 132.16 P
0.35 (credentials are e) 315 119.16 P
0.35 (xtracted prior to migration and the) 387.01 119.16 P
2.23 (dele) 315 106.16 P
2.23 (g) 333.16 106.16 P
2.23 (ated to the remote instance. This is further) 338.61 106.16 P
(discussed in Section 4.) 315 93.16 T
72 76 297 720 C
74.32 549 294.68 720 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 10 Q
0 X
0 0 0 1 0 0 0 K
-0.37 (Figure 2 Interposing Task Kernel Port.) 72.81 620.35 P
2 F
-0.37 (The task ker-) 240.33 620.35 P
-0.02 (nel port is extracted \050interposed\051 on the source and in-) 72.81 610.35 P
0.19 (serted on the destination. Messages sent to control the) 72.81 600.35 P
-0.51 (task are queued, and reactivated as a part of the second) 72.81 590.35 P
1.05 (interposition on the destination node. Tasks that sent) 72.81 580.35 P
(messages are blocked until migration finishes.) 72.81 570.35 T
0 1 1 0 1 0 0 K
0 0 0 1 0 0 0 K
72.64 632 167.31 668 R
0.5 H
0 Z
N
176.31 632 291.98 668 R
N
0 0 0 1 0 0 0 K
98.84 635.44 106.18 644.44 R
1 H
N
0 0 0 1 0 0 0 K
0.5 H
90 450 18.33 17.92 99.48 701.06 A
1 H
2 Z
3 X
90 180 48.82 18.42 155 650 A
196.87 658.95 199.02 660.5 202.25 651.47 194.73 657.41 4 Y
0 Z
N
196.87 658.95 199.02 660.5 202.25 651.47 194.73 657.41 4 Y
V
154.74 668.42 M
 172.55 668.42 190.72 667.51 196.58 659.36 D
2 Z
N
0 0 0 1 0 0 0 K
204.01 635.61 211.34 644.61 R
0 Z
0 X
N
0 0 0 1 0 0 0 K
1 7 Q
(task kernel port) 214.34 636.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
140.58 650.89 147.91 659.89 R
0.5 H
N
143.43 647.39 150.76 656.39 R
N
147.1 642.89 154.43 651.89 R
N
246.82 651.7 254.16 660.7 R
N
249.68 648.2 257.01 657.2 R
N
253.34 643.7 260.67 652.7 R
N
2 Z
3 X
90 180 49.02 19.19 199.29 659 A
241.96 668.35 244.42 670.02 247.8 659.75 239.49 666.67 4 Y
0 Z
N
241.96 668.35 244.42 670.02 247.8 659.75 239.49 666.67 4 Y
V
199.29 678.2 M
 217.48 678.2 236.06 677.02 241.82 668.55 D
2 Z
N
0 F
0 X
( user) 257.31 662.22 T
(capabilities) 255.81 657.72 T
74.36 661.44 85.67 642.55 94.72 661.44 3 Y
0 Z
N
180.07 659.55 191.39 640.66 200.44 659.55 3 Y
N
2 Z
3 X
90 180 48.78 27.04 136.52 659 A
181.36 669.56 184.14 670.6 184.99 659.85 178.57 668.52 4 Y
0 Z
N
181.36 669.56 184.14 670.6 184.99 659.85 178.57 668.52 4 Y
V
136.53 686.04 M
 156.55 686.04 177.01 681.18 181.27 669.79 D
2 Z
N
0 X
(other) 203.61 658.86 T
(state) 219.74 658.86 T
(\050VM, threads\051) 203.61 651.86 T
213.61 699.71 213.61 702.35 222.83 699.71 213.61 697.06 4 Y
1 H
0 Z
3 X
N
213.61 699.71 213.61 702.35 222.83 699.71 213.61 697.06 4 Y
V
123.89 699.71 213.11 699.71 2 L
2 Z
N
0 10 Q
0 X
(Mach) 88.25 704.33 T
(task) 91.31 691.08 T
(Mach) 237.42 701.71 T
(task) 240.47 688.46 T
(migration) 162.01 687.17 T
0.5 H
0 Z
90 450 18.33 17.92 248.98 700.56 A
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
72 76 297 720 C
0 0 612 792 C
315 76 540 720 C
315 424.49 540 720 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 10 Q
0 X
0 0 0 1 0 0 0 K
1.17 (Figure 3) 312.58 474.63 P
1.17 (Task State Transfer for Various Task Mi-) 353.25 474.63 P
0.75 (gration Versions:) 312.58 464.63 P
2 F
0.75 ( in all versions shared pages are mi-) 387.5 464.63 P
1.14 (grated by the kernel, SMS and OMS introduce various) 312.58 454.63 P
(levels of user space migration.) 312.58 444.63 T
0 1 1 0 1 0 0 K
0 0 0 1 0 0 0 K
0 1 0 0 1 0 1 K
7 X
0 1 0 0 1 0 1 K
90 450 11.22 8.1 333.84 538.37 G
0.5 H
0 Z
4 X
90 450 11.22 8.1 333.84 538.37 A
1 7 Q
0 X
(Mach) 326.71 538.71 T
(task) 328.19 531.51 T
0 0 0 1 0 0 0 K
356.93 536.27 389.33 551.87 R
0 0 0 1 0 0 0 K
N
(migration) 358.68 545.86 T
(module) 362.18 539.26 T
477.71 642.65 368.23 642.65 2 L
V
0.45 H
N
1 9 Q
(Optimized Migration Server) 368.23 643.55 T
1 7 Q
(Migration) 505.52 702.42 T
(Server) 511.42 695.52 T
468.42 561.01 372.93 561.01 2 L
V
N
1 9 Q
(Simple Migration Server) 372.93 561.91 T
1 7 Q
(Migration) 498.9 625.18 T
(Server) 505.9 618.58 T
459.75 487.8 382.5 487.8 2 L
V
N
1 9 Q
(In-kernel Migration) 382.5 488.7 T
0 1 0 0 1 0 1 K
7 X
0 1 0 0 1 0 1 K
90 450 11.22 8.1 333.36 614.04 G
0.5 H
4 X
90 450 11.22 8.1 333.36 614.04 A
1 7 Q
0 X
(Mach) 326.24 614.38 T
(task) 327.71 607.18 T
0 0 0 1 0 0 0 K
359.46 621.12 391.86 636.72 R
0 0 0 1 0 0 0 K
N
(migration) 360.96 630.96 T
(module) 364.46 624.36 T
326.5 656.98 403.3 675 R
N
(Mach) 357.4 658.64 T
4 F
(m) 376.26 658.64 T
1 F
(kernel) 380.29 658.64 T
359.8 700.48 392.2 716.08 R
N
(migration) 360.8 709.82 T
(module) 364.3 703.22 T
445.6 657.28 522.39 675 R
N
(Mach) 476.5 658.34 T
4 F
(m) 495.35 658.34 T
1 F
(kernel) 499.39 658.34 T
446.2 700.18 478.6 715.78 R
N
(migration) 447.45 709.52 T
(module) 450.95 702.92 T
376.08 691 373.19 691 376.08 701.09 378.98 691 4 Y
N
376.08 691 373.19 691 376.08 701.09 378.98 691 4 Y
V
376.08 686 378.98 686 376.08 675.91 373.19 686 4 Y
N
376.08 686 378.98 686 376.08 675.91 373.19 686 4 Y
V
376.08 690.75 376.08 686.25 2 L
N
403.48 708.28 403.48 705.3 393.11 708.28 403.48 711.26 4 Y
N
403.48 708.28 403.48 705.3 393.11 708.28 403.48 711.26 4 Y
V
434.91 708.28 434.91 711.26 445.29 708.28 434.91 705.3 4 Y
N
434.91 708.28 434.91 711.26 445.29 708.28 434.91 705.3 4 Y
V
403.73 708.28 434.66 708.28 2 L
N
402.05 618.2 400.78 615.52 392.68 622.65 403.33 620.89 4 Y
N
402.05 618.2 400.78 615.52 392.68 622.65 403.33 620.89 4 Y
V
444.55 598.05 445.83 600.74 453.93 593.6 443.28 595.36 4 Y
N
444.55 598.05 445.83 600.74 453.93 593.6 443.28 595.36 4 Y
V
402.28 618.1 444.33 598.16 2 L
N
0 1 0 0 1 0 1 K
7 X
0 1 0 0 1 0 1 K
90 450 11.22 8.1 334.9 695.38 G
4 X
90 450 11.22 8.1 334.9 695.38 A
0 X
(Mach) 327.78 695.72 T
(task) 329.25 688.52 T
0 0 0 1 0 0 0 K
7 X
0 0 0 1 0 0 0 K
90 450 11.22 8.1 493.9 691.18 G
0 X
90 450 11.22 8.1 493.9 691.18 A
(Mach) 486.77 691.52 T
(task) 487.75 685.57 T
(\050OMS\051) 511.42 688.47 T
7 X
90 450 11.22 8.1 474.05 616.44 G
0 X
90 450 11.22 8.1 474.05 616.44 A
(Mach) 466.93 616.78 T
(task) 468.41 611.08 T
7 X
90 450 11.22 8.1 479.63 541.37 G
0 X
90 450 11.22 8.1 479.63 541.37 A
(Mach) 472.51 541.71 T
(task) 473.73 535.76 T
325.26 575.04 402.06 594 R
N
(Mach) 356.16 576.7 T
4 F
(m) 375.02 576.7 T
1 F
(kernel) 379.05 576.7 T
444.36 575.34 521.15 594 R
N
(Mach) 475.25 576.4 T
4 F
(m) 494.11 576.4 T
1 F
(kernel) 498.14 576.4 T
325.73 501.47 402.53 518.26 R
N
(Mach) 356.63 503.13 T
4 F
(m) 375.49 503.13 T
1 F
(kernel) 379.52 503.13 T
444.83 501.77 521.63 518.79 R
N
(Mach) 475.73 502.83 T
4 F
(m) 494.59 502.83 T
1 F
(kernel) 498.62 502.83 T
5 F
(source node) 325.43 495.41 T
(destination node) 482.18 495.11 T
(source node) 325.56 568.98 T
(destination node) 481.1 568.68 T
(source node) 326.5 650.92 T
(destination node) 483.25 650.62 T
414.58 667.18 414.58 664.21 404.21 667.18 414.58 670.16 4 Y
N
414.58 667.18 414.58 664.21 404.21 667.18 414.58 670.16 4 Y
V
434.31 667.18 434.31 670.16 444.69 667.18 434.31 664.21 4 Y
N
434.31 667.18 434.31 670.16 444.69 667.18 434.31 664.21 4 Y
V
414.83 667.18 434.06 667.18 2 L
N
413.16 584.04 413.16 581.07 402.78 584.04 413.16 587.02 4 Y
N
413.16 584.04 413.16 581.07 402.78 584.04 413.16 587.02 4 Y
V
433.07 584.04 433.07 587.02 443.45 584.04 433.07 581.07 4 Y
N
433.07 584.04 433.07 587.02 443.45 584.04 433.07 581.07 4 Y
V
413.41 584.04 432.82 584.04 2 L
N
413.82 511.07 413.82 508.09 403.44 511.07 413.82 514.05 4 Y
N
413.82 511.07 413.82 508.09 403.44 511.07 413.82 514.05 4 Y
V
433.55 511.07 433.55 514.05 443.92 511.07 433.55 508.09 4 Y
N
433.55 511.07 433.55 514.05 443.92 511.07 433.55 508.09 4 Y
V
414.07 511.07 433.3 511.07 2 L
N
349.35 703.85 350.11 702.11 343.28 701.19 348.58 705.59 4 Y
N
349.35 703.85 350.11 702.11 343.28 701.19 348.58 705.59 4 Y
V
352.65 705.3 351.89 707.04 358.72 707.96 353.42 703.57 4 Y
N
352.65 705.3 351.89 707.04 358.72 707.96 353.42 703.57 4 Y
V
349.58 703.95 352.43 705.21 2 L
N
484.56 704.66 483.66 703.26 479.66 707.79 485.46 706.07 4 Y
N
484.56 704.66 483.66 703.26 479.66 707.79 485.46 706.07 4 Y
V
487.33 702.9 488.23 704.3 492.23 699.77 486.43 701.49 4 Y
N
487.33 702.9 488.23 704.3 492.23 699.77 486.43 701.49 4 Y
V
484.77 704.53 487.12 703.03 2 L
N
0 F
(read) 337.78 710.2 T
( shared) 412.97 678.8 T
(pages) 414.97 672.9 T
( whole) 413.68 599.04 T
(address space) 404.68 592.14 T
(whole) 412.88 525.64 T
(task state) 409.38 518.24 T
(write) 484.6 710.15 T
463.03 686.25 466.01 686.33 463.28 675.88 460.06 686.18 4 Y
N
463.03 686.25 466.01 686.33 463.28 675.88 460.06 686.18 4 Y
V
462.7 700.18 463.02 686.5 2 L
2 Z
N
372.23 529.69 375.21 529.69 372.23 519.31 369.26 529.69 4 Y
0 Z
N
372.23 529.69 375.21 529.69 372.23 519.31 369.26 529.69 4 Y
V
372.23 536.27 372.23 529.94 2 L
2 Z
N
461.99 599.92 459.54 601.59 467.84 608.49 464.45 598.24 4 Y
0 Z
N
461.99 599.92 459.54 601.59 467.84 608.49 464.45 598.24 4 Y
V
457.42 593.21 461.86 599.71 2 L
2 Z
N
476.13 681.1 473.79 682.94 482.54 689.27 478.47 679.27 4 Y
0 Z
N
476.13 681.1 473.79 682.94 482.54 689.27 478.47 679.27 4 Y
V
471.32 674.97 475.97 680.91 2 L
2 Z
N
465.85 526.2 463.43 527.94 471.9 534.63 468.27 524.47 4 Y
0 Z
N
465.85 526.2 463.43 527.94 471.9 534.63 468.27 524.47 4 Y
V
460.63 518.94 465.7 526 2 L
2 Z
N
( threads,) 405.62 701.67 T
(capabilities, eligible) 392.62 695.08 T
(pages, and other) 391.42 689.38 T
(state) 438.86 689.38 T
( threads,) 423.86 628.71 T
(capabilities, and) 414.86 622.81 T
( other) 418.36 617.41 T
(state) 436.24 617.41 T
377 609.58 374.14 609.66 377.24 619.56 379.86 609.51 4 Y
0 Z
N
377 609.58 374.14 609.66 377.24 619.56 379.86 609.51 4 Y
V
376.87 604.63 379.73 604.56 376.63 594.65 374.01 604.7 4 Y
N
376.87 604.63 379.73 604.56 376.63 594.65 374.01 604.7 4 Y
V
376.99 609.33 376.88 604.88 2 L
N
315 76 540 720 C
0 0 612 792 C
0 1 1 0 1 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "4" 4
%%Page: "5" 5
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
[ 0.5 0.5 0 0.5 0 0 0.5]
[ 0.5 0 0 0.5 0 0.5 0.5]
[ 0.5 0 0.5 0.5 0 0.5 0]
[ 0 0.5 0 0.5 0.5 0 0.5]
[ 0 0.5 0.5 0.5 0.5 0 0]
[ 0 0 0.5 0.5 0.5 0.5 0]
[ 0 0 0 0.5 0.5 0.5 0.5]
[ 0 0 0 0.25 0.75 0.75 0.75]
 15 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 11 Q
0 X
0 0 0 1 0 0 0 K
(5) 303.25 37.34 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(3.2  Resource Management) 72 712.67 T
0 F
0.19 (As a part of this project, pro\336ling of the task acti) 72 693.67 P
0.19 (v-) 287.84 693.67 P
1.03 (ities w) 72 680.67 P
1.03 (as performed for the bene\336ts of load infor-) 101.94 680.67 P
1.63 (mation. T) 72 667.67 P
1.63 (asks were pro\336led for local and remote) 115.53 667.67 P
0.69 (IPC, local and remote paging, lifetime, processing) 72 654.67 P
0.09 (time, and the number of migrations. Local IPC and) 72 641.67 P
1.66 (VM acti) 72 628.67 P
1.66 (vity were already monitored as a part of) 109.74 628.67 P
2.1 (corresponding IPC and VM modules. Additional) 72 615.67 P
1.42 (w) 72 602.67 P
1.42 (ork pro) 79.83 602.67 P
1.42 (vided interf) 113.16 602.67 P
1.42 (aces for accessing this infor-) 165.48 602.67 P
0.36 (mation and code w) 72 589.67 P
0.36 (as added to pro) 156.37 589.67 P
0.36 (vide remote IPC) 224.18 589.67 P
0.34 (and VM acti) 72 576.67 P
0.34 (vity monitoring. This information w) 127.39 576.67 P
0.34 (as) 287.84 576.67 P
0.65 (used for load distrib) 72 563.67 P
0.65 (ution purposes and not for the) 162.04 563.67 P
(purpose of analyzing resource management.) 72 550.67 T
1 F
(3.3  Related Work) 72 529.67 T
0 F
0.53 (Security for task migration \050and process migration) 72 510.67 P
0 (for that matter\051 is impacted by the underlying en) 72 497.67 P
0 (vi-) 284.78 497.67 P
-0.24 (ronment, which consists of clusters of systems con-) 72 484.67 P
0.3 (nected in a local area netw) 72 471.67 P
0.3 (ork, typically within the) 190.38 471.67 P
1 (same security domain. Therefore there w) 72 458.67 P
1 (as not as) 257.11 458.67 P
-0.17 (much need for a secure communications infrastruc-) 72 445.67 P
1.63 (ture as is required for wide area netw) 72 432.67 P
1.63 (orks or the) 246.7 432.67 P
3.92 (W) 72 419.67 P
3.92 (eb) 81.5 419.67 P
3.92 (. Ne) 91.45 419.67 P
3.92 (v) 113.42 419.67 P
3.92 (ertheless, security w) 118.76 419.67 P
3.92 (ork w) 216 419.67 P
3.92 (as done at) 245.17 419.67 P
1 F
3.85 (CMU) 72 406.67 P
0 F
3.85 ( [42] and) 98.27 406.67 P
1 F
3.85 (T) 152.28 406.67 P
3.85 (rusted Inf) 158.8 406.67 P
3.85 (ormation Systems) 209.13 406.67 P
0 F
([43].) 72 393.67 T
2.32 (Operating systems were instrumented to pro) 72 374.67 P
2.32 (vide) 278.06 374.67 P
6.75 (information on v) 72 361.67 P
6.75 (arious ph) 159.17 361.67 P
6.75 (ysical and logical) 206.51 361.67 P
-0.1 (resources, such as in) 72 348.67 P
1 F
-0.1 (COCANET) 164.79 348.67 P
0 F
-0.1 ( [40], and in [25].) 219.79 348.67 P
0.67 (This w) 72 335.67 P
0.67 (as done for the purpose of load distrib) 102.81 335.67 P
0.67 (ution) 274.38 335.67 P
0.58 (and performance e) 72 322.67 P
0.58 (v) 154.73 322.67 P
0.58 (aluation. In the) 159.95 322.67 P
1 F
0.58 (Stealth sched-) 230.73 322.67 P
0.82 (uler) 72 309.67 P
0 F
0.82 ( [29], virtual memory w) 90.94 309.67 P
0.82 (as prioritized in order) 199.52 309.67 P
0.35 (to reduce the impact of the visiting task. The same) 72 296.67 P
0.36 (w) 72 283.67 P
0.36 (as planned for IPC b) 79.83 283.67 P
0.36 (ut w) 171.48 283.67 P
0.36 (as ne) 190.97 283.67 P
0.36 (v) 213.35 283.67 P
0.36 (er actually imple-) 218.69 283.67 P
4.07 (mented. Load information w) 72 270.67 P
4.07 (as used to decide) 209.96 270.67 P
(whether to migrate processes and to where [15].) 72 257.67 T
1.75 (F) 72 238.67 P
1.75 (or a general o) 77.95 238.67 P
1.75 (v) 143.2 238.67 P
1.75 (ervie) 148.54 238.67 P
1.75 (w of process migration and) 170.25 238.67 P
2.9 (load information management we recommend a) 72 225.67 P
(thorough surv) 72 212.67 T
(e) 133.25 212.67 T
(y paper [34].) 137.97 212.67 T
1 12 Q
(4.  OMG MASIF) 72 189 T
0 11 Q
2.26 (MASIF is an OMG standard for interoperability) 72 169.67 P
2.09 (among mobile agent systems. It has been de) 72 156.67 P
2.09 (v) 280.06 156.67 P
2.09 (el-) 285.39 156.67 P
2.14 (oped by Crystaliz, General Magic, GMD F) 72 143.67 P
2.14 (okus,) 273.47 143.67 P
6.85 (IBM, and The Open Group. It e) 72 130.67 P
6.85 (xtensi) 252.22 130.67 P
6.85 (v) 278.22 130.67 P
6.85 (ely) 283.56 130.67 P
1.56 (addresses security b) 72 117.67 P
1.56 (ut it lea) 162.87 117.67 P
1.56 (v) 198.76 117.67 P
1.56 (es resource manage-) 204.1 117.67 P
4.07 (ment for future standardization. The goal w) 72 104.67 P
4.07 (as) 287.84 104.67 P
1.25 (interoperability between the agent systems, rather) 72 91.67 P
0.66 (then interf) 72 78.67 P
0.66 (aces between an agent \050application\051 and) 118.07 78.67 P
-0.1 (an agent system. More details about MASIF can be) 315 712.67 P
(found in [37, 32].) 315 699.67 T
1 F
(4.1  Security) 315 678.67 T
0 F
-0.01 (The security capabilities of current CORB) 315 659.67 P
-0.01 (A imple-) 500.6 659.67 P
0.41 (mentations can be cate) 315 646.67 P
0.41 (gorized as: no security) 415.96 646.67 P
0.41 (, pro-) 515.76 646.67 P
4.43 (prietary security services, and conformance to) 315 633.67 P
0.31 (CORB) 315 620.67 P
0.31 (A security services [13]. The CORB) 344.57 620.67 P
0.31 (A secu-) 505.79 620.67 P
0.67 (rity services can conform to CSI le) 315 607.67 P
0.67 (v) 472.07 607.67 P
0.67 (el 0, 1 or 2 as) 477.41 607.67 P
2.24 (de\336ned in [14]. Secure ORBs e) 315 594.67 P
2.24 (xchange security) 463.53 594.67 P
1.15 (information \050a) 315 581.67 P
2 F
1.15 (Cr) 383.28 581.67 P
1.15 (edential) 394.49 581.67 P
0 F
1.15 ( object\051 about principals) 429.93 581.67 P
0.43 (for remote operations. The information in the) 315 568.67 P
2 F
0.43 (Cr) 520.24 568.67 P
0.43 (e-) 531.45 568.67 P
(dential) 315 555.67 T
0 F
( may be used for authentication.) 345.56 555.67 T
1.81 (CORB) 315 536.67 P
1.81 (A security services of) 344.57 536.67 P
1.81 (fer client authentica-) 445.35 536.67 P
2.96 (tion services via the) 315 523.67 P
3 9 Q
2.69 (Pr) 417.26 523.67 P
2.69 (incipalA) 426.39 523.67 P
2.69 (uthenticator) 457.63 523.67 P
0 11 Q
2.96 ( object.) 504.66 523.67 P
2.8 (The client in) 315 510.67 P
2.8 (v) 375.77 510.67 P
2.8 (ok) 381.05 510.67 P
2.8 (es the authenticate operation to) 391.94 510.67 P
1.35 (establish its credentials. When the client mak) 315 497.67 P
1.35 (es a) 521.86 497.67 P
0.53 (request to create an agent, it mak) 315 484.67 P
0.53 (es the credentials) 463.18 484.67 P
0.09 (a) 315 471.67 P
0.09 (v) 319.66 471.67 P
0.09 (ailable to the destination agent system. The prin-) 324.89 471.67 P
1.17 (cipal for the ne) 315 458.67 P
1.17 (w agent is then obtained via these) 384.52 458.67 P
-0.03 (credentials. The agent system uses this information) 315 445.67 P
0.63 (to \336nd and apply the appropriate security policies.) 315 432.67 P
0.26 (A non-secure ORB does not pro) 315 419.67 P
0.26 (vide client authen-) 457.6 419.67 P
-0.09 (tication. If a client creates an agent in such an en) 315 406.67 P
-0.09 (vi-) 527.78 406.67 P
5.8 (ronment, the agent will be mark) 315 393.67 P
5.8 (ed as \322not) 484.42 393.67 P
(authenticated\323.) 315 380.67 T
5.3 (CORB) 315 361.67 P
5.3 (A security services can require mutual) 344.57 361.67 P
1.37 (authentication of agent systems during migration.) 315 348.67 P
4.43 (Authentication) 315 335.67 P
4.43 (can be one-hop and multi-hop.) 387.56 335.67 P
1.19 (Most systems currently support one-hop authenti-) 315 322.67 P
2.77 (cator in which a one-hop authentication can be) 315 309.67 P
-0.16 (applied to objects tra) 315 296.67 P
-0.16 (v) 406.25 296.67 P
-0.16 (eling only one hop from their) 411.58 296.67 P
2.84 (source system. MASIF currently addresses only) 315 283.67 P
2.71 (one-hop authentication. F) 315 270.67 P
2.71 (or an) 433 270.67 P
2.71 (y communication,) 457.85 270.67 P
1.39 (the requestor may be able to specify its inte) 315 257.67 P
1.39 (grity) 517.19 257.67 P
1.39 (,) 537.25 257.67 P
3.27 (con\336dentiality) 315 244.67 P
3.27 (, replay detection, and authentica-) 377.84 244.67 P
(tion requirements.) 315 231.67 T
3.69 (Both the source and destination agent systems) 315 212.67 P
-0.02 (transfer credentials before an agent transfer occurs,) 315 199.67 P
0.06 (making it possible to apply security policies before) 315 186.67 P
0.89 (transferring the agent, protecting agents from ille-) 315 173.67 P
2.97 (gitimate agent systems and agent systems from) 315 160.67 P
2.44 (ille) 315 147.67 P
2.44 (gitimate agents. A non-secure ORB does not) 328.89 147.67 P
2.87 (pro) 315 134.67 P
2.87 (vide mutual authentication of agent systems.) 329.5 134.67 P
4.83 (An agent initially mark) 315 121.67 P
4.83 (ed as authenticated is) 431.73 121.67 P
2.17 (mark) 315 108.67 P
2.17 (ed as \322not authenticated\323 if it visits a non-) 337.49 108.67 P
(authenticated agent system.) 315 95.67 T
0 1 1 0 1 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "5" 5
%%Page: "6" 6
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
[ 0.5 0.5 0 0.5 0 0 0.5]
[ 0.5 0 0 0.5 0 0.5 0.5]
[ 0.5 0 0.5 0.5 0 0.5 0]
[ 0 0.5 0 0.5 0.5 0 0.5]
[ 0 0.5 0.5 0.5 0.5 0 0]
[ 0 0 0.5 0.5 0.5 0.5 0]
[ 0 0 0 0.5 0.5 0.5 0.5]
[ 0 0 0 0.25 0.75 0.75 0.75]
 15 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 11 Q
0 X
0 0 0 1 0 0 0 K
(6) 303.25 37.34 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3.28 (The destination agent system must identify the) 72 550.61 P
0.75 (principal on whose behalf an agent is acting. That) 72 537.61 P
2.83 (principal need not be authenticated, and certain) 72 524.61 P
0.8 (applications may use application-de\336ned authenti-) 72 511.61 P
2.05 (cation. An agent system maintains the follo) 72 498.61 P
2.05 (wing) 275 498.61 P
(information about an agent it is hosting:) 72 485.61 T
1 14 Q
0.14 (\245) 72 465.61 S
0 11 Q
0.57 0.11 (the agent's name \050principal and identity\051) 79.2 465.61 B
1 14 Q
0.14 (\245) 72 449.61 S
0 11 Q
0.57 0.11 (whether the principal has been authenticated) 79.2 449.61 B
1 14 Q
0.14 (\245) 72 433.61 S
0 11 Q
0.57 0.11 (the algorithm used to authenticate the agent) 79.2 433.61 B
2.36 (It is desirable that secure ORB implementations) 72 418.61 P
0.75 (propag) 72 405.61 P
0.75 (ate the agent's credentials across migration.) 102.49 405.61 P
1.43 (This is only possible using composite dele) 72 392.61 P
1.43 (g) 266.8 392.61 P
1.43 (ation,) 272.25 392.61 P
0.49 (which in) 72 379.61 P
0.49 (v) 110.24 379.61 P
0.49 (olv) 115.52 379.61 P
0.49 (es both parties in the transfer request,) 129.41 379.61 P
0.33 (and propag) 72 366.61 P
0.33 (ates the credentials of the agent and the) 121.46 366.61 P
1.93 (sending agent system. Upon recei) 72 353.61 P
1.93 (ving an agent's) 227.61 353.61 P
4.61 (credentials, the recei) 72 340.61 P
4.61 (ving agent system should) 171.65 340.61 P
1.74 (establish the agent's credentials as the in) 72 327.61 P
1.74 (v) 259.34 327.61 P
1.74 (ocation) 264.62 327.61 P
0.22 (credentials of the agent. Operations in) 72 314.61 P
0.22 (v) 240.07 314.61 P
0.22 (ok) 245.35 314.61 P
0.22 (ed by the) 256.23 314.61 P
0.02 (agent are subject to the policies associated with the) 72 301.61 P
1.49 (agent's principal. This ensures the propag) 72 288.61 P
1.49 (ation of) 261.6 288.61 P
0.37 (the agent's credentials during subsequent transfers.) 72 275.61 P
0.65 (An agent recei) 72 262.61 P
0.65 (v) 137.17 262.61 P
0.65 (ed from an untrusted agent system) 142.51 262.61 P
(may ha) 72 249.61 T
(v) 103.86 249.61 T
(e its credentials weak) 109.19 249.61 T
(ened.) 203.47 249.61 T
3.8 (The propag) 72 230.61 P
3.8 (ation of both agent credentials and) 126.15 230.61 P
-0.2 (agent system credentials is only possible with com-) 72 217.61 P
-0.08 (posite dele) 72 204.61 P
-0.08 (g) 119.11 204.61 P
-0.08 (ation, a) 124.56 204.61 P
-0.08 (v) 156.65 204.61 P
-0.08 (ailable with ORB implementa-) 161.87 204.61 P
1.97 (tions that conform to CSI le) 72 191.61 P
1.97 (v) 204.1 191.61 P
1.97 (el 2. Dele) 209.44 191.61 P
1.97 (g) 255.67 191.61 P
1.97 (ation of) 261.12 191.61 P
0.85 (credentials is needed to identify an agent\325) 72 178.61 P
0.85 (s princi-) 259.79 178.61 P
0.93 (pals when an agent in) 72 165.61 P
0.93 (v) 170.57 165.61 P
0.93 (ok) 175.85 165.61 P
0.93 (es a method on CORB) 186.74 165.61 P
0.93 (A) 289.06 165.61 P
-0.08 (objects. In CSI le) 72 152.61 P
-0.08 (v) 147.86 152.61 P
-0.08 (el 0 and 1 implementations, only) 153.2 152.61 P
0.08 (one of the credentials of the agent or the agent sys-) 72 139.61 P
1.6 (tems can be transmitted. If mutual authentication) 72 126.61 P
2.08 (between agent systems is not required \050e.g. in a) 72 113.61 P
1.71 (trusted en) 72 100.61 P
1.71 (vironment\051, the agent\325) 116.34 100.61 P
1.71 (s credentials may) 217.21 100.61 P
1.9 (be propag) 72 87.61 P
1.9 (ated to the destination agent system in) 117.53 87.61 P
3.6 (lieu of the agent system\325) 315 712.67 P
3.6 (s credentials. In non-) 436.95 712.67 P
1.99 (secure ORB implementations, an agent\325) 315 699.67 P
1.99 (s creden-) 498.01 699.67 P
(tials are not propag) 315 686.67 T
(ated between agent systems.) 399.57 686.67 T
0.98 (Secure ORBs allo) 315 667.67 P
0.98 (w speci\336cation of the quality of) 395.5 667.67 P
2.05 (security service and security le) 315 654.67 P
2.05 (v) 458.55 654.67 P
2.05 (el by setting the) 463.88 654.67 P
0.2 (security features of the in) 315 641.67 P
0.2 (v) 427.17 641.67 P
0.2 (ok) 432.45 641.67 P
0.2 (er's credentials, or the) 443.34 641.67 P
0.81 (quality of protection in an object reference. These) 315 628.67 P
4.86 (include: inte) 315 615.67 P
4.86 (grity) 374.39 615.67 P
4.86 (, con\336dentiality) 394.45 615.67 P
4.86 (, replay detec-) 467.66 615.67 P
1.11 (tion, misordering detection, and tar) 315 602.67 P
1.11 (get authentica-) 473.83 602.67 P
(tion.) 315 589.67 T
1 F
(4.2  Resource Management) 315 568.67 T
0 F
0.63 (MASIF has limited the amount of ef) 315 549.67 P
0.63 (fort dedicated) 478.59 549.67 P
0.06 (to resource management for a fe) 315 536.67 P
0.06 (w reasons. MASIF) 457.08 536.67 P
2.7 (w) 315 523.67 P
2.7 (as intended to be a minimal speci\336cation and) 322.83 523.67 P
-0.15 (addressing resources w) 315 510.67 P
-0.15 (ould ha) 416.62 510.67 P
-0.15 (v) 448.94 510.67 P
-0.15 (e violated this goal.) 454.28 510.67 P
0.04 (It is also hard to pro) 315 497.67 P
0.04 (vide a single standard co) 403.32 497.67 P
0.04 (v) 512.06 497.67 P
0.04 (ering) 517.4 497.67 P
1.86 (resource management for dif) 315 484.67 P
1.86 (ferent platforms and) 447.08 484.67 P
4.34 (systems. Finally) 315 471.67 P
4.34 (, it w) 390.13 471.67 P
4.34 (as intended for practical) 421 471.67 P
2.16 (usage for a \336rst series of reference implementa-) 315 458.67 P
0.47 (tions, and other agent features w) 315 445.67 P
0.47 (ould be addressed) 460.23 445.67 P
0.1 (later) 315 432.67 P
0.1 (. F) 333.94 432.67 P
0.1 (or the time being, only the e) 345.49 432.67 P
0.1 (xisting CORB) 469.68 432.67 P
0.1 (A) 532.06 432.67 P
(support can be used for resource management.) 315 419.67 T
1 F
(4.3  Related Work) 315 398.67 T
0 F
3.84 (W) 315 379.67 P
3.84 (ithin the) 324.94 379.67 P
1 F
3.84 (FIP) 371.74 379.67 P
3.84 (A) 388.65 379.67 P
0 F
3.84 ( or) 396.59 379.67 P
3.84 (g) 412.14 379.67 P
3.84 (anization there is another) 417.59 379.67 P
2.22 (ef) 315 366.67 P
2.22 (fort pursuing standardization of agent mobility) 323.27 366.67 P
3.76 ([16]. FIP) 315 353.67 P
3.76 (A standardizes agents in general, and) 357.47 353.67 P
0.58 (addresses mobility as another capability of agents.) 315 340.67 P
1.55 (The MASIF team is participating in FIP) 315 327.67 P
1.55 (A ef) 499.32 327.67 P
1.55 (forts) 519.84 327.67 P
0.63 (and MASIF is a contender for agent mobility sup-) 315 314.67 P
1.9 (port. FIP) 315 301.67 P
1.9 (A e) 355 301.67 P
1.9 (xplicitly addresses both security and) 372.31 301.67 P
2.05 (resource management as requirements for agents) 315 288.67 P
2.35 (and mobile agents. A number of projects at the) 315 275.67 P
1.06 (recent) 315 262.67 P
1 F
1.06 (A) 345.68 262.67 P
1.06 (CTs) 353.02 262.67 P
0 F
1.06 ( e) 372.58 262.67 P
1.06 (v) 380.99 262.67 P
1.06 (ent in Europe ha) 386.33 262.67 P
1.06 (v) 461.68 262.67 P
1.06 (e indicated their) 467.01 262.67 P
(support for either the MASIF or FIP) 315 249.67 T
(A standard [1].) 473.48 249.67 T
1 12 Q
(5.  Mobile Objects and Agents \050MOA\051) 315 226 T
0 11 Q
0.12 (The MO) 315 206.67 P
0.12 (A project has been de) 352.32 206.67 P
0.12 (v) 447.84 206.67 P
0.12 (eloped at The Open) 453.18 206.67 P
1.25 (Group Research Institute between 1996 and 1998) 315 193.67 P
1.43 (for SECOM, funded by MITI, Japan. It has been) 315 180.67 P
3.95 (adopted as a base technology for a follo) 315 167.67 P
3.95 (w-up) 517.4 167.67 P
-0.19 (project, ANIMA [6], by The Open Group Grenoble) 315 154.67 P
2.56 (Research Institute. A fe) 315 141.67 P
2.56 (w sites ha) 426.27 141.67 P
2.56 (v) 474.55 141.67 P
2.56 (e been using) 479.89 141.67 P
0.59 (MO) 315 128.67 P
0.59 (A: SECOM, the Uni) 332.34 128.67 P
0.59 (v) 423.67 128.67 P
0.59 (ersity of Den) 429 128.67 P
0.59 (v) 487.17 128.67 P
0.59 (er) 492.51 128.67 P
0.59 (, INRIA,) 500.61 128.67 P
-0.04 (and the Uni) 315 115.67 P
-0.04 (v) 365.97 115.67 P
-0.04 (ersity of Coimbra, Portug) 371.3 115.67 P
-0.04 (al. The goals) 483.57 115.67 P
3.14 (of the project were maintaining communication) 315 102.67 P
2.26 (channels across migration, resource management) 315 89.67 P
72 83.94 297 720 C
72 557.94 297 720 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 9 Q
0 X
0 0 0 1 0 0 0 K
-0.02 (Figure 4.  Delegation of credentials:) 71.18 596.23 P
2 F
-0.02 (one or more credentials) 210.28 596.23 P
0 (can be propagated; the destination system chooses credentials) 71.18 587.23 P
(it will use.) 71.18 578.23 T
0 1 1 0 1 0 0 K
0 0 0 1 0 0 0 K
238.29 690.51 235.65 690.58 238.54 699.72 240.93 690.44 4 Y
1 H
0 Z
3 X
N
238.29 690.51 235.65 690.58 238.54 699.72 240.93 690.44 4 Y
V
238.28 690.01 237.89 675.26 2 L
2 Z
N
124.37 687.34 127.01 687.34 124.37 678.12 121.73 687.34 4 Y
0 Z
N
124.37 687.34 127.01 687.34 124.37 678.12 121.73 687.34 4 Y
V
124.37 699.12 124.37 687.84 2 L
2 Z
N
123.86 633.46 126.51 633.49 124 624.24 121.22 633.42 4 Y
0 Z
N
123.86 633.46 126.51 633.49 124 624.24 121.22 633.42 4 Y
V
123.52 658.06 123.86 633.96 2 L
2 Z
N
239 646.68 236.36 646.66 238.94 655.9 241.65 646.7 4 Y
0 Z
N
239 646.68 236.36 646.66 238.94 655.9 241.65 646.7 4 Y
V
239.01 646.18 239.16 624.11 2 L
2 Z
N
195.98 613.84 195.98 616.49 205.2 613.84 195.98 611.2 4 Y
0 Z
N
195.98 613.84 195.98 616.49 205.2 613.84 195.98 611.2 4 Y
V
155.19 613.84 195.48 613.84 2 L
2 Z
N
0.5 H
0 Z
0 X
90 450 30.99 8.87 124.18 708.94 A
3 7 Q
(Agent X) 111.57 706.75 T
90 450 30.99 8.87 123.5 667.15 A
(Agent System A) 99.23 665.1 T
90 450 30.99 8.87 123.5 613.27 A
(ORB) 115.66 609.31 T
1 H
8 X
90 450 30.99 8.87 238.38 709.97 A
0 X
(Agent X) 226.26 709.1 T
0.5 H
90 450 30.99 8.87 239.06 666.1 A
(Agent System B) 214.8 664.06 T
90 450 30.99 8.87 239.06 614.65 A
(ORB) 232.23 609.93 T
1 1 0 0 0 0 1 K
0 0 0 1 0 0 0 K
0 F
(Current.get_credentials\050\051) 206.52 633.27 T
1 1 0 0 0 0 1 K
0 0 0 1 0 0 0 K
(Agent) 85.31 647.23 T
(System) 104.17 647.23 T
(B.recei) 126.53 647.23 T
(v) 146.38 647.23 T
(e_agent\050....\051;) 149.77 647.23 T
(Internal I/F) 223.23 691.69 T
2 F
(Examine Cr) 206.64 648.8 T
(edentials) 240.02 648.8 T
(befor) 196.89 641.99 T
(e e) 211.41 641.99 T
(xecuting the oper) 219.24 641.99 T
(ation) 267.73 641.99 T
(Cr) 196.6 682.99 T
(edentials of Ag) 203.73 682.99 T
(ent X can be) 245.66 682.99 T
1 1 0 0 0 0 1 K
0 0 0 1 0 0 0 K
0 F
(Internal I/F) 110.3 687.65 T
1 1 0 0 0 0 1 K
0 0 0 1 0 0 0 K
(Credentials) 134.61 625.35 T
(of) 168.25 625.35 T
(Agent) 175.83 625.35 T
(X) 194.69 625.35 T
(and/or) 201.49 625.35 T
(Agent System A) 154.86 618.55 T
2 F
(associated with r) 197.62 676.77 T
(esumed a) 245.2 676.77 T
(g) 271.38 676.77 T
(ent) 274.81 676.77 T
72 83.94 297 720 C
0 0 612 792 C
0 1 1 0 1 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "6" 6
%%Page: "7" 7
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
[ 0.5 0.5 0 0.5 0 0 0.5]
[ 0.5 0 0 0.5 0 0.5 0.5]
[ 0.5 0 0.5 0.5 0 0.5 0]
[ 0 0.5 0 0.5 0.5 0 0.5]
[ 0 0.5 0.5 0.5 0.5 0 0]
[ 0 0 0.5 0.5 0.5 0.5 0]
[ 0 0 0 0.5 0.5 0.5 0.5]
[ 0 0 0 0.25 0.75 0.75 0.75]
 15 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 11 Q
0 X
0 0 0 1 0 0 0 K
(7) 303.25 37.34 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3.84 (and utilizing a component based model. More) 72 712.67 P
(details about MO) 72 699.67 T
(A can be found in [34].) 148 699.67 T
1 F
(5.1  Security) 72 678.67 T
0 F
0.54 (The \336rst MO) 72 659.67 P
0.54 (A release w) 130.13 659.67 P
0.54 (as designed not to violate) 183.02 659.67 P
1.35 (compatibility with the JDK 1.1 security manager) 72 646.67 P
1.35 (.) 294.25 646.67 P
2.49 (Ho) 72 633.67 P
2.49 (we) 85.17 633.67 P
2.49 (v) 97.72 633.67 P
2.49 (er no security manager has actually been) 103.05 633.67 P
3.98 (implemented. Man) 72 620.67 P
3.98 (y security features were left) 158.92 620.67 P
2.7 (open for the ne) 72 607.67 P
2.7 (xt release, such as the w) 146.21 607.67 P
2.7 (ork on) 265.89 607.67 P
0.53 (authentication and authorization. W) 72 594.67 P
0.53 (e ha) 230.35 594.67 P
0.53 (v) 248.68 594.67 P
0.53 (e actually) 254.01 594.67 P
(implemented only the follo) 72 581.67 T
(wing features.) 191.2 581.67 T
0.11 (Thread switching w) 72 562.67 P
0.11 (as emplo) 159.48 562.67 P
0.11 (yed to allo) 198.89 562.67 P
0.11 (w conform-) 245.27 562.67 P
2.54 (ance with the Ja) 72 549.67 P
2.54 (v) 149.96 549.67 P
2.54 (a security model. Services are) 155.19 549.67 P
6.72 (pro) 72 536.67 P
6.72 (vided by threads containing only trusted) 86.5 536.67 P
0.41 (classes. When a MO) 72 523.67 P
0.41 (A system thread has to switch) 163.27 523.67 P
2.64 (trust boundaries \050for e) 72 510.67 P
2.64 (xample in the case of an) 177.2 510.67 P
3.89 (incoming message, or opening a channel\051, the) 72 497.67 P
1 (request is passed to a system queue serviced by a) 72 484.67 P
1.29 (pool of application threads allocated for that spe-) 72 471.67 P
2.58 (ci\336c trust domain. A thread from the pool pro-) 72 458.67 P
4.86 (cesses requests by calling application speci\336c) 72 445.67 P
1.1 (methods. The request resumes either upon receipt) 72 432.67 P
2.22 (of the response, or upon the timeout, whiche) 72 419.67 P
2.22 (v) 283.12 419.67 P
2.22 (er) 288.45 419.67 P
2.08 (happens \336rst. This pre) 72 406.67 P
2.08 (v) 175.74 406.67 P
2.08 (ents the application from) 181.07 406.67 P
2.92 (stalling the system by thread e) 72 393.67 P
2.92 (xhaustion, or by) 219.96 393.67 P
0.77 (impacting performance through o) 72 380.67 P
0.77 (v) 221.7 380.67 P
0.77 (eruse of system) 227.03 380.67 P
1.14 (threads. Resource usage is track) 72 367.67 P
1.14 (ed on a per agent) 217.29 367.67 P
(and per agent system basis.) 72 354.67 T
1.1 (Each agent has its o) 72 335.67 P
1.1 (wn name space as de\336ned by) 163.5 335.67 P
5.3 (the object in which it is transported \050called) 72 322.67 P
0.65 (Buck) 72 309.67 P
0.65 (et\051. A name space consists primarily of byte-) 95.11 309.67 P
3.7 (codes and serialized objects. One complication) 72 296.67 P
0.99 (arises when an agent returns to a place that it has) 72 283.67 P
0.8 (left. In this case, the name space is a combination) 72 270.67 P
0.2 (of the original bytecodes and the returning objects.) 72 257.67 P
2.09 (This is achie) 72 244.67 P
2.09 (v) 131.52 244.67 P
2.09 (ed by nesting the returning b) 136.85 244.67 P
2.09 (uck) 273.28 244.67 P
2.09 (et) 289.06 244.67 P
1.83 (\050with the meaning of classloader in this conte) 72 231.67 P
1.83 (xt\051) 284.78 231.67 P
(within the b) 72 218.67 T
(uck) 124.34 218.67 T
(et of the remaining place.) 140.11 218.67 T
0 (MO) 72 199.67 P
0 (A uses the standard J) 89.34 199.67 P
0 (AR \336le format for passing) 181.53 199.67 P
1.18 (agents. This format has pro) 72 186.67 P
1.18 (visions for digital sig-) 196.6 186.67 P
7.23 (natures, allo) 72 173.67 P
7.23 (wing for authentication. At the) 132.73 173.67 P
1.37 (moment, although the design and implementation) 72 160.67 P
2.37 (of authentication mechanisms ha) 72 147.67 P
2.37 (v) 223.39 147.67 P
2.37 (e been consid-) 228.73 147.67 P
1.54 (ered, MO) 72 134.67 P
1.54 (A has not addressed authentication. F) 115.31 134.67 P
1.54 (or) 287.84 134.67 P
3.16 (e) 72 121.67 P
3.16 (xample, the agent\325) 76.72 121.67 P
3.16 (s authenticity will be main-) 163.99 121.67 P
1.65 (tained as a part of the agent\325) 72 108.67 P
1.65 (s name object. Cur-) 205.91 108.67 P
0.16 (rently the agent name is internal to the MO) 72 95.67 P
0.16 (A agent) 262.32 95.67 P
2.22 (system and maintained only as a String, b) 72 82.67 P
2.22 (ut we) 270.65 82.67 P
1.41 (plan to upgrade to an object in order to maintain) 315 712.67 P
(security related information.) 315 699.67 T
1.55 (First generation agents are named after the agent) 315 680.67 P
0.88 (system where the) 315 667.67 P
0.88 (y were created. If cloned, agents) 392.97 667.67 P
3.23 (are named after the agent system of their \336rst) 315 654.67 P
2.13 (ancestor) 315 641.67 P
2.13 (, e) 351.21 641.67 P
2.13 (xtended with their generation number) 363.57 641.67 P
2.13 (,) 537.25 641.67 P
1.55 (irrespecti) 315 628.67 P
1.55 (v) 355.66 628.67 P
1.55 (e of the agent system where the) 360.99 628.67 P
1.55 (y were) 508.83 628.67 P
1.48 (actually cloned. In other w) 315 615.67 P
1.48 (ords, each agent bears) 438.43 615.67 P
0.86 (the sign of the original site responsible for initiat-) 315 602.67 P
1.74 (ing the agent f) 315 589.67 P
1.74 (amily) 383.33 589.67 P
1.74 (. This is used as an ultimate) 407.68 589.67 P
-0.28 (source of information on the current agent location:) 315 576.67 P
0.29 (as a last resort, the home agent system can be que-) 315 563.67 P
2.83 (ried for current location information. The place) 315 550.67 P
0.93 (name consists of the name of the agent it belongs) 315 537.67 P
2.4 (to, e) 315 524.67 P
2.4 (xtended with the agent system name where) 336.18 524.67 P
(place currently resides.) 315 511.67 T
1 F
(5.2  Resource Management) 315 490.67 T
0 F
0.37 (One of the initial goals of the MO) 315 471.67 P
0.37 (A project w) 466.6 471.67 P
0.37 (as to) 519.16 471.67 P
7.92 (support e) 315 458.67 P
7.92 (xtensi) 363.39 458.67 P
7.92 (v) 389.39 458.67 P
7.92 (e control of v) 394.73 458.67 P
7.92 (arious MO) 477.17 458.67 P
7.92 (A) 532.06 458.67 P
2.52 (resources \050not JVM or OS resources\051. Resource) 315 445.67 P
0.36 (management is deeply in) 315 432.67 P
0.36 (v) 425.31 432.67 P
0.36 (olv) 430.59 432.67 P
0.36 (ed in the design deci-) 444.48 432.67 P
0.97 (sions of man) 315 419.67 P
0.97 (y MO) 373 419.67 P
0.97 (A layers and components. This) 399.55 419.67 P
1.26 (support w) 315 406.67 P
1.26 (ould ha) 359.84 406.67 P
1.26 (v) 393.58 406.67 P
1.26 (e been hard to add as an after-) 398.91 406.67 P
4.09 (thought. The follo) 315 393.67 P
4.09 (wing limits are enforced on) 402.66 393.67 P
(MO) 315 380.67 T
(A resources:) 332.34 380.67 T
1 14 Q
0.14 (\245) 315 360.67 S
0 11 Q
0.57 0.11 (agent: lifetime, places, hops, channels, clones) 322.2 360.67 B
1 14 Q
0.14 (\245) 315 345.67 S
0 11 Q
0.57 0.11 (place: lifetime, nested places, channels, agents) 322.2 345.67 B
1 14 Q
0.14 (\245) 315 330.67 S
0 11 Q
0.57 0.11 (agent en) 322.2 330.67 B
0.57 0.11 (vironment: agents, places, channels) 360.17 330.67 B
2.06 (These limits are v) 315 312.67 P
2.06 (eri\336ed by each MO) 399.55 312.67 P
2.06 (A function) 490.58 312.67 P
2.67 (that can change the v) 315 299.67 P
2.67 (alues, such as mo) 418.27 299.67 P
2.67 (ving, or) 503.11 299.67 P
0.7 (opening a channel. Should the limits be e) 315 286.67 P
0.7 (xceeded,) 501.21 286.67 P
3.89 (the function is interrupted and the appropriate) 315 273.67 P
0.41 (e) 315 260.67 P
0.41 (xception is thro) 319.72 260.67 P
0.41 (wn to the component that in) 388.7 260.67 P
0.41 (v) 513.45 260.67 P
0.41 (ok) 518.73 260.67 P
0.41 (ed) 529.62 260.67 P
(the function.) 315 247.67 T
0.17 (Prior to being accepted at a node, the agent ne) 315 228.67 P
0.17 (goti-) 519.22 228.67 P
1.42 (ates for MO) 315 215.67 P
1.42 (A resources: which and ho) 370.61 215.67 P
1.42 (w man) 493.32 215.67 P
1.42 (y it) 524.21 215.67 P
3.57 (can utilize at the tar) 315 202.67 P
3.57 (get MO) 415.82 202.67 P
3.57 (A system. This is) 452.91 202.67 P
0.06 (achie) 315 189.67 P
0.06 (v) 337.93 189.67 P
0.06 (ed by calculating local polic) 343.27 189.67 P
0.06 (y from the agent) 467.4 189.67 P
1.89 (polic) 315 176.67 P
1.89 (y and host polic) 336.83 176.67 P
1.89 (y) 412.3 176.67 P
1.89 (. The agent local polic) 417.08 176.67 P
1.89 (y is) 522.53 176.67 P
2.04 (enforced during its lifetime at the visiting MO) 315 163.67 P
2.04 (A) 532.06 163.67 P
0.02 (system. Figure) 315 150.67 P
0.02 (5 presents ho) 382.55 150.67 P
0.02 (w the policies are con-) 440.35 150.67 P
0.38 (\336gured in MO) 315 137.67 P
0.38 (A system. More details ho) 378.31 137.67 P
0.38 (w compo-) 495.33 137.67 P
4.83 (nent based computing is applied in MO) 315 124.67 P
4.83 (A is) 517.14 124.67 P
(described in tw) 315 111.67 T
(o other papers [34, 31].) 382.1 111.67 T
-0.22 (MO) 315 92.67 P
-0.22 (A did not address resource management unsup-) 332.34 92.67 P
1.04 (ported by the JVM \050e.g. memory) 315 79.67 P
1.04 (, processing, and) 463.99 79.67 P
0 1 1 0 1 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "7" 7
%%Page: "8" 8
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
[ 0.5 0.5 0 0.5 0 0 0.5]
[ 0.5 0 0 0.5 0 0.5 0.5]
[ 0.5 0 0.5 0.5 0 0.5 0]
[ 0 0.5 0 0.5 0.5 0 0.5]
[ 0 0.5 0.5 0.5 0.5 0 0]
[ 0 0 0.5 0.5 0.5 0.5 0]
[ 0 0 0 0.5 0.5 0.5 0.5]
[ 0 0 0 0.25 0.75 0.75 0.75]
 15 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 11 Q
0 X
0 0 0 1 0 0 0 K
(8) 303.25 37.34 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1.11 (communication\051. Whereas it w) 72 496.86 P
1.11 (ould be possible to) 210.86 496.86 P
0.9 (enforce some of these by modifying the JVM, we) 72 483.86 P
1.88 (refrained from an) 72 470.86 P
1.88 (y de) 152.55 470.86 P
1.88 (viation from) 172.79 470.86 P
2 F
1.88 (de facto) 233.98 470.86 P
0 F
1.88 ( stan-) 270.99 470.86 P
0.68 (dard solutions. Imposing resource limits has in\337u-) 72 457.86 P
0.73 (enced the design and implementation of the MO) 72 444.86 P
0.73 (A) 289.06 444.86 P
0.48 (system. Resource accounting and checking of lim-) 72 431.86 P
2.28 (its is performed at v) 72 418.86 P
2.28 (arious le) 168.85 418.86 P
2.28 (v) 208.43 418.86 P
2.28 (els of the system,) 213.77 418.86 P
0.61 (such as in the communication module, ne) 72 405.86 P
0.61 (gotiation) 257.88 405.86 P
(module and the sandbox module.) 72 392.86 T
1 F
(5.3  Related Work) 72 371.86 T
0 F
0.09 (There is a lot of related w) 72 352.86 P
0.09 (ork on mobile agents and) 185.44 352.86 P
0.9 (security) 72 339.86 P
0.9 (.) 106.11 339.86 P
1 F
0.9 (T) 112.51 339.86 P
0.9 (elescript) 118.83 339.86 P
0 F
0.9 ( pro) 158.54 339.86 P
0.9 (vided seminal treatment of) 176.69 339.86 P
4.19 (security and resource management [51]. Other) 72 326.86 P
0.94 (e) 72 313.86 P
0.94 (xamples include:) 76.72 313.86 P
1 F
0.94 (T) 156.2 313.86 P
0.94 (acoma) 162.53 313.86 P
0 F
0.94 (addresses security and) 196.76 313.86 P
2.64 (f) 72 300.86 P
2.64 (ault tolerance [26],) 75.55 300.86 P
1 F
2.64 (Ara) 169.63 300.86 P
0 F
2.64 (addresses security and) 193.35 300.86 P
0.28 (resource management by modifying the JVM [39],) 72 287.86 P
1 F
2.29 (Agent Tcl) 72 274.86 P
0 F
2.29 (pro) 125.47 274.86 P
2.29 (vides some basic security support) 139.96 274.86 P
0.21 ([28], in the) 72 261.86 P
1 F
0.21 (Mole) 123.96 261.86 P
0 F
0.21 ( project agents are protected from) 147.79 261.86 P
4.55 (malicious hosts [8], and) 72 248.86 P
1 F
4.55 (Concordia) 198.05 248.86 P
0 F
4.55 ( addresses) 247.55 248.86 P
3.57 (security together with persistence. A capability) 72 235.86 P
0.02 (based system is suggested in [21] and protection of) 72 222.86 P
-0.07 (an agent application is researched in [41]. P) 72 209.86 P
-0.07 (ast pro-) 263.78 209.86 P
0.57 (ceedings of this same w) 72 196.86 P
0.57 (orkshop are a good source) 179.26 196.86 P
4.45 (of v) 72 183.86 P
4.45 (arious topics on mobile objects including) 93.58 183.86 P
(resource management and security) 72 170.86 T
(.) 223.71 170.86 T
1 12 Q
(6.  Conversant) 72 147.19 T
0 11 Q
4.09 (Con) 72 127.86 P
4.09 (v) 89.9 127.86 P
4.09 (ersant [9] is an acti) 95.23 127.86 P
4.09 (v) 195.01 127.86 P
4.09 (e netw) 200.34 127.86 P
4.09 (ork prototype) 233.34 127.86 P
0.38 (being b) 72 114.86 P
0.38 (uilt under the D) 104.85 114.86 P
0.38 (ARP) 174.91 114.86 P
0.38 (A acti) 195.29 114.86 P
0.38 (v) 221.98 114.86 P
0.38 (e netw) 227.31 114.86 P
0.38 (orks pro-) 256.6 114.86 P
0.86 (gram. Acti) 72 101.86 P
0.86 (v) 119.63 101.86 P
0.86 (e netw) 124.96 101.86 P
0.86 (orks mo) 154.73 101.86 P
0.86 (v) 191.17 101.86 P
0.86 (e e) 196.51 101.86 P
0.86 (xtensibility into the) 209.72 101.86 P
0.75 (netw) 72 88.86 P
0.75 (ork layer by allo) 93.27 88.86 P
0.75 (wing the protocol code to be) 167.66 88.86 P
0.43 (dynamically loaded into intermediate nodes on the) 315 712.67 P
2.22 (netw) 315 699.67 P
2.22 (ork [47]. This has been demonstrated to be) 336.27 699.67 P
2.66 (useful for applications ranging from customized) 315 686.67 P
-0.23 (congestion control to web caching [11][53]. Gener-) 315 673.67 P
2.08 (ally) 315 660.67 P
2.08 (, the acti) 330.79 660.67 P
2.08 (v) 372.24 660.67 P
2.08 (e netw) 377.57 660.67 P
2.08 (ork concept dif) 408.56 660.67 P
2.08 (fers from the) 479.03 660.67 P
0.9 (agent concept in that mobile code acts on a lo) 315 647.67 P
0.9 (wer) 523.51 647.67 P
0.17 (le) 315 634.67 P
0.17 (v) 322.67 634.67 P
0.17 (el of abstraction - the node\325) 328 634.67 P
0.17 (s netw) 449.5 634.67 P
0.17 (ork layer \050e.g.) 477.97 634.67 P
0.32 (protocol dri) 315 621.67 P
0.32 (v) 366.68 621.67 P
0.32 (ers and de) 372.01 621.67 P
0.32 (vice dri) 416.97 621.67 P
0.32 (v) 450.31 621.67 P
0.32 (ers\051 are visible and) 455.65 621.67 P
(modi\336able.) 315 608.67 T
1 F
(6.1  Security) 315 587.67 T
0 F
0.64 (Con) 315 568.67 P
0.64 (v) 332.9 568.67 P
0.64 (ersant uses Ja) 338.23 568.67 P
0.64 (v) 399.17 568.67 P
0.64 (a as its e) 404.39 568.67 P
0.64 (x) 443.73 568.67 P
0.64 (ecution en) 449.06 568.67 P
0.64 (vironment) 494.78 568.67 P
1.87 (and v) 315 555.67 P
1.87 (ehicle for mobile code. Ja) 340.83 555.67 P
1.87 (v) 461.4 555.67 P
1.87 (a\325) 466.63 555.67 P
1.87 (s security fea-) 474.57 555.67 P
2.42 (tures, such as type-safety and name-space parti-) 315 542.67 P
2.42 (tioning, are useful in enforcing controllable non) 315 529.67 P
3.63 (interference between mutually mistrustful code.) 315 516.67 P
3.88 (Although these features impose some run-time) 315 503.67 P
4.53 (o) 315 490.67 P
4.53 (v) 320.33 490.67 P
4.53 (erhead to ensure that safety) 325.67 490.67 P
4.53 (, other research) 463.44 490.67 P
0.1 (projects \050e.g. SPIN [17]\051 ha) 315 477.67 P
0.1 (v) 436.77 477.67 P
0.1 (e sho) 442.11 477.67 P
0.1 (wn that type safe) 464.85 477.67 P
0.07 (languages can ef) 315 464.67 P
0.07 (\336ciently be used for lo) 388.17 464.67 P
0.07 (w le) 487.15 464.67 P
0.07 (v) 505.58 464.67 P
0.07 (el pro-) 510.91 464.67 P
(gramming.) 315 451.67 T
2.66 (Authentication and authorization are done using) 315 432.67 P
1.98 (cryptographic k) 315 419.67 P
1.98 (e) 386.22 419.67 P
1.98 (y techniques. The end user or a) 390.94 419.67 P
1.78 (class of users is the principal, and it is authenti-) 315 406.67 P
0.95 (cated using public k) 315 393.67 P
0.95 (e) 406.05 393.67 P
0.95 (y encryption. A special user) 410.77 393.67 P
0.95 (,) 537.25 393.67 P
1.47 (the system manager) 315 380.67 P
1.47 (, controls policies which map) 404.88 380.67 P
2.22 (resource rights to principals. A polic) 315 367.67 P
2.22 (y is a code) 486.61 367.67 P
-0.07 (module which determines the v) 315 354.67 P
-0.07 (alidity of a resource) 452.54 354.67 P
1.75 (request based on arbitrary criteria. W) 315 341.67 P
1.75 (e will b) 486.6 341.67 P
1.75 (uild) 522.88 341.67 P
0.62 (this infrastructure using features from Ja) 315 328.67 P
0.62 (v) 495.97 328.67 P
0.62 (a\325) 501.19 328.67 P
0.62 (s latest) 509.13 328.67 P
1.58 (v) 315 315.67 P
1.58 (ersion \0501.2\051, which include classes that simplify) 320.33 315.67 P
1.26 (the bookk) 315 302.67 P
1.26 (eeping necessary to maintain this infor-) 359.85 302.67 P
-0.06 (mation, as well as libraries for performing cryptog-) 315 289.67 P
0.31 (raph) 315 276.67 P
0.31 (y) 334.49 276.67 P
0.31 (. Note that the Con) 339.28 276.67 P
0.31 (v) 423.47 276.67 P
0.31 (ersant project has not yet) 428.8 276.67 P
2.05 (addressed whether a secure transport mechanism) 315 263.67 P
1.2 (\050SSL, etc.\051 will be used, or what the mechanisms) 315 250.67 P
(for k) 315 237.67 T
(e) 335.97 237.67 T
(y distrib) 340.68 237.67 T
(ution will be.) 376.83 237.67 T
0.39 (A problem with Ja) 315 218.67 P
0.39 (v) 397.52 218.67 P
0.39 (a is that its security model w) 402.74 218.67 P
0.39 (as) 530.84 218.67 P
1.9 (designed to protect the host platform from mali-) 315 205.67 P
3.37 (cious code, b) 315 192.67 P
3.37 (ut not code from other malicious) 379.26 192.67 P
1.7 (code. Thus, it is poorly suited as a multi-tasking) 315 179.67 P
3.17 (en) 315 166.67 P
3.17 (vironment [7]. Although the language\325) 324.94 166.67 P
3.17 (s type-) 507.2 166.67 P
0.24 (safety pre) 315 153.67 P
0.24 (v) 358.03 153.67 P
0.24 (ents pointers from being for) 363.37 153.67 P
0.24 (ged to point) 486.96 153.67 P
2.82 (into another users pri) 315 140.67 P
2.82 (v) 416.36 140.67 P
2.82 (ate data space, numerous) 421.58 140.67 P
0.48 (denial of service attacks on resources are still pos-) 315 127.67 P
1.6 (sible. Because Con) 315 114.67 P
1.6 (v) 401.78 114.67 P
1.6 (ersant\325) 407.12 114.67 P
1.6 (s goal is reliable com-) 436.44 114.67 P
2.26 (munications, w) 315 101.67 P
2.26 (arding of) 384.37 101.67 P
2.26 (f that class of attacks is) 426.37 101.67 P
(part of the mission.) 315 88.67 T
72 85 297 720 C
72 504.19 297 720 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 9 Q
0 X
0 0 0 1 0 0 0 K
(Figure 5. MOA Configuration:) 70.74 529.39 T
2 F
(host/agent policy/properties.) 191.49 529.39 T
0 1 1 0 1 0 0 K
J
0 0 0 1 0 0 0 K
J
6 7 Q
(instantiate ORG.openg) 88.97 714.33 T
(roup) 147.32 714.33 T
(.moa.negotiate) 158.61 714.33 T
(.P) 196.51 714.33 T
(olicy) 201.65 714.33 T
(rename ORG.openg) 88.97 707.33 T
(roup) 140.61 707.33 T
(.moa.negotiate) 151.9 707.33 T
(.P) 189.8 707.33 T
(olicy) 194.95 707.33 T
215.68 706.63 208.02 706.63 2 L
V
0.35 H
0 Z
N
7 F
(Ag) 208.02 707.33 T
228.17 706.63 215.73 706.63 2 L
V
N
(entP) 215.73 707.33 T
237.84 706.63 227.95 706.63 2 L
V
N
(olic) 227.95 707.33 T
240.98 706.63 237.79 706.63 2 L
V
N
(y) 237.79 707.33 T
6 F
(set tmp) 88.97 700.33 T
(.AgentP) 107.6 700.33 T
(olicy ItemCount 7) 127.75 700.33 T
(setat AgentP) 88.97 693.33 T
(olicy ItemStr) 121.57 693.33 T
(ing 0) 153.23 693.33 T
184.18 692.63 167.27 692.63 2 L
V
N
(maxLif) 167.27 693.33 T
199.95 692.63 184.01 692.63 2 L
V
N
(eTime) 184.01 693.33 T
( 1000 100 1000 tr) 199.95 693.33 T
(ue) 245.04 693.33 T
-0.02 (setat AgentP) 88.97 686.33 P
-0.02 (olicy ItemStr) 121.55 686.33 P
-0.02 (ing 1) 153.19 686.33 P
221.42 685.63 167.19 685.63 2 L
V
N
-0.02 (timeRemainingAtStar) 167.19 686.33 P
223.25 685.63 221.65 685.63 2 L
V
N
-0.02 (t) 221.65 686.33 P
-0.02 ( 10000 100 1000 tr) 223.25 686.33 P
-0.02 (ue) 271.45 686.33 P
(setat AgentP) 88.97 679.33 T
(olicy ItemStr) 121.57 679.33 T
(ing 2) 153.23 679.33 T
199.49 678.63 167.27 678.63 2 L
V
N
(maxChannel) 167.27 679.33 T
( 100 10 100 tr) 199.49 679.33 T
(ue) 235 679.33 T
(setat AgentP) 88.97 672.33 T
(olicy ItemStr) 121.57 672.33 T
(ing 3) 153.23 672.33 T
195.34 671.63 167.27 671.63 2 L
V
N
(maxPlaces) 167.27 672.33 T
( 1 10 100 f) 195.34 672.33 T
(alse) 222.3 672.33 T
(setat AgentP) 88.97 665.33 T
(olicy ItemStr) 121.57 665.33 T
(ing 4) 153.23 665.33 T
206.83 664.63 167.27 664.63 2 L
V
N
(remainingPlace) 167.27 665.33 T
( 0 10 100 f) 206.83 665.33 T
(alse) 233.79 665.33 T
(setat AgentP) 88.97 658.33 T
(olicy ItemStr) 121.57 658.33 T
(ing 5) 153.23 658.33 T
199.17 657.63 167.27 657.63 2 L
V
N
(maxThreads) 167.27 658.33 T
( 2 2 20 tr) 199.17 658.33 T
(ue) 221.91 658.33 T
(setat AgentP) 88.97 651.33 T
(olicy ItemStr) 121.57 651.33 T
(ing 6) 153.23 651.33 T
216.41 650.63 167.27 650.63 2 L
V
N
(snapshotsRetained) 167.27 651.33 T
( 0 2 20 tr) 216.41 651.33 T
(ue) 239.15 651.33 T
(instantiate ORG.openg) 88.97 642.33 T
(roup) 147.32 642.33 T
(.moa.negotiate) 158.61 642.33 T
(.P) 196.51 642.33 T
(olicy) 201.65 642.33 T
(rename ORG.openg) 88.97 635.33 T
(roup) 140.61 635.33 T
(.moa.negotiate) 151.9 635.33 T
(.P) 189.8 635.33 T
(olicy) 194.95 635.33 T
224.61 634.63 208.02 634.63 2 L
V
N
7 F
(HostP) 208.02 635.33 T
234.27 634.63 224.38 634.63 2 L
V
N
(olic) 224.38 635.33 T
237.42 634.63 234.23 634.63 2 L
V
N
(y) 234.23 635.33 T
6 F
(set HostP) 88.97 628.33 T
(olicy ItemCount 7) 113.58 628.33 T
(setat HostP) 88.97 621.33 T
(olicy ItemStr) 118.37 621.33 T
(ing 0) 150.03 621.33 T
180.98 620.63 164.07 620.63 2 L
V
N
(maxLif) 164.07 621.33 T
196.75 620.63 180.81 620.63 2 L
V
N
(eTime) 180.81 621.33 T
( 1000 10 1000 tr) 196.75 621.33 T
(ue) 238.65 621.33 T
(setat HostP) 88.97 614.33 T
(olicy ItemStr) 118.37 614.33 T
(ing 1) 150.03 614.33 T
218.3 613.63 164.07 613.63 2 L
V
N
(timeRemainingAtStar) 164.07 614.33 T
220.13 613.63 218.53 613.63 2 L
V
N
(t) 218.53 614.33 T
( 10000 100 1000 tr) 220.13 614.33 T
(ue) 268.41 614.33 T
(setat HostP) 88.97 607.33 T
(olicy ItemStr) 118.37 607.33 T
(ing 2) 150.03 607.33 T
196.29 606.63 164.07 606.63 2 L
V
N
(maxChannel) 164.07 607.33 T
( 100 10 100 tr) 196.29 607.33 T
(ue) 231.8 607.33 T
(setat HostP) 88.97 600.33 T
(olicy ItemStr) 118.37 600.33 T
(ing 3) 150.03 600.33 T
192.14 599.63 164.07 599.63 2 L
V
N
(maxPlaces) 164.07 600.33 T
( -1 3 5 f) 192.14 600.33 T
(alse) 211.44 600.33 T
(setat HostP) 88.97 593.33 T
(olicy ItemStr) 118.37 593.33 T
(ing 4) 150.03 593.33 T
203.63 592.63 164.07 592.63 2 L
V
N
(remainingPlace) 164.07 593.33 T
( 0 0 10 f) 203.63 593.33 T
(alse) 224.21 593.33 T
(setat HostP) 88.97 586.33 T
(olicy ItemStr) 118.37 586.33 T
(ing 5) 150.03 586.33 T
195.97 585.63 164.07 585.63 2 L
V
N
(maxThreads) 164.07 586.33 T
( 2 0 2 tr) 195.97 586.33 T
(ue) 215.52 586.33 T
(setat HostP) 88.97 579.33 T
(olicy ItemStr) 118.37 579.33 T
(ing 6) 150.03 579.33 T
213.21 578.63 164.07 578.63 2 L
V
N
(snapshotsRetained) 164.07 579.33 T
( 0 0 2 tr) 213.21 579.33 T
(ue) 232.76 579.33 T
(instantiate ORG.openg) 88.97 570.33 T
(roup) 147.32 570.33 T
(.moa.api.AgentProper) 158.61 570.33 T
(ties) 214.68 570.33 T
(rename ORG.openg) 88.97 563.33 T
(roup) 140.61 563.33 T
(.moa.api.AgentProper) 151.9 563.33 T
(ties) 207.98 563.33 T
226.15 562.63 218.5 562.63 2 L
V
N
7 F
(Ag) 218.5 563.33 T
240.88 562.63 226.21 562.63 2 L
V
N
(entPr) 226.21 563.33 T
253.22 562.63 240.78 562.63 2 L
V
N
(oper) 240.78 563.33 T
263.22 562.63 253.33 562.63 2 L
V
N
(ties) 253.33 563.33 T
6 F
(set AgentProper) 88.97 556.33 T
(ties) 130.69 556.33 T
144.41 555.63 141.22 555.63 2 L
V
N
(o) 141.22 556.33 T
156.77 555.63 144.33 555.63 2 L
V
N
(wner) 144.33 556.33 T
( Jill) 156.77 556.33 T
(set AgentProper) 88.97 549.33 T
(ties) 130.69 549.33 T
142.81 548.63 141.22 548.63 2 L
V
N
(f) 141.22 549.33 T
171.34 548.63 142.64 548.63 2 L
V
N
(amilyName) 142.64 549.33 T
( First) 171.34 549.33 T
(set AgentProper) 88.97 542.33 T
(ties) 130.69 542.33 T
177.6 541.63 141.22 541.63 2 L
V
N
(homeAgentEn) 141.22 542.33 T
202.69 541.63 177.49 541.63 2 L
V
N
(vironment) 177.49 542.33 T
( self:456) 202.69 542.33 T
0 1 1 0 1 0 0 K
0 0 0 1 0 0 0 K
72 85 297 720 C
0 0 612 792 C
0 1 1 0 1 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "8" 8
%%Page: "9" 9
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
[ 0.5 0.5 0 0.5 0 0 0.5]
[ 0.5 0 0 0.5 0 0.5 0.5]
[ 0.5 0 0.5 0.5 0 0.5 0]
[ 0 0.5 0 0.5 0.5 0 0.5]
[ 0 0.5 0.5 0.5 0.5 0 0]
[ 0 0 0.5 0.5 0.5 0.5 0]
[ 0 0 0 0.5 0.5 0.5 0.5]
[ 0 0 0 0.25 0.75 0.75 0.75]
 15 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 11 Q
0 X
0 0 0 1 0 0 0 K
(9) 303.25 37.34 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(6.2  Resource Management) 72 712.67 T
0 F
0.17 (The Con) 72 693.67 P
0.17 (v) 109.92 693.67 P
0.17 (ersant project has found it useful to char-) 115.26 693.67 P
0.01 (acterize denial of service attacks in tw) 72 680.67 P
0.01 (o w) 239.95 680.67 P
0.01 (ays.) 256.04 680.67 P
2 F
0.01 (F) 276.21 680.67 P
0.01 (ir) 282.44 680.67 P
0.01 (st) 289.66 680.67 P
0.57 (or) 72 667.67 P
0.57 (der) 81.37 667.67 P
0 F
0.57 ( and) 96.04 667.67 P
2 F
0.57 (second or) 118.57 667.67 P
0.57 (der) 161.81 667.67 P
0 F
0.57 ( attacks. First order attacks) 176.47 667.67 P
-0.1 (may be carried out with relati) 72 654.67 P
-0.1 (v) 201.05 654.67 P
-0.1 (e ease; the code cap-) 206.39 654.67 P
-0.26 (italizes on o) 72 641.67 P
-0.26 (v) 124.49 641.67 P
-0.26 (ert loopholes, it is simple to write, and) 129.82 641.67 P
0.12 (it may cause damage quickly) 72 628.67 P
0.12 (. Second order attacks) 199.48 628.67 P
2.35 (emplo) 72 615.67 P
2.35 (y more subtle attacks, are dif) 99.39 615.67 P
2.35 (\336cult to pre-) 237.93 615.67 P
(v) 72 602.67 T
(ent, and may be harder to implement.) 77.33 602.67 T
2.87 (In Ja) 72 583.67 P
2.87 (v) 95.73 583.67 P
2.87 (a, \336rst order denial of service attacks on) 100.95 583.67 P
1.85 (ph) 72 570.67 P
1.85 (ysical resources come in tw) 82.94 570.67 P
1.85 (o v) 211.8 570.67 P
1.85 (arieties. Firstly) 227.12 570.67 P
1.85 (,) 294.25 570.67 P
0.56 (attacks may be made on the system heap. There is) 72 557.67 P
2.26 (only one heap that is shared by all classes, and) 72 544.67 P
1.83 (there is no w) 72 531.67 P
1.83 (ay to limit a particular thread from) 133.89 531.67 P
-0.2 (taking all of it. Secondly) 72 518.67 P
-0.2 (, a JVM which implements) 178.95 518.67 P
-0.28 (a thread scheduling algorithm that reschedules only) 72 505.67 P
0.75 (when threads block \050such as FIFO\051 w) 72 492.67 P
0.75 (ould allo) 241.38 492.67 P
0.75 (w a) 280.67 492.67 P
0.46 (thread to enter an endless loop, thus den) 72 479.67 P
0.46 (ying other) 251.63 479.67 P
(threads CPU c) 72 466.67 T
(ycles.) 135.38 466.67 T
0.5 (The most important second order denial of service) 72 447.67 P
2.01 (attack the Con) 72 434.67 P
2.01 (v) 139.12 434.67 P
2.01 (ersant project is e) 144.45 434.67 P
2.01 (xamining is on) 227.59 434.67 P
2.82 (g) 72 421.67 P
2.82 (arbage collection. It should not be possible to) 77.44 421.67 P
3.13 (trick the g) 72 408.67 P
3.13 (arbage collector into running so fre-) 122.81 408.67 P
0.14 (quently that it tak) 72 395.67 P
0.14 (es time from other threads. Addi-) 149.63 395.67 P
1.21 (tionally) 72 382.67 P
1.21 (, it should not be possible to fragment the) 104.9 382.67 P
-0.06 (heap to the de) 72 369.67 P
-0.06 (gree that allocations can no longer be) 133.04 369.67 P
3.2 (made before the g) 72 356.67 P
3.2 (arbage collector can perform) 160.65 356.67 P
(compaction.) 72 343.67 T
1.67 (Clearly) 72 324.67 P
1.67 (, in solving these problems, changes must) 103.67 324.67 P
0.46 (be made some) 72 311.67 P
0.46 (where in the Ja) 135.58 311.67 P
0.46 (v) 203.02 311.67 P
0.46 (a system. The prob-) 208.25 311.67 P
2.68 (lem is choosing whether to modify the runtime) 72 298.67 P
0.77 (JVM, or the semantics of the Ja) 72 285.67 P
0.77 (v) 215.4 285.67 P
0.77 (a language itself.) 220.62 285.67 P
1.06 (Modifying the language w) 72 272.67 P
1.06 (ould con\337ict with Con-) 191.46 272.67 P
0.9 (v) 72 259.67 P
0.9 (ersant\325) 77.33 259.67 P
0.9 (s goals of interoperability - we w) 106.66 259.67 P
0.9 (ould lik) 257.4 259.67 P
0.9 (e) 292.12 259.67 P
1.11 (the de) 72 246.67 P
1.11 (v) 99.41 246.67 P
1.11 (eloper to write in pure Ja) 104.74 246.67 P
1.11 (v) 219.73 246.67 P
1.11 (a \050or some con-) 224.95 246.67 P
2.47 (trolled subset\051, rather then a Con) 72 233.67 P
2.47 (v) 228.13 233.67 P
2.47 (ersant-speci\336c) 233.46 233.67 P
0.72 (deri) 72 220.67 P
0.72 (v) 88.83 220.67 P
0.72 (ation. On the other hand, we e) 94.06 220.67 P
0.72 (xpect the JVM) 230.79 220.67 P
0.8 (to be specialized softw) 72 207.67 P
0.8 (are that inte) 174.81 207.67 P
0.8 (grates into spe-) 228.18 207.67 P
1.81 (cial-purpose machines such as routers. Our JVM) 72 194.67 P
-0.06 (already must be modi\336ed to meet the constraints of) 72 181.67 P
0.21 (an embedded system. Thus, Con) 72 168.67 P
0.21 (v) 215.37 168.67 P
0.21 (ersant\325) 220.71 168.67 P
0.21 (s solutions) 250.03 168.67 P
0.2 (to the denial of service attack in) 72 155.67 P
0.2 (v) 213.28 155.67 P
0.2 (olv) 218.56 155.67 P
0.2 (e changing the) 232.45 155.67 P
(JVM b) 72 142.67 T
(ut not changing the language.) 102.03 142.67 T
(W) 72 123.67 T
(e are e) 81.5 123.67 T
(xperimenting with three approaches:) 110.04 123.67 T
1 F
6.68 (One pr) 72 104.67 P
6.68 (ocess per JVM:) 111.79 104.67 P
0 F
6.68 ( In this \322wrapper\323) 197.85 104.67 P
1.51 (approach we instantiate a ne) 72 91.67 P
1.51 (w process to run the) 202.38 91.67 P
-0.02 (JVM for each principal. Thus, the underlying oper-) 72 78.67 P
1.68 (ating system, rather then the JVM, enforces ho) 315 712.67 P
1.68 (w) 532.06 712.67 P
0.26 (often a gi) 315 699.67 P
0.26 (v) 356.79 699.67 P
0.26 (en principal is scheduled and ho) 362.13 699.67 P
0.26 (w much) 504.61 699.67 P
4.09 (memory it recei) 315 686.67 P
4.09 (v) 392.56 686.67 P
4.09 (es. This solution is attracti) 397.89 686.67 P
4.09 (v) 529.78 686.67 P
4.09 (e) 535.12 686.67 P
2.07 (because it necessitates fe) 315 673.67 P
2.07 (w changes to the JVM.) 430.6 673.67 P
1.44 (Ho) 315 660.67 P
1.44 (we) 328.17 660.67 P
1.44 (v) 340.72 660.67 P
1.44 (er) 346.05 660.67 P
1.44 (, it may not scale well as the number of) 354.16 660.67 P
2.66 (principals and thus the b) 315 647.67 P
2.66 (urden on the k) 432.95 647.67 P
2.66 (ernel in) 504.05 647.67 P
-0.13 (managing man) 315 634.67 P
-0.13 (y processes gro) 379.79 634.67 P
-0.13 (ws. Another problem) 447.07 634.67 P
1.16 (is that we w) 315 621.67 P
1.16 (ould lik) 371.23 621.67 P
1.16 (e principals to share data and) 406.2 621.67 P
0.26 (code amongst each other) 315 608.67 P
0.26 (, and the IPC mechanisms) 424.39 608.67 P
3.03 (necessary to enable such communication across) 315 595.67 P
(processes w) 315 582.67 T
(ould hinder performance.) 367.73 582.67 T
1 F
-0.08 (One thr) 315 563.67 P
-0.08 (ead per JVM:) 351.69 563.67 P
0 F
-0.08 ( The scalability problems of) 416.9 563.67 P
0.34 (the wrapper approach may be mitig) 315 550.67 P
0.34 (ated if for each) 472.72 550.67 P
0.18 (principal, a ne) 315 537.67 P
0.18 (w JVM w) 377.71 537.67 P
0.18 (as to be instantiated within) 421.34 537.67 P
5.68 (the same process. Presumably k) 315 524.67 P
5.68 (ernel threads) 477.82 524.67 P
0.8 (w) 315 511.67 P
0.8 (ould be associated with each instantiations. This) 322.83 511.67 P
-0.16 (solution poses some complicated technical hurdles:) 315 498.67 P
1.8 (the JVM w) 315 485.67 P
1.8 (ould ha) 367.37 485.67 P
1.8 (v) 401.64 485.67 P
1.8 (e to be modi\336ed such that it) 406.98 485.67 P
-0.1 (could distinguish the dif) 315 472.67 P
-0.1 (ferent incarnations running) 421.06 472.67 P
0 (within a single process, and a means w) 315 459.67 P
0 (ould ha) 485.99 459.67 P
0 (v) 518.47 459.67 P
0 (e to) 523.8 459.67 P
0.39 (be found to enforce memory limits on a per thread) 315 446.67 P
(basis.) 315 433.67 T
1 F
2.26 (Dir) 315 414.67 P
2.26 (ect JVM Modi\336cations:) 330.69 414.67 P
0 F
2.26 ( Re) 445.8 414.67 P
2.26 (writing the JVM) 462.76 414.67 P
0.42 (such that it partitions ph) 315 401.67 P
0.42 (ysical resources f) 422.96 401.67 P
0.42 (airly in a) 500.05 401.67 P
1.22 (multi-user en) 315 388.67 P
1.22 (vironment poses a special challenge.) 374.13 388.67 P
2.78 (One can modify it such that k) 315 375.67 P
2.78 (ernel threads are) 461.74 375.67 P
3.23 (used, thereby ensuring the host OS\325) 315 362.67 P
3.23 (s scheduler) 487.59 362.67 P
0.97 (f) 315 349.67 P
0.97 (airly shares the CPU. F) 318.55 349.67 P
0.97 (airly sharing the heap, on) 424.62 349.67 P
0.16 (the other hand, is more complicated. Ja) 315 336.67 P
0.16 (v) 488.03 336.67 P
0.16 (a de\336nes a) 493.25 336.67 P
0.33 (\322null classloader\323 which loads system classes \050e.g.) 315 323.67 P
5.49 (ja) 315 310.67 P
5.49 (v) 322.72 310.67 P
5.49 (a.lang.* and ja) 327.95 310.67 P
5.49 (v) 402.85 310.67 P
5.49 (a.util.*\051. These classes are) 408.08 310.67 P
-0.01 (shared by all entities within the JVM. If one w) 315 297.67 P
-0.01 (as to) 519.53 297.67 P
-0.05 (di) 315 284.67 P
-0.05 (vide the heap such that principals each had a sep-) 323.28 284.67 P
0.81 (arate partition, access w) 315 271.67 P
0.81 (ould still ha) 423 271.67 P
0.81 (v) 476.34 271.67 P
0.81 (e to be made) 481.68 271.67 P
0.28 (someho) 315 258.67 P
0.28 (w to a \322system heap\323 in which information) 348.95 258.67 P
0.82 (pertaining to the null classloader w) 315 245.67 P
0.82 (ould be stored.) 473.28 245.67 P
1.15 (This shared heap w) 315 232.67 P
1.15 (ould ha) 403.57 232.67 P
1.15 (v) 437.18 232.67 P
1.15 (e to be impervious to) 442.52 232.67 P
(denial of service attacks.) 315 219.67 T
2.39 (Currently) 315 200.67 P
2.39 (, the Con) 356.45 200.67 P
2.39 (v) 400.82 200.67 P
2.39 (ersant project is in the early) 406.15 200.67 P
0.44 (stages of de) 315 187.67 P
0.44 (v) 367.53 187.67 P
0.44 (eloping interf) 372.87 187.67 P
0.44 (aces and b) 432.77 187.67 P
0.44 (uilding a pro-) 479.24 187.67 P
0.22 (totype JVM with resource control to CPU/memory) 315 174.67 P
0.97 (for testing. W) 315 161.67 P
0.97 (e are using the public domain Kaf) 376.85 161.67 P
0.97 (fe) 531.45 161.67 P
1.93 (JVM for these purposes and are modifying it so) 315 148.67 P
0.49 (that it will be resistant to denial of service attacks.) 315 135.67 P
-0.04 (W) 315 122.67 P
-0.04 (e e) 324.5 122.67 P
-0.04 (xpect to complete this \336rst stage of the project) 336.82 122.67 P
(by Spring 98.) 315 109.67 T
0 1 1 0 1 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "9" 9
%%Page: "10" 10
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
[ 0.5 0.5 0 0.5 0 0 0.5]
[ 0.5 0 0 0.5 0 0.5 0.5]
[ 0.5 0 0.5 0.5 0 0.5 0]
[ 0 0.5 0 0.5 0.5 0 0.5]
[ 0 0.5 0.5 0.5 0.5 0 0]
[ 0 0 0.5 0.5 0.5 0.5 0]
[ 0 0 0 0.5 0.5 0.5 0.5]
[ 0 0 0 0.25 0.75 0.75 0.75]
 15 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 11 Q
0 X
0 0 0 1 0 0 0 K
(10) 300.5 37.34 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(6.3  Related Work) 72 712.67 T
1.85 (ANTS) 72 693.67 P
0 F
1.85 ( is a an en) 101.34 693.67 P
1.85 (vironment for processing acti) 152.28 693.67 P
1.85 (v) 286.78 693.67 P
1.85 (e) 292.12 693.67 P
0.47 (code that is written in pure Ja) 72 680.67 P
0.47 (v) 204.13 680.67 P
0.47 (a [50]. As in MO) 209.36 680.67 P
0.47 (A,) 286.31 680.67 P
0.06 (this limits resource control to logical resources and) 72 667.67 P
0.16 (bases most of its security on Ja) 72 654.67 P
0.16 (v) 208.99 654.67 P
0.16 (a abstractions \050e.g.) 214.21 654.67 P
0 (namespace partitioning\051.) 72 641.67 P
1 F
0 (J) 183.51 641.67 P
0 (oust) 188.84 641.67 P
0 F
0 (, in contrast, is writ-) 208.4 641.67 P
0.89 (ten using a custom JVM b) 72 628.67 P
0.89 (uilt on top of the Scout) 191.41 628.67 P
1.09 (operating system [22]. Although the custom JVM) 72 615.67 P
1.11 (enables ph) 72 602.67 P
1.11 (ysical resource control in principal, the) 119.79 602.67 P
0.34 (emphasis in the Joust literature is f) 72 589.67 P
0.34 (ast-path optimi-) 226.69 589.67 P
1.43 (zations rather then security) 72 576.67 P
1.43 (.) 194.42 576.67 P
1 F
1.43 (PLAN) 201.35 576.67 P
0 F
1.43 ( is a program-) 231.3 576.67 P
5.95 (ming language designed e) 72 563.67 P
5.95 (xplicitly for acti) 204.26 563.67 P
5.95 (v) 286.78 563.67 P
5.95 (e) 292.12 563.67 P
0.41 (netw) 72 550.67 P
0.41 (orks [20]. Resource consumption is implicitly) 93.27 550.67 P
1.05 (controlled because the language\325) 72 537.67 P
1.05 (s rules force pro-) 219.02 537.67 P
3.46 (grams to be written in a w) 72 524.67 P
3.46 (ay that consume a) 207.51 524.67 P
0.19 (bounded amount of ph) 72 511.67 P
0.19 (ysical resources, the amount) 171.8 511.67 P
0.45 (of which is statically v) 72 498.67 P
0.45 (eri\336able. T) 173.25 498.67 P
0.45 (o enable this, the) 221.09 498.67 P
1.46 (rules are v) 72 485.67 P
1.46 (ery strict \050e.g. no loops are allo) 120.57 485.67 P
1.46 (wed in) 265.91 485.67 P
1.22 (programs\051. APIs to the host en) 72 472.67 P
1.22 (vironment are pro-) 212.09 472.67 P
2.97 (vided to perform actions not e) 72 459.67 P
2.97 (xpressible in the) 218.96 459.67 P
-0.28 (PLAN language; the APIs are guarded using access) 72 446.67 P
(control lists.) 72 433.67 T
1 12 Q
(7.  Agent Ensembles) 72 410 T
0 11 Q
1.65 (Agent Ensembles is the project proposal pursued) 72 390.67 P
2.22 (together by The Open Group Research Institute,) 72 377.67 P
-0.14 (the Uni) 72 364.67 P
-0.14 (v) 104.28 364.67 P
-0.14 (ersity of Illinois at Urbana Champaign and) 109.62 364.67 P
(the Stanford Uni) 72 351.67 T
(v) 145.05 351.67 T
(ersity) 150.39 351.67 T
(.) 174.11 351.67 T
0.11 (In the future, applications will require an increased) 72 332.67 P
1.67 (ability to acquire, \336lter) 72 319.67 P
1.67 (, process, and disseminate) 177.41 319.67 P
3.92 (lar) 72 306.67 P
3.92 (ge amounts of rapidly changing information) 83.41 306.67 P
2.36 (from distrib) 72 293.67 P
2.36 (uted and mobile sources in a timely) 126.39 293.67 P
3.23 (manner) 72 280.67 P
3.23 (. The speed with which the information) 104.38 280.67 P
2.17 (changes creates challenges for systems requiring) 72 267.67 P
1.2 (continuous human interv) 72 254.67 P
1.2 (ention. Lar) 183.62 254.67 P
1.2 (ge scale agent) 232.9 254.67 P
0 (systems pro) 72 241.67 P
0 (vide a promising ne) 124.08 241.67 P
0 (w technology capa-) 210.87 241.67 P
(ble of addressing these problems.) 72 228.67 T
1.95 (T) 72 209.67 P
1.95 (w) 77.84 209.67 P
1.95 (o e) 85.67 209.67 P
1.95 (xamples of agent system applications suit-) 100.59 209.67 P
2.33 (able for lar) 72 196.67 P
2.33 (ge-scale applications include national) 124.72 196.67 P
0.34 (telecommunication systems and in) 72 183.67 P
0.34 (v) 224.43 183.67 P
0.34 (entory tracking) 229.76 183.67 P
2.03 (and accounting systems. Agents can be used for) 72 170.67 P
1.79 (coordinating maintenance, routing, and upgrades.) 72 157.67 P
0.54 (In in) 72 144.67 P
0.54 (v) 92.57 144.67 P
0.54 (entory tracking systems, agents may be used) 97.91 144.67 P
-0.13 (to represent acti) 72 131.67 P
-0.13 (v) 141.73 131.67 P
-0.13 (e, time-stamped documents which) 147.06 131.67 P
(periodically update themselv) 72 118.67 T
(es.) 198.93 118.67 T
3.69 (While agent solutions naturally model each of) 72 99.67 P
0.61 (these applications, an important research objecti) 72 86.67 P
0.61 (v) 286.78 86.67 P
0.61 (e) 292.12 86.67 P
1.81 (is ensuring that the agent architecture itself does) 315 712.67 P
2.37 (not become a b) 315 699.67 P
2.37 (urden or otherwise endanger the) 388.79 699.67 P
1.08 (system. A k) 315 686.67 P
1.08 (e) 369.31 686.67 P
1.08 (y challenge for agent systems lies in) 374.02 686.67 P
0.94 (addressing the risk that agent ensembles may col-) 315 673.67 P
2.82 (lecti) 315 660.67 P
2.82 (v) 333.67 660.67 P
2.82 (ely e) 339 660.67 P
2.82 (xhibit chaotic beha) 362.73 660.67 P
2.82 (vior by consuming) 451.86 660.67 P
0.03 (resources and interfering with other on-going com-) 315 647.67 P
0.53 (putations. In the real w) 315 634.67 P
0.53 (orld, there is anecdotal e) 418.12 634.67 P
0.53 (vi-) 527.78 634.67 P
4.12 (dence which suggests that wholly autonomous) 315 621.67 P
-0.07 (agents may collecti) 315 608.67 P
-0.07 (v) 399.52 608.67 P
-0.07 (ely cause chaotic beha) 404.86 608.67 P
-0.07 (vior that) 503.1 608.67 P
(is catastrophic.) 315 595.67 T
-0.24 (Some years ago, the NYSE plunged as autonomous) 315 576.67 P
1.19 (trading programs acted independently in response) 315 563.67 P
1.67 (to \336nancial e) 315 550.67 P
1.67 (v) 374.9 550.67 P
1.67 (ents, triggering a destabilization of) 380.24 550.67 P
-0.18 (the mark) 315 537.67 P
-0.18 (et. In lar) 353.51 537.67 P
-0.18 (ge po) 389.92 537.67 P
-0.18 (wer outages, a domino ef) 413.6 537.67 P
-0.18 (fect) 523.51 537.67 P
0.78 (of system collapses often tak) 315 524.67 P
0.78 (es place as neighbor-) 445.11 524.67 P
1.69 (ing systems attempted to tak) 315 511.67 P
1.69 (e o) 446.93 511.67 P
1.69 (v) 461.59 511.67 P
1.69 (er from a f) 466.93 511.67 P
1.69 (ailed) 518.62 511.67 P
(system.) 315 498.67 T
1 F
(7.1  Security) 315 477.67 T
0 F
1.65 (Our agent platform will authenticate instances of) 315 458.67 P
1.9 (agents based on their o) 315 445.67 P
1.9 (wner) 423.15 445.67 P
1.9 (. W) 444.53 445.67 P
1.9 (e will e) 461.44 445.67 P
1.9 (xtend the) 497.46 445.67 P
6.76 (mechanisms for specifying authorization and) 315 432.67 P
1.66 (access control information. The e) 315 419.67 P
1.66 (xtended mecha-) 468.39 419.67 P
0.46 (nisms will co) 315 406.67 P
0.46 (v) 374.43 406.67 P
0.46 (er both access to protected informa-) 379.77 406.67 P
0.85 (tion resources \050such as \336les and database records\051) 315 393.67 P
1.07 (and resource consumption and management \050such) 315 380.67 P
(as CPU and memory utilization\051.) 315 367.67 T
0.22 (W) 315 348.67 P
0.22 (e plan to pro) 324.5 348.67 P
0.22 (vide support to specify security pol-) 380.31 348.67 P
0.56 (icies about agent ensembles as a whole, as well as) 315 335.67 P
2.43 (for each of the agents within an ensemble. The) 315 322.67 P
0.26 (group of agents in an ensemble will be treated as a) 315 309.67 P
3.26 (security group, and access to resources can be) 315 296.67 P
1.11 (speci\336ed at the granularity of either the ensemble) 315 283.67 P
1.11 (or the agent identity \050its o) 315 270.67 P
1.11 (wner\051. Since ensembles) 433.62 270.67 P
1.74 (are w) 315 257.67 P
1.74 (orking on behalf of their o) 340.75 257.67 P
1.74 (wners, ensemble) 464.95 257.67 P
1.02 (security policies may be restricted by the security) 315 244.67 P
5.16 (policies concerning their o) 315 231.67 P
5.16 (wners. In addition,) 447.2 231.67 P
1.04 (ensemble policies and agent identity policies may) 315 218.67 P
1.91 (con\337ict. F) 315 205.67 P
1.91 (or e) 361.36 205.67 P
1.91 (xample, a contractor\325) 379.91 205.67 P
1.91 (s agent might) 476.9 205.67 P
1.06 (not ha) 315 192.67 P
1.06 (v) 343.03 192.67 P
1.06 (e access to resources needed to satisfy the) 348.37 192.67 P
(o) 315 179.67 T
(v) 320.33 179.67 T
(erall goal of a manager\325) 325.67 179.67 T
(s ensemble.) 430.14 179.67 T
1.04 (In some cases, the ensemble may be able to reas-) 315 160.67 P
0.25 (sign tasks so that the needed resources are accessi-) 315 147.67 P
4.6 (ble by an appropriate agent. Ho) 315 134.67 P
4.6 (we) 476.4 134.67 P
4.6 (v) 488.95 134.67 P
4.6 (er) 494.29 134.67 P
4.6 (, if the) 502.39 134.67 P
0.82 (ensemble is allo) 315 121.67 P
0.82 (wed to include agents that are not) 387.24 121.67 P
3.82 (identically trustw) 315 108.67 P
3.82 (orth) 395.4 108.67 P
3.82 (y there is the problem of) 413.07 108.67 P
1.45 (agents leaking information to other agents within) 315 95.67 P
0.62 (the ensemble. W) 315 82.67 P
0.62 (e will e) 388.99 82.67 P
0.62 (xplore what policies mak) 422.45 82.67 P
0.62 (e) 535.12 82.67 P
0 1 1 0 1 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "10" 10
%%Page: "11" 11
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
[ 0.5 0.5 0 0.5 0 0 0.5]
[ 0.5 0 0 0.5 0 0.5 0.5]
[ 0.5 0 0.5 0.5 0 0.5 0]
[ 0 0.5 0 0.5 0.5 0 0.5]
[ 0 0.5 0.5 0.5 0.5 0 0]
[ 0 0 0.5 0.5 0.5 0.5 0]
[ 0 0 0 0.5 0.5 0.5 0.5]
[ 0 0 0 0.25 0.75 0.75 0.75]
 15 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 11 Q
0 X
0 0 0 1 0 0 0 K
(11) 300.5 37.34 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3.59 (sense for forming ensembles from agents with) 72 712.67 P
4.85 (potentially disparate security characteristics. If) 72 699.67 P
-0.17 (ensembles of agents with di) 72 686.67 P
-0.17 (v) 193.25 686.67 P
-0.17 (erse security attrib) 198.59 686.67 P
-0.17 (utes) 279.28 686.67 P
0.22 (are allo) 72 673.67 P
0.22 (wed, we will e) 104.63 673.67 P
0.22 (xplore ho) 169.29 673.67 P
0.22 (w the security poli-) 211.09 673.67 P
5.05 (cies about the tw) 72 660.67 P
5.05 (o should be combined and) 161.29 660.67 P
2.31 (whether the ensemble needs to be responsi) 72 647.67 P
2.31 (v) 273.16 647.67 P
2.31 (e to) 278.5 647.67 P
(this combination.) 72 634.67 T
0.24 (The combination of agent and ensemble policies is) 72 615.67 P
1.93 (further complicated by the resource management) 72 602.67 P
0.43 (aspects of those policies. If an agent can belong to) 72 589.67 P
3.31 (only one ensemble, strate) 72 576.67 P
3.31 (gies such as allo) 193.56 576.67 P
3.31 (wing) 275 576.67 P
0.17 (either the intersection or the union of the resources) 72 563.67 P
1.54 (allotted to the agent and its ensemble might pro-) 72 550.67 P
1.29 (vide the appropriate resource polic) 72 537.67 P
1.29 (y combination.) 229.71 537.67 P
0.85 (If an agent can span ensembles, a strate) 72 524.67 P
0.85 (gy will be) 251.3 524.67 P
1.82 (pro) 72 511.67 P
1.82 (vided to select the polic) 86.5 511.67 P
1.82 (y when an agent acts) 198.09 511.67 P
1.14 (with its o) 72 498.67 P
1.14 (wn identity as well as when it acts with) 114.96 498.67 P
(the identity of a particular ensemble.) 72 485.67 T
0.82 (Agent ensembles will share coordination informa-) 72 466.67 P
1.58 (tion, such as meeting places and times and other) 72 453.67 P
4.66 (synchronization state. If the agents within an) 72 440.67 P
1.15 (ensemble are considered identical from a security) 72 427.67 P
2.12 (polic) 72 414.67 P
2.12 (y perspecti) 93.83 414.67 P
2.12 (v) 143.64 414.67 P
2.12 (e, there is no danger in sharing) 148.97 414.67 P
0.38 (this information. Ho) 72 401.67 P
0.38 (we) 162.01 401.67 P
0.38 (v) 174.56 401.67 P
0.38 (er) 179.9 401.67 P
0.38 (, we allo) 188 401.67 P
0.38 (w heterogeneity) 226.06 401.67 P
1.41 (of security attrib) 72 388.67 P
1.41 (utes as we ha) 147.32 388.67 P
1.41 (v) 209.68 388.67 P
1.41 (e pre) 215.02 388.67 P
1.41 (viously men-) 237.84 388.67 P
2.01 (tioned, coordination information may need to be) 72 375.67 P
0.13 (controlled. In the most ob) 72 362.67 P
0.13 (vious case, kno) 185.7 362.67 P
0.13 (wledge of) 253.19 362.67 P
2.19 (a coordination state that is kno) 72 349.67 P
2.19 (wn to depend on) 217.41 349.67 P
1.64 (some protected piece of information read by one) 72 336.67 P
0.55 (agent in an ensemble may leak that information to) 72 323.67 P
5.72 (another agent within the ensemble. W) 72 310.67 P
5.72 (e will) 266.53 310.67 P
2.57 (e) 72 297.67 P
2.57 (xplore policies and mechanisms for controlling) 76.72 297.67 P
1.32 (heterogeneous agent access to coordination infor-) 72 284.67 P
0.72 (mation within an ensemble, based on each agent\325) 72 271.67 P
0.72 (s) 292.72 271.67 P
(security characteristics.) 72 258.67 T
1 F
(7.2  Resource Management) 72 237.67 T
0 F
0.78 (The agent system we plan to de) 72 218.67 P
0.78 (v) 215.11 218.67 P
0.78 (elop will pro) 220.44 218.67 P
0.78 (vide) 278.06 218.67 P
7.29 (dif) 72 205.67 P
7.29 (ferent mechanisms for controlling chaotic) 83.95 205.67 P
0.67 (beha) 72 192.67 P
0.67 (vior) 92.55 192.67 P
0.67 (. First, we will support authentication and) 109.66 192.67 P
1.71 (authorization of agents. Second, the e) 72 179.67 P
1.71 (x) 245.66 179.67 P
1.71 (ecution of) 250.99 179.67 P
1.16 (agent ensembles will be containable \320 i.e., agents) 72 166.67 P
1.78 (in the ensemble may be denied access to certain) 72 153.67 P
3.18 (resources or applications. Third, the amount of) 72 140.67 P
0.5 (resources and the rate at which the) 72 127.67 P
0.5 (y are consumed) 226.96 127.67 P
5.68 (by agents in ensembles will be constrained.) 72 114.67 P
1.06 (Finally) 72 101.67 P
1.06 (, b) 102.46 101.67 P
1.06 (uilding on our pre) 114.3 101.67 P
1.06 (vious w) 196.33 101.67 P
1.06 (ork in the the-) 231.81 101.67 P
4.24 (ory of actors, we will pro) 72 88.67 P
4.24 (vide a well-de\336ned) 204.21 88.67 P
2.82 (semantics which may be emplo) 315 712.67 P
2.82 (yed in v) 464.26 712.67 P
2.82 (erifying) 505.17 712.67 P
1.68 (mobile agent code at entry boundaries and allo) 315 699.67 P
1.68 (w) 532.06 699.67 P
2.33 (analysis of beha) 315 686.67 P
2.33 (viors e) 390.31 686.67 P
2.33 (xhibited by agent ensem-) 422.11 686.67 P
0.17 (bles. The four k) 315 673.67 P
0.17 (e) 385.05 673.67 P
0.17 (y requirements that our agent sys-) 389.77 673.67 P
4.38 (tem architecture will satisfy are: system le) 315 660.67 P
4.38 (v) 526.72 660.67 P
4.38 (el) 532.06 660.67 P
2.73 (safety) 315 647.67 P
2.73 (, non-interference of indi) 340.55 647.67 P
2.73 (vidual ensembles,) 458.44 647.67 P
2.7 (customization for a) 315 634.67 P
2.7 (v) 405.11 634.67 P
2.7 (ailability) 410.34 634.67 P
2.7 (, and customization) 448.74 634.67 P
(for resource management.) 315 621.67 T
0.62 (W) 315 602.67 P
0.62 (e plan to b) 324.5 602.67 P
0.62 (uild an architecture for agent systems) 372.26 602.67 P
2.06 (in which appropriate mechanisms can be associ-) 315 589.67 P
2.63 (ated with groups of agents on a per) 315 576.67 P
2.63 (-application) 487.45 576.67 P
2.35 (basis. Experimentation with the resource control) 315 563.67 P
0.03 (mechanisms for scalable agent ensembles will help) 315 550.67 P
5.6 (characterize agent ensembles in which either) 315 537.67 P
1.17 (a) 315 524.67 P
1.17 (v) 319.66 524.67 P
1.17 (oidance of system-wide chaos is guaranteed, or) 324.94 524.67 P
1.3 (its ef) 315 511.67 P
1.3 (fect can ef) 337.72 511.67 P
1.3 (fecti) 385.85 511.67 P
1.3 (v) 405.12 511.67 P
1.3 (ely be compensated for) 410.46 511.67 P
1.3 (. The) 516.09 511.67 P
0.34 (performance monitoring mechanisms will enable a) 315 498.67 P
0.02 (study of the ef) 315 485.67 P
0.02 (fect of frequently occurring transient) 378.02 485.67 P
3.07 (outages rather than the rare b) 315 472.67 P
3.07 (ut complete cata-) 458.11 472.67 P
(strophic e) 315 459.67 T
(v) 357.8 459.67 T
(ents.) 363.14 459.67 T
0.82 (W) 315 440.67 P
0.82 (e plan to de) 324.5 440.67 P
0.82 (vise a beha) 377.7 440.67 P
0.82 (vior model for classes of) 427.98 440.67 P
0.66 (agents \050e.g. computation-bound, memory-consum-) 315 427.67 P
0.01 (ing, netw) 315 414.67 P
0.01 (ork-consuming, migratory) 355.84 414.67 P
0.01 (, etc.\051. Utilizing) 470.62 414.67 P
0.46 (the agent beha) 315 401.67 P
0.46 (vior models we plan to de) 379.24 401.67 P
0.46 (vise agent) 495.24 401.67 P
1.78 (ensembles beha) 315 388.67 P
1.78 (vior models, and policies capable) 385.91 388.67 P
6.55 (of containing agent ensemble beha) 315 375.67 P
6.55 (vior) 493.73 375.67 P
6.55 (. The) 510.84 375.67 P
4.83 (di) 315 362.67 P
4.83 (v) 323.28 362.67 P
4.83 (erse range of application requirements and) 328.62 362.67 P
3.24 (beha) 315 349.67 P
3.24 (viors present a strong case for the con\336g-) 335.55 349.67 P
2.68 (urability of both the underlying system and the) 315 336.67 P
5.8 (applications. V) 315 323.67 P
5.8 (arying QoS le) 386.18 323.67 P
5.8 (v) 458.61 323.67 P
5.8 (els, security or) 463.94 323.67 P
3.86 (resource requirements, and v) 315 310.67 P
3.86 (ersioning are well) 453.47 310.67 P
(suited for utilizing component-based computing.) 315 297.67 T
1 F
(7.3  Related Work) 315 276.67 T
0 F
1.29 (T) 315 257.67 P
1.29 (w) 320.84 257.67 P
1.29 (o distrib) 328.67 257.67 P
1.29 (uted object-based systems on the W) 366.11 257.67 P
1.29 (eb) 529.62 257.67 P
1.08 (e) 315 244.67 P
1.08 (xplore similar issues as lar) 319.72 244.67 P
1.08 (ge scale agent ensem-) 440.55 244.67 P
-0.08 (bles.) 315 231.67 P
1 F
-0.08 (Legion) 338.14 231.67 P
0 F
-0.08 ( is an object-based, meta-systems soft-) 370.54 231.67 P
1.71 (w) 315 218.67 P
1.71 (are project, de) 322.83 218.67 P
1.71 (v) 388.59 218.67 P
1.71 (eloped at Uni) 393.92 218.67 P
1.71 (v) 456.34 218.67 P
1.71 (ersity of V) 461.67 218.67 P
1.71 (ir) 511.48 218.67 P
1.71 (ginia) 518 218.67 P
5.91 ([19] that pro) 315 205.67 P
5.91 (vides a single, coherent virtual) 381.64 205.67 P
2.33 (machine and that addresses issues of scalability) 315 192.67 P
2.33 (,) 537.25 192.67 P
4 (f) 315 179.67 P
4 (ault tolerance, site autonomicity) 318.55 179.67 P
4 (, and security) 471 179.67 P
4 (.) 537.25 179.67 P
1 F
-0.14 (Globe) 315 166.67 P
0 F
-0.14 ( is an object-based wide-area distrib) 343.12 166.67 P
-0.14 (uted sys-) 500.73 166.67 P
1.75 (tem constructed as a middle) 315 153.67 P
1.75 (w) 444.53 153.67 P
1.75 (are layer on top of) 452.36 153.67 P
0.49 (e) 315 140.67 P
0.49 (xisting netw) 319.72 140.67 P
0.49 (orks and operating systems [24]. It is) 374.19 140.67 P
0.35 (based on the concept of a distrib) 315 127.67 P
0.35 (uted shared object) 459.26 127.67 P
1.06 (whose state can be ph) 315 114.67 P
1.06 (ysically distrib) 415.12 114.67 P
1.06 (uted and that) 481.05 114.67 P
0.56 (encapsulates implementation aspects \050communica-) 315 101.67 P
(tion, replication, and migration\051.) 315 88.67 T
0 1 1 0 1 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "11" 11
%%Page: "12" 12
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
[ 0.5 0.5 0 0.5 0 0 0.5]
[ 0.5 0 0 0.5 0 0.5 0.5]
[ 0.5 0 0.5 0.5 0 0.5 0]
[ 0 0.5 0 0.5 0.5 0 0.5]
[ 0 0.5 0.5 0.5 0.5 0 0]
[ 0 0 0.5 0.5 0.5 0.5 0]
[ 0 0 0 0.5 0.5 0.5 0.5]
[ 0 0 0 0.25 0.75 0.75 0.75]
 15 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 11 Q
0 X
0 0 0 1 0 0 0 K
(12) 300.5 37.34 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 12 Q
(8.  Summary) 72 712 T
0 11 Q
1.9 (In this paper we presented security and resource) 72 692.67 P
0.58 (management as implemented in six dif) 72 679.67 P
0.58 (ferent types) 244.8 679.67 P
-0.19 (of mobile object systems. F) 72 666.67 P
-0.19 (or each system type, for) 192.38 666.67 P
0.68 (the purpose of clarity) 72 653.67 P
0.68 (, we selected a single project) 167.12 653.67 P
0.63 (as a representati) 72 640.67 P
0.63 (v) 143.84 640.67 P
0.63 (e and noted related project w) 149.18 640.67 P
0.63 (ork.) 279.59 640.67 P
-0.23 (It is important to note that the wide range of system) 72 627.67 P
0.14 (types pro) 72 614.67 P
0.14 (vides a broader base from which we dra) 112.61 614.67 P
0.14 (w) 289.06 614.67 P
4.64 (our conclusions. W) 72 601.67 P
4.64 (e be) 165.64 601.67 P
4.64 (g) 188.13 601.67 P
4.64 (an with a theoretical) 193.57 601.67 P
3.08 (model, then described task migration, a mobile) 72 588.67 P
1.7 (agent system, a standard speci\336cation for mobile) 72 575.67 P
-0.12 (agent systems, an acti) 72 562.67 P
-0.12 (v) 167.3 562.67 P
-0.12 (e netw) 172.64 562.67 P
-0.12 (orks project, and con-) 201.43 562.67 P
0.5 (cluded with a proposal for a lar) 72 549.67 P
0.5 (ge scale ensembles) 212.29 549.67 P
0.41 (dealing with chaotic beha) 72 536.67 P
0.41 (vior) 185.74 536.67 P
0.41 (. F) 202.85 536.67 P
0.41 (or each of the sys-) 214.72 536.67 P
2.02 (tems presented we ha) 72 523.67 P
2.02 (v) 172.23 523.67 P
2.02 (e analyzed ho) 177.56 523.67 P
2.02 (w the) 241.8 523.67 P
2.02 (y sup-) 267.79 523.67 P
4.62 (ported security and resource management and) 72 510.67 P
0.26 (brie\337y mentioned related w) 72 497.67 P
0.26 (ork for each of the sys-) 193.97 497.67 P
0.81 (tem types. Our \336ndings are tersely summarized in) 72 484.67 P
0.52 (T) 72 471.67 P
0.52 (ables 1-3. A more detailed comparison is be) 77.84 471.67 P
0.52 (yond) 275 471.67 P
(the scope of this paper) 72 458.67 T
(.) 170.37 458.67 T
1.96 (W) 72 439.67 P
1.96 (e were able to dra) 81.5 439.67 P
1.96 (w some general conclusions) 167.38 439.67 P
2.81 (based on the described systems. In the \336eld of) 72 426.67 P
(security we ha) 72 413.67 T
(v) 135.32 413.67 T
(e made the follo) 140.65 413.67 T
(wing observ) 211.56 413.67 T
(ations:) 265.36 413.67 T
1 14 Q
0.14 (\245) 72 393.67 S
0 11 Q
11.73 0.11 (Early theoretical systems and systems) 79.2 393.67 B
3.1 0.11 (emplo) 79.2 381.67 B
3.1 0.11 (ying task migration were generally not) 107.14 381.67 B
5.42 0.11 (focused on security) 79.2 369.67 B
5.42 0.11 (, though a fe) 176.95 369.67 B
5.42 0.11 (w special) 249.35 369.67 B
0.15 0.11 (dedicated e) 79.2 357.67 B
0.15 0.11 (xceptions e) 130.18 357.67 B
0.15 0.11 (xist [42, 43]. Instead the) 181.17 357.67 B
0.15 0.11 (y) 291.39 357.67 B
3.09 0.11 (concentrated on resource management issues.) 79.2 345.67 B
3.42 0.11 (Early middle) 79.2 333.67 B
3.42 0.11 (w) 140.79 333.67 B
3.42 0.11 (are systems addressed security) 148.74 333.67 B
1.03 0.11 (thoroughly) 79.2 321.67 B
1.03 0.11 (, ho) 127.86 321.67 B
1.03 0.11 (we) 145.56 321.67 B
1.03 0.11 (v) 158.33 321.67 B
1.03 0.11 (er resource management w) 163.78 321.67 B
1.03 0.11 (as) 287.62 321.67 B
2.74 0.11 (some) 79.2 309.67 B
2.74 0.11 (what ne) 102.59 309.67 B
2.74 0.11 (glected. This appears due to the) 140.45 309.67 B
0.5 0.11 (dependenc) 79.2 297.67 B
0.5 0.11 (y on the underlying operating system) 127.06 297.67 B
0.51 0.11 (for resource management, consequently there is) 79.2 285.67 B
0.55 0.11 (less possibility for control from the middle) 79.2 273.67 B
0.55 0.11 (w) 275.3 273.67 B
0.55 0.11 (are) 283.24 273.67 B
3.42 0.11 (system. Recent middle) 79.2 261.67 B
3.42 0.11 (w) 187.99 261.67 B
3.42 0.11 (are systems, such as) 195.94 261.67 B
1.52 0.11 (acti) 79.2 249.67 B
1.52 0.11 (v) 95.25 249.67 B
1.52 0.11 (e netw) 100.69 249.67 B
1.52 0.11 (orks, mobile agents and lar) 131.78 249.67 B
1.52 0.11 (ge scale) 259.48 249.67 B
1.19 0.11 (agent ensembles, are focusing on both security) 79.2 237.67 B
0.57 0.11 (and resource management.) 79.2 225.67 B
1 14 Q
0.14 (\245) 72 206.67 S
0 11 Q
4.35 0.11 (The client serv) 79.2 206.67 B
4.35 0.11 (er security model, where an) 154.76 206.67 B
12.66 0.11 (intermediate serv) 79.2 194.67 B
12.66 0.11 (er is responsible for) 169.63 194.67 B
1.95 0.11 (authentication and authorization chores, is not) 79.2 182.67 B
5.98 0.11 (an acceptable solution for mobile objects.) 79.2 170.67 B
2.68 0.11 (Capability-based authentication is much more) 79.2 158.67 B
4.72 0.11 (suitable for mobile agent systems, such as) 79.2 146.67 B
1.01 0.11 (Mach ports or MASIF\325) 79.2 134.67 B
1.01 0.11 (s use of certi\336cates as a) 185.55 134.67 B
3.82 0.11 (part of the name. Capabilities appear to be) 79.2 122.67 B
0.75 0.11 (appropriate for mobile objects because the) 79.2 110.67 B
0.75 0.11 (y are) 274.02 110.67 B
5.44 0.11 (easily transferred and the) 79.2 98.67 B
5.44 0.11 (y reduce residual) 209.1 98.67 B
0.57 0.11 (dependencies.) 79.2 86.67 B
1 14 Q
0.14 (\245) 315 712.67 S
0 11 Q
2.15 0.11 (Naming is closely related to authentication in) 322.2 712.67 B
7.02 0.11 (all the systems described. Some perform) 322.2 700.67 B
2.81 0.11 (authentication e) 322.2 688.67 B
2.81 0.11 (xclusi) 396.57 688.67 B
2.81 0.11 (v) 423.23 688.67 B
2.81 0.11 (ely based on the name) 428.68 688.67 B
3.2 0.11 (String \050without introducing cryptograph) 322.2 676.67 B
3.2 0.11 (y\051. In) 512.32 676.67 B
0.15 0.11 (others, names are protected by operating system) 322.2 664.67 B
3.71 0.11 (guarantees \050e.g. in Mach\051, whereas in some) 322.2 652.67 B
1.87 0.11 (others the mobile object identity consists of a) 322.2 640.67 B
0.57 0.11 (combination of the authenticator and the name.) 322.2 628.67 B
1 14 Q
0.14 (\245) 315 609.67 S
0 11 Q
9.2 0.11 (Authorization policies for mobile object) 322.2 609.67 B
1.42 0.11 (systems are still in an emer) 322.2 597.67 B
1.42 0.11 (gent state. In older) 451.66 597.67 B
5.4 0.11 (systems, the) 322.2 585.67 B
5.4 0.11 (y were not needed within the) 382.53 585.67 B
3.79 0.11 (con\336nes of a single trust domain. W) 322.2 573.67 B
3.79 0.11 (ith the) 507.52 573.67 B
0.49 0.11 (requirement for lar) 322.2 561.67 B
0.49 0.11 (ger systems, e.g. middle) 408.15 561.67 B
0.49 0.11 (w) 518.3 561.67 B
0.49 0.11 (are) 526.24 561.67 B
6.39 0.11 (systems such as CORB) 322.2 549.67 B
6.39 0.11 (A and later Ja) 445.54 549.67 B
6.39 0.11 (v) 526.81 549.67 B
6.39 0.11 (a,) 532.15 549.67 B
2.91 0.11 (authorization is being introduced into mobile) 322.2 537.67 B
1.91 0.11 (object systems. In lar) 322.2 525.67 B
1.91 0.11 (ge scale ensembles, the) 423.65 525.67 B
1.91 0.11 (y) 534.39 525.67 B
5.76 0.11 (become a necessity) 322.2 513.67 B
5.76 0.11 (. As e) 419.91 513.67 B
5.76 0.11 (videnced by the) 457.17 513.67 B
0.98 0.11 (e) 322.2 501.67 B
0.98 0.11 (v) 326.92 501.67 B
0.98 0.11 (olution of MASIF or ne) 332.31 501.67 B
0.98 0.11 (w security models of) 442.89 501.67 B
2.19 0.11 (the JVM, these authorization policies are still) 322.2 489.67 B
0.11 (e) 322.2 477.67 S
0.11 (v) 326.92 477.67 S
0.11 (olving.) 332.31 477.67 S
1 14 Q
0.14 (\245) 315 458.67 S
0 11 Q
8.2 0.11 (None of the implemented systems ha) 322.2 458.67 B
8.2 0.11 (v) 529.56 458.67 B
8.2 0.11 (e) 535.01 458.67 B
2.61 0.11 (addressed the issue of protecting the arri) 322.2 446.67 B
2.61 0.11 (ving) 520 446.67 B
3.46 0.11 (object from the object system being visited.) 322.2 434.67 B
0.76 0.11 (This has not been an issue in the past, ho) 322.2 422.67 B
0.76 0.11 (we) 513.02 422.67 B
0.76 0.11 (v) 525.79 422.67 B
0.76 0.11 (er) 531.23 422.67 B
0.57 0.11 (it is appearing to currently dra) 322.2 410.67 B
0.57 0.11 (w interest [41].) 461.3 410.67 B
4.56 (The follo) 315 392.67 P
4.56 (wing general observ) 359.92 392.67 P
4.56 (ations ha) 457.95 392.67 P
4.56 (v) 501.7 392.67 P
4.56 (e been) 507.04 392.67 P
(dra) 315 379.67 T
(wn on the topic of resource management.) 328.88 379.67 T
1 14 Q
0.14 (\245) 315 359.67 S
0 11 Q
12.2 0.11 (P) 322.2 359.67 B
12.2 0.11 (ast systems ha) 328.26 359.67 B
12.2 0.11 (v) 416.93 359.67 B
12.2 0.11 (e addressed resource) 422.38 359.67 B
1.28 0.11 (management issues in an ad hoc manner) 322.2 347.67 B
1.28 0.11 (. Only) 510.56 347.67 B
2.35 0.11 (recently) 322.2 335.67 B
2.35 0.11 (, with the adv) 357.8 335.67 B
2.35 0.11 (ent of QoS and support) 426.12 335.67 B
0.71 0.11 (for countering denial of service attacks has this) 322.2 323.67 B
2.15 0.11 (subject g) 322.2 311.67 B
2.15 0.11 (ained substantial attention. Currently) 364.69 311.67 B
2.15 0.11 (,) 537.14 311.67 B
1.34 0.11 (issues are handled subject to the limitations of) 322.2 299.67 B
3.36 0.11 (the underlying en) 322.2 287.67 B
3.36 0.11 (vironment. F) 407.33 287.67 B
3.36 0.11 (or e) 468.68 287.67 B
3.36 0.11 (xample, in) 489.1 287.67 B
3.04 0.11 (Mach, modi\336cations to the microk) 322.2 275.67 B
3.04 0.11 (ernel were) 489.64 275.67 B
0.71 0.11 (required to pro\336le it for remote communication) 322.2 263.67 B
6.68 0.11 (and paging, while in Con) 322.2 251.67 B
6.68 0.11 (v) 462.03 251.67 B
6.68 0.11 (ersant, it w) 467.47 251.67 B
6.68 0.11 (as) 530.62 251.67 B
0.57 0.11 (necessary to mak) 322.2 239.67 B
0.57 0.11 (e modi\336cations to the JVM.) 400.75 239.67 B
1 14 Q
0.14 (\245) 315 220.67 S
0 11 Q
1.3 0.11 (All of the system types surv) 322.2 220.67 B
1.3 0.11 (e) 454.73 220.67 B
1.3 0.11 (yed of) 459.56 220.67 B
1.3 0.11 (fered some) 489.04 220.67 B
3.07 0.11 (combination of logical and ph) 322.2 208.67 B
3.07 0.11 (ysical resource) 469.61 208.67 B
8.76 0.11 (management. Earlier systems were more) 322.2 196.67 B
0.23 0.11 (weighted to) 322.2 184.67 B
0.23 0.11 (w) 375 184.67 B
0.23 0.11 (ards logical resource management,) 382.94 184.67 B
4.2 0.11 (which is easier to achie) 322.2 172.67 B
4.2 0.11 (v) 444.01 172.67 B
4.2 0.11 (e b) 449.45 172.67 B
4.2 0.11 (ut often has a) 466.9 172.67 B
3.81 0.11 (limited ef) 322.2 160.67 B
3.81 0.11 (fect upon the system performance.) 369.31 160.67 B
4.97 0.11 (Ph) 322.2 148.67 B
4.97 0.11 (ysical resource management is harder to) 333.98 148.67 B
1.04 0.11 (manage and often requires modi\336cations to the) 322.2 136.67 B
16.71 0.11 (underlying en) 322.2 124.67 B
16.71 0.11 (vironment. Recent QoS) 400.7 124.67 B
4.36 0.11 (requirements ha) 322.2 112.67 B
4.36 0.11 (v) 398.55 112.67 B
4.36 0.11 (e caused ne) 404 112.67 B
4.36 0.11 (wer systems to) 464.36 112.67 B
0.21 0.11 (address these issues, as can be seen by the w) 322.2 100.67 B
0.21 0.11 (ork) 525.01 100.67 B
0 1 1 0 1 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "12" 12
%%Page: "13" 13
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
[ 0.5 0.5 0 0.5 0 0 0.5]
[ 0.5 0 0 0.5 0 0.5 0.5]
[ 0.5 0 0.5 0.5 0 0.5 0]
[ 0 0.5 0 0.5 0.5 0 0.5]
[ 0 0.5 0.5 0.5 0.5 0 0]
[ 0 0 0.5 0.5 0.5 0.5 0]
[ 0 0 0 0.5 0.5 0.5 0.5]
[ 0 0 0 0.25 0.75 0.75 0.75]
 15 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 11 Q
0 X
0 0 0 1 0 0 0 K
(13) 300.5 37.34 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3.98 0.11 (being done in Con) 79.2 712.67 B
3.98 0.11 (v) 173.54 712.67 B
3.98 0.11 (ersant and proposed for) 178.98 712.67 B
0.57 0.11 (agent ensembles.) 79.2 700.67 B
1 14 Q
0.14 (\245) 72 681.67 S
0 11 Q
9.52 0.11 (Recent systems pro) 79.2 681.67 B
9.52 0.11 (vide some form of) 185.6 681.67 B
0.99 0.11 (ne) 79.2 669.67 B
0.99 0.11 (gotiation between the arri) 89.64 669.67 B
0.99 0.11 (ving object and the) 207.92 669.67 B
4.43 0.11 (recei) 79.2 657.67 B
4.43 0.11 (ving object system. This ne) 100.85 657.67 B
4.43 0.11 (gotiation is) 242.05 657.67 B
0.3 0.11 (utilized in order to v) 79.2 645.67 B
0.3 0.11 (erify whether the necessary) 172.48 645.67 B
3.31 0.11 (resources are a) 79.2 633.67 B
3.31 0.11 (v) 152.59 633.67 B
3.31 0.11 (ailable at the system and to) 157.93 633.67 B
3.98 0.11 (guarantee that the agent will not ab) 79.2 621.67 B
3.98 0.11 (use the) 261.4 621.67 B
5.36 0.11 (system\325) 79.2 609.67 B
5.36 0.11 (s a) 113.59 609.67 B
5.36 0.11 (v) 130.97 609.67 B
5.36 0.11 (ailable resources. Ne) 136.31 609.67 B
5.36 0.11 (gotiation is) 241.11 609.67 B
0.51 0.11 (typically asymmetric in that a host is pri) 79.2 597.67 B
0.51 0.11 (vile) 264.01 597.67 B
0.51 0.11 (ged) 280.79 597.67 B
0.57 0.11 (o) 79.2 585.67 B
0.57 0.11 (v) 84.64 585.67 B
0.57 0.11 (er the arri) 90.09 585.67 B
0.57 0.11 (ving object.) 134.93 585.67 B
-0.18 (Security and resource management will continue to) 72 567.67 P
3.23 (be important aspects of mobile object systems.) 72 554.67 P
-0.01 (Both are crucial for the safety and protection of the) 72 541.67 P
3.33 (mobile objects as well as the hosting systems.) 72 528.67 P
1.69 (Security and resource management are addressed) 72 515.67 P
0.64 (at v) 72 502.67 P
0.64 (arious le) 88.56 502.67 P
0.64 (v) 126.51 502.67 P
0.64 (els of the system and this is lik) 131.84 502.67 P
0.64 (ely to) 271.61 502.67 P
2.73 (continue to be the case in future systems. QoS) 72 489.67 P
0.22 (requirements supporting the secure and guaranteed) 72 476.67 P
0.26 (beha) 72 463.67 P
0.26 (vior of applications will require the utilization) 92.55 463.67 P
0.91 (of a combination of techniques at the netw) 72 450.67 P
0.91 (orking,) 265.53 450.67 P
0.65 (operating system, middle) 72 437.67 P
0.65 (w) 183.94 437.67 P
0.65 (are and application le) 191.77 437.67 P
0.65 (v-) 287.84 437.67 P
0.08 (els. This paper presents a fe) 72 424.67 P
0.08 (w e) 194.33 424.67 P
0.08 (xamples illustrating) 209.83 424.67 P
0.75 (ho) 72 411.67 P
0.75 (w security and resource management ha) 82.72 411.67 P
0.75 (v) 262.51 411.67 P
0.75 (e been) 267.85 411.67 P
4.01 (addressed at these dif) 72 398.67 P
4.01 (ferent system le) 178.15 398.67 P
4.01 (v) 255.54 398.67 P
4.01 (els. W) 260.88 398.67 P
4.01 (e) 292.12 398.67 P
2.13 (belie) 72 385.67 P
2.13 (v) 93.11 385.67 P
2.13 (e that e) 98.44 385.67 P
2.13 (xciting de) 134.3 385.67 P
2.13 (v) 179.85 385.67 P
2.13 (elopments a) 185.18 385.67 P
2.13 (w) 240 385.67 P
2.13 (ait us, and) 247.83 385.67 P
1.38 (ha) 72 372.67 P
1.38 (ving a historical perspecti) 82.16 372.67 P
1.38 (v) 199.37 372.67 P
1.38 (e going forw) 204.7 372.67 P
1.38 (ard can) 263.56 372.67 P
(be useful.) 72 359.67 T
1 12 Q
(Acknowledgments) 72 338 T
0 11 Q
4.68 (The follo) 72 318.67 P
4.68 (wing people deserv) 117.04 318.67 P
4.68 (e credit for their) 211.78 318.67 P
0.67 (in) 72 305.67 P
0.67 (v) 80.12 305.67 P
0.67 (olv) 85.4 305.67 P
0.67 (ement: Carl He) 99.29 305.67 P
0.67 (witt did the original w) 167.57 305.67 P
0.67 (ork on) 267.92 305.67 P
0.03 (Actors. T) 72 292.67 P
0.03 (ask migration on top of Mach w) 112.69 292.67 P
0.03 (as signi\336-) 253.89 292.67 P
-0.16 (cantly supported by the w) 72 279.67 P
-0.16 (ork by Joe Barrera. OMG) 184.91 279.67 P
0.16 (MASIF is the result of a lar) 72 266.67 P
0.16 (ge team of people from) 193.73 266.67 P
3.03 (Crystaliz, General Magic, GMD, IBM and The) 72 253.67 P
0.94 (Open Group. A signi\336cant part of MO) 72 240.67 P
0.94 (A has been) 246.24 240.67 P
4.03 (implemented by Bill LaF) 72 227.67 P
4.03 (or) 194.85 227.67 P
4.03 (ge. Con) 203.81 227.67 P
4.03 (v) 241.62 227.67 P
4.03 (ersant w) 246.96 227.67 P
4.03 (as) 287.84 227.67 P
0.01 (originally proposed and lead by Franco T) 72 214.67 P
0.01 (ra) 253.75 214.67 P
0.01 (v) 262.08 214.67 P
0.01 (ostino.) 267.36 214.67 P
0.01 (Security w) 72 201.67 P
0.01 (ork in the agent ensembles proposal w) 119.25 201.67 P
0.01 (as) 287.84 201.67 P
(contrib) 72 188.67 T
(uted by Mary Ellen Zurk) 102.94 188.67 T
(o.) 212.21 188.67 T
1 12 Q
(References) 72 167 T
0 9 Q
([1]) 72 153 T
0.17 (A) 90 153 P
0.17 (CTS Domain 5,) 96.14 153 P
2 F
0.17 (Ag) 155.66 153 P
0.17 (ent Cluster Baseline Document,) 165.57 153 P
0 F
0.17 ( edi-) 280.58 153 P
(tor T) 90 143 T
(. Magedanz, January 1998.) 107.08 143 T
([2]) 72 131 T
0.54 (Agha, G., \322) 90 131 P
0.54 (Actors: A Model of Concurrent Computation) 131.59 131 P
2.7 (in Distrib) 90 121 P
2.7 (uted Systems\323,) 126.78 121 P
2 F
2.7 (Arti\336cial Intellig) 188.44 121 P
2.7 (ence Series,) 251.31 121 P
0 F
(MIT Press, Cambridge, Mass., 1986.) 90 111 T
([3]) 72 99 T
0.25 (Agha, G., Jamali, N., \322Concurrent Programming for Dis-) 90 99 P
2.47 (trib) 90 89 P
2.47 (uted Arti\336cial Intelligence\323, in) 102.32 89 P
2 F
2.47 (\322Distrib) 224.95 89 P
2.47 (uted Arti\336-) 255.28 89 P
3.1 (cial Intellig) 333 714 P
3.1 (ence\323) 377.76 714 P
0 F
3.1 (, chapter 12, editor Gerhard W) 399.25 714 P
3.1 (eiss,) 524.25 714 P
(MIT Press, to appear in 1998.) 333 704 T
([4]) 315 692 T
0.73 (Agha, G., S. Fr\232lund, W) 333 692 P
0.73 (. Kim, R. P) 423.33 692 P
0.73 (anw) 465.89 692 P
0.73 (ar) 480.8 692 P
0.73 (, A. P) 487.43 692 P
0.73 (atterson,) 509.26 692 P
2.13 (and D. Sturman, \322) 333 682 P
2.13 (Abstraction and Modularity Mecha-) 403.9 682 P
0.68 (nisms for Concurrent Computing\323,) 333 672 P
2 F
0.68 (P) 463.48 672 P
0.68 (ar) 468.26 672 P
0.68 (allel and Distrib-) 476.13 672 P
1.05 (uted T) 333 662 P
1.05 (ec) 355.98 662 P
1.05 (hnolo) 363.83 662 P
1.05 (gy) 384.24 662 P
0 F
1.05 (, IEEE Computer Society) 392.16 662 P
1.05 (, v) 486.22 662 P
1.05 (ol. 1, no. 2,) 496.09 662 P
(pp 3-15, May 1993) 333 652 T
([5]) 315 640 T
3.82 (Amaral, P) 333 640 P
3.82 (., Jacqemot, C., Jensen, P) 372.31 640 P
3.82 (., Lea, R., and) 478.07 640 P
0.72 (Miro) 333 630 P
0.72 (wski, A., \322T) 350.77 630 P
0.72 (ransparent Object Migration in COOL-) 396.14 630 P
(2\323,) 333 620 T
2 F
(Pr) 346 620 T
(oceedings of the ECOOP) 354.59 620 T
0 F
(, June 1992.) 444.33 620 T
([6]) 315 608 T
(ANIMA Project, http://www) 333 608 T
(.gr) 436.16 608 T
(.opengroup.or) 445.41 608 T
(g/anima/.) 495.74 608 T
([7]) 315 596 T
2.06 (Balf) 333 596 P
2.06 (anz D., Gong L., \322Experience with Secure Multi-) 348.41 596 P
1.9 (Processing in Ja) 333 586 P
1.9 (v) 394.62 586 P
1.9 (a\323,) 398.89 586 P
2 F
1.9 ( T) 409.13 586 P
1.9 (ec) 417.46 586 P
1.9 (hnical Report 560-97,) 425.32 586 P
0 F
1.9 ( Depart-) 508.36 586 P
(ment of Computer Science, Princeton Uni) 333 576 T
(v) 483.76 576 T
(ersity) 488.12 576 T
(.) 507.54 576 T
([8]) 315 564 T
3.33 (Baumann, J., Hohl, F) 333 564 P
3.33 (., Rothermel, K., Strasser) 419.03 564 P
3.33 (, M.,) 519.66 564 P
0.88 (\322Mole, Concepts of a Mobile Agent System\323, to appear) 333 554 P
0.47 (in the WWW Journal, Special Issue on Applications and) 333 544 P
(T) 333 534 T
(echniques of W) 337.87 534 T
(eb Agents,) 393.63 534 T
2 F
(Baltzer Science Publisher) 434.38 534 T
(s) 527.27 534 T
0 F
(.) 530.78 534 T
([9]) 315 522 T
0.81 (Bernadat, P) 333 522 P
0.81 (., Feene) 374.8 522 P
0.81 (y) 403.72 522 P
0.81 (. L., Lambright, D., and T) 407.64 522 P
0.81 (ra) 504.61 522 P
0.81 (v) 511.42 522 P
0.81 (ostino,) 515.74 522 P
2.38 (F) 333 512 P
2.38 (., \322Ja) 337.28 512 P
2.38 (v) 357.73 512 P
2.38 (a Sandbox) 362.01 512 P
2.38 (es meet Service Guarantees: Secure) 402 512 P
0.24 (P) 333 502 P
0.24 (artitioning of CPU and Memory\323, The Open Group Re-) 337.87 502 P
(search Institute T) 333 492 T
(echnical Report.) 394.86 492 T
([10]) 315 480 T
(http://www) 333 480 T
(.opengroup.or) 373.42 480 T
(g/RI/OS/CONVER-) 423.75 480 T
(SANT/tog_only/ja) 333 470 T
(v) 399.83 470 T
(a_tr2.fm.ps) 404.1 470 T
([11]) 315 458 T
1.44 (Bhattacharjee S, Calv) 333 458 P
1.44 (ert K, Ze) 413.98 458 P
1.44 (gura E.,) 448.95 458 P
1.44 (\323On Acti) 478 458 P
1.44 (v) 511.96 458 P
1.44 (e Net-) 516.32 458 P
0.42 (w) 333 448 P
0.42 (orking and Congestion\323. T) 339.41 448 P
0.42 (echnical Report GIT) 436.02 448 P
0.42 (-CC-96-) 510 448 P
(02, Colle) 333 438 T
(ge of Computing, Geor) 365.87 438 T
(gia T) 449.2 438 T
(ech.) 467.32 438 T
([12]) 315 426 T
(Con) 333 426 T
(v) 347.64 426 T
(ersant:) 352.01 426 T
(http://www) 378.25 426 T
(.camb) 418.67 426 T
(.opengroup.or) 440.05 426 T
(g/RI/PubProj) 490.38 426 T
(Pgs/CONVERSANT) 333 416 T
(.htm.) 408.34 416 T
([13]) 315 404 T
(CORB) 333 404 T
(A Security Services Speci\336cation.) 357.19 404 T
([14]) 315 392 T
(Common Secure Interoperability Speci\336cation \050CSI\051.) 333 392 T
([15]) 315 380 T
0.74 (Eager) 333 380 P
0.74 (, D., Lazo) 353.63 380 P
0.74 (wska, E., and Zahorjan, J. \050May 1986b\051.) 390.61 380 P
3.39 (Dynamic Load Sharing in Homogeneous Distrib) 333 370 P
3.39 (uted) 524.5 370 P
2.04 (Systems.) 333 360 P
2 F
2.04 (IEEE T) 369.55 360 P
2.04 (r) 397.84 360 P
2.04 (ansactions on Softwar) 401.21 360 P
2.04 (e Engineering) 484.97 360 P
0 F
2.04 (,) 537.75 360 P
(12\0505\051:662\320675.) 333 350 T
([16]) 315 338 T
(FIP) 333 338 T
(A http://drogo.cselt.it/\336pa/.) 345.18 338 T
([17]) 315 326 T
1.21 (Fiuczynski M, Bershad B, \322) 333 326 P
1.21 (An Extensible Protocol Ar-) 437.62 326 P
0.73 (chitecture for Application-Speci\336c Netw) 333 316 P
0.73 (orking\323, in Pro-) 481.8 316 P
1.2 (ceedings of the 1996 W) 333 306 P
1.2 (inter USENIX Conference, San) 422.92 306 P
(Die) 333 296 T
(go, CA., pp. 55-64, January 1996.) 345.86 296 T
([18]) 315 284 T
1.8 (Grasshopper) 333 284 P
1.8 (, http://www) 378.13 284 P
1.8 (.ikv) 424.85 284 P
1.8 (.de/products/grasshopper) 438.01 284 P
1.8 (.ht-) 527.75 284 P
(ml.) 333 274 T
([19]) 315 262 T
1.99 (Grimsha) 333 262 P
1.99 (w) 363.86 262 P
1.99 (, A., et al. \322The Le) 369.77 262 P
1.99 (gion V) 446.81 262 P
1.99 (ision of a W) 473.01 262 P
1.99 (orld-) 522.5 262 P
2.92 (wide V) 333 252 P
2.92 (irtual Computer\323, CA) 361.62 252 P
2.92 (CM, v) 445.34 252 P
2.92 (ol 40, no 1, Jan.) 471.08 252 P
(1997, pp 39-45.) 333 242 T
([20]) 315 230 T
0.93 (Gunter C, Hicks M, Kakkar P) 333 230 P
0.93 (, Moore J, Nettles S, Carl) 443.87 230 P
0.72 (J. \322PLAN: Language-Based Safety and Security for Ac-) 333 220 P
0.62 (ti) 333 210 P
0.62 (v) 337.78 210 P
0.62 (e Netw) 342.14 210 P
0.62 (orks\323. SOSP 97. October 5-8, 1997, Saint Ma-) 368.42 210 P
(lo, France.) 333 200 T
([21]) 315 188 T
0.47 (Hagimont, D., Ismail, L., \322) 333 188 P
0.47 (A Protection Scheme for Mo-) 431.14 188 P
6.7 (bile Agents on Ja) 333 178 P
6.7 (v) 415.18 178 P
6.7 (a\323, Proceedings of the 3rd) 419.45 178 P
2.13 (A) 333 168 P
2.13 (CM/IEEE International Conference on Mobile Com-) 339.14 168 P
(puting and Netw) 333 158 T
(orking, September 1997.) 392.9 158 T
([22]) 315 146 T
1.97 (Hartman J, Peterson L, Ba) 333 146 P
1.97 (vier A, Bigot P) 435.67 146 P
1.97 (, Bridges P) 495.07 146 P
1.97 (,) 537.75 146 P
1.24 (Montz B, Piltz R, Proebsting T) 333 136 P
1.24 (, \322Joust: A Platform for) 450.3 136 P
3.45 (Communication-Oriented Liquid Softw) 333 126 P
3.45 (are\323. TR97-16.) 482.31 126 P
(Dept. of Computer Science, The Uni) 333 116 T
(v) 465 116 T
(ersity of Arizona.) 469.37 116 T
([23]) 315 104 T
1.73 (He) 333 104 P
1.73 (witt, C., \322V) 343.27 104 P
1.73 (ie) 387.95 104 P
1.73 (wing Control Structures as P) 394.22 104 P
1.73 (atterns of) 504.52 104 P
3.18 (P) 333 94 P
3.18 (assing Messages\323, Journal of Arti\336cial Intelligence,) 337.87 94 P
(v) 333 84 T
(ol 8-3, June 1977, pp 323-364.) 337.32 84 T
0 1 1 0 1 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "13" 13
%%Page: "14" 14
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
[ 0.5 0.5 0 0.5 0 0 0.5]
[ 0.5 0 0 0.5 0 0.5 0.5]
[ 0.5 0 0.5 0.5 0 0.5 0]
[ 0 0.5 0 0.5 0.5 0 0.5]
[ 0 0.5 0.5 0.5 0.5 0 0]
[ 0 0 0.5 0.5 0.5 0.5 0]
[ 0 0 0 0.5 0.5 0.5 0.5]
[ 0 0 0 0.25 0.75 0.75 0.75]
 15 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 11 Q
0 X
0 0 0 1 0 0 0 K
(14) 300.5 37.34 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 9 Q
([24]) 72 714 T
2.07 (Homb) 90 714 P
2.07 (ur) 112.32 714 P
2.07 (g, P) 119.65 714 P
2.07 (., v) 134.73 714 P
2.07 (an Steen, M., and T) 147.82 714 P
2.07 (anenbaum A., \322) 226.1 714 P
2.07 (An) 286 714 P
3.64 (Architecture for A W) 90 704 P
3.64 (ide Area Distrib) 177.78 704 P
3.64 (uted System\323,) 242.86 704 P
0.41 (Proc. of the Se) 90 694 P
0.41 (v) 143.99 694 P
0.41 (enth SIGOPS European W) 148.35 694 P
0.41 (orkshop, Con-) 245.09 694 P
(nemara Ireland, September 1986, pp 75-82.) 90 684 T
([25]) 72 672 T
0.97 (Hw) 90 672 P
0.97 (ang, K., Croft, W) 102.91 672 P
0.97 (., W) 167.71 672 P
0.97 (ah, B., Briggs, F) 183.21 672 P
0.97 (., Simons, W) 244.64 672 P
0.97 (.,) 292.5 672 P
0.66 (and Coates, C. \050April 1982\051. A Unix-Based Local Com-) 90 662 P
2.16 (puter Netw) 90 652 P
2.16 (ork with Load Balancing.) 132.31 652 P
2 F
2.16 (IEEE Computer) 235.2 652 P
0 F
2.16 (,) 294.75 652 P
(15:55\32066.) 90 642 T
([26]) 72 630 T
0.39 (Johansen, D., v) 90 630 P
0.39 (an Renesse, R., and Schneider) 145.79 630 P
0.39 (, F) 255.71 630 P
0.39 (., \322Oper-) 264.88 630 P
2.12 (ating system support for mobile agents\323,) 90 620 P
2 F
2.12 (Pr) 250.93 620 P
2.12 (oc. of the) 259.52 620 P
(5th. IEEE HO) 90 610 T
(T) 140.38 610 T
(OS W) 145.22 610 T
(orkshop) 165.14 610 T
0 F
(, 4th-5th May) 194.14 610 T
(, 1995.) 242.8 610 T
([27]) 72 598 T
0.9 (Jul, E., Le) 90 598 P
0.9 (vy) 128.32 598 P
0.9 (, H., Hutchinson, N., and Black, A., \322Fine-) 136.73 598 P
1.06 (Grained Mobility in the Emerald System\323,) 90 588 P
2 F
1.06 (A) 251.59 588 P
1.06 (CM T) 256.82 588 P
1.06 (r) 278.14 588 P
1.06 (ans-) 281.5 588 P
2.05 (actions on Computer Systems) 90 578 P
0 F
2.05 (, 6\0501\051:109\320133, February) 202.41 578 P
(1988.) 90 568 T
([28]) 72 556 T
2.64 (K) 90 556 P
2.64 (otz, D., et al., \322Mobile Agents for Mobile Internet) 96.18 556 P
1.11 (Computing\323, July 1997, IEEE Internet Computing, v 1,) 90 546 P
(no 4, pp 58-67.) 90 536 T
([29]) 72 524 T
0.44 (Krue) 90 524 P
0.44 (ger) 107.86 524 P
0.44 (, P) 118.99 524 P
0.44 (., Cha) 127.93 524 P
0.44 (wla, R., \322The Stealth Distrib) 149.49 524 P
0.44 (uted Sched-) 253.82 524 P
1.22 (uler\323, Proceedings of the 11th International Conference) 90 514 P
0.99 (on Distrib) 90 504 P
0.99 (uted Computing Systems, June 1991, pp 336-) 127.06 504 P
(343.) 90 494 T
([30]) 72 482 T
0.63 (Maes, P) 90 482 P
0.63 (., \322Computational Re\337ection\323, Ph.D. Thesis, Vr-) 118.63 482 P
0.69 (ije Uni) 90 472 P
0.69 (v) 115.21 472 P
0.69 (ersity) 119.58 472 P
0.69 (, Arti\336cial Intelligence Laboratory) 138.99 472 P
0.69 (, T) 264.45 472 P
0.69 (echni-) 274.51 472 P
(cal Report, no 87-2, 1987.) 90 462 T
([31]) 72 450 T
0.48 (Milojicic, D., Agha, G., Chauhan, D., Guday) 90 450 P
0.48 (, S., Jamali,) 254.03 450 P
3.45 (N., \322Composing Agent-Based Applications and Sys-) 90 440 P
(tems\323, T) 90 430 T
(OG Research Institute T) 120.83 430 T
(echnical Report.) 207.94 430 T
([32]) 72 418 T
0.23 (Milojicic, D., Breugst, M., Busse, I., Campbell, J., Co) 90 418 P
0.23 (v) 285.73 418 P
0.23 (a-) 290.01 418 P
1.87 (ci, S., Friedman, B., K) 90 408 P
1.87 (osaka, K., Lange, D., Ono, K.,) 178.17 408 P
0.84 (Oshima, M., Tham, C., V) 90 398 P
0.84 (irdhagrisw) 184.83 398 P
0.84 (aran, S., and White,) 223.24 398 P
0.32 (J., \322MASIF The OMG Mobile Agent System Interopera-) 90 388 P
(bility F) 90 378 T
(acility\323, to be presented at the MA) 116.13 378 T
(\32598.) 239.35 378 T
([33]) 72 366 T
0.99 (Milojicic, D., Douglis, F) 90 366 P
0.99 (., P) 181.02 366 P
0.99 (ainda) 193.63 366 P
0.99 (v) 212.95 366 P
0.99 (eine, Y) 217.31 366 P
0.99 (., Wheeler) 243.14 366 P
0.99 (, R.,) 281 366 P
1.65 (Zhou, S., \322Process Migration Surv) 90 356 P
1.65 (e) 220.7 356 P
1.65 (y\323, submitted for a) 224.56 356 P
(journal publication, currently under re) 90 346 T
(vision.) 227 346 T
([34]) 72 334 T
1.59 (Milojicic, D., LaF) 90 334 P
1.59 (or) 158.3 334 P
1.59 (ge, W) 165.64 334 P
1.59 (., Chauhan, D., \322Mobile Ob-) 187.89 334 P
1.59 (jects and Agents, Design, Implementation and Lessons) 90 324 P
4.45 (Learned\323, to be presented at the F) 90 314 P
4.45 (ourth USENIX) 238.3 314 P
1.12 (COO) 90 304 P
1.12 (TS Conference, April 27-30, 1998, Santa Fe, Ne) 108.64 304 P
1.12 (w) 290.5 304 P
(Me) 90 294 T
(xico.) 101.86 294 T
([35]) 72 282 T
0.7 (Milojicic, D., Zint, W) 90 282 P
0.7 (., Dangel, A., Giese, P) 170.03 282 P
0.7 (., \322T) 252.32 282 P
0.7 (ask Mi-) 268.55 282 P
1.3 (gration on the top of the Mach Microk) 90 272 P
1.3 (ernel\323, Proceed-) 237.23 272 P
2.54 (ings of the USENIX Mach Symposium, pp 273-290,) 90 262 P
(Santa Fe, USA, April 1993.) 90 252 T
([36]) 72 240 T
1.23 (Milojicic, D., Douglis, F) 90 240 P
1.23 (., and Wheeler) 181.74 240 P
1.23 (, R., In prepara-) 236.32 240 P
1.35 (tion, \322Mobility - An Edited Collection\323, Addison W) 90 230 P
1.35 (es-) 286.51 230 P
6.51 (le) 90 220 P
6.51 (y; and \322Mobility in Distrib) 96.36 220 P
6.51 (uted Systems\323, by) 218.73 220 P
1.52 (Milojicic, D., Douglis, F) 90 210 P
1.52 (., Wheeler) 182.6 210 P
1.52 (, R., and Guday) 221 210 P
1.52 (, S.,) 281.47 210 P
0.82 (Addison W) 90 200 P
0.82 (esle) 131.35 200 P
0.82 (y) 145.21 200 P
0.82 (, to appear in W) 149.12 200 P
0.82 (inter 1998 and Summer) 209.79 200 P
(1999 respecti) 90 190 T
(v) 138.01 190 T
(ely) 142.38 190 T
(.) 152.79 190 T
([37]) 72 178 T
1.6 (OMG MASIF) 90 178 P
1.6 (, OMG TC Document ORBOS/97-10-05,) 141.63 178 P
7.35 (also a) 90 168 P
7.35 (v) 117.92 168 P
7.35 (ailable from http://www) 122.19 168 P
7.35 (.opengroup.or) 223.31 168 P
7.35 (g/~de-) 273.64 168 P
(jan/maf/draft10.) 90 158 T
([38]) 315 714 T
0.84 (P) 333 714 P
0.84 (ainda) 337.87 714 P
0.84 (v) 357.18 714 P
0.84 (eine, Y) 361.55 714 P
0.84 (., Milojicic, D., \322Process vs. T) 387.22 714 P
0.84 (ask Migra-) 499.92 714 P
(tion\323, Proc. of 29th HICSS, Jan. 3-6, 1996, pp 636-645.) 333 704 T
([39]) 315 692 T
1.34 (Peine, H., and Stolpmann, T) 333 692 P
1.34 (., \322The Architecture of the) 439.68 692 P
0.99 (Ara Platform for Mobile Agents\323,) 333 682 P
2 F
0.99 (Pr) 462.43 682 P
0.99 (oc of the F) 471.03 682 P
0.99 (ir) 512.34 682 P
0.99 (st Intl) 518.26 682 P
1.93 (W) 333 672 P
1.93 (orkshop on Mobile Ag) 339.67 672 P
1.93 (ents MA) 425.62 672 P
1.93 (\32597,) 456.96 672 P
0 F
1.93 (April 7-8. LNCS) 475.39 672 P
(1219, Springer V) 333 662 T
(erlag.) 394.24 662 T
([40]) 315 650 T
1.36 (Ro) 333 650 P
1.36 (we, L. and Birman, K. \050March 1982\051. A Local Net-) 343.28 650 P
3.45 (w) 333 640 P
3.45 (ork Based on the UNIX Operating System.) 339.41 640 P
2 F
3.45 (IEEE) 520.51 640 P
3.8 (T) 333 630 P
3.8 (r) 337.51 630 P
3.8 (ansactions on Softwar) 340.88 630 P
3.8 (e Engineering) 428.16 630 P
0 F
3.8 (, SE-8\0502\051:137\320) 482.7 630 P
(146.) 333 620 T
([41]) 315 608 T
1.85 (Sander) 333 608 P
1.85 (, T) 357.63 608 P
1.85 (., Tschudin, C., \322T) 368.81 608 P
1.85 (o) 440.63 608 P
1.85 (w) 444.91 608 P
1.85 (ards Mobile Cryptogra-) 451.32 608 P
0.45 (ph) 333 598 P
0.45 (y\323, to appear at the IEEE Symposium on Security and) 341.95 598 P
(Pri) 333 588 T
(v) 343.28 588 T
(ac) 347.55 588 T
(y) 355.41 588 T
(, spring 1998.) 359.33 588 T
([42]) 315 576 T
1.99 (Sansom, R., \322Building a Secure Distrib) 333 576 P
1.99 (uted Computer) 484.26 576 P
1.23 (System, \322CMU-CS-88-141, PhD Thesis, Carne) 333 566 P
1.23 (gie Mel-) 508.03 566 P
(lon Uni) 333 556 T
(v) 360.03 556 T
(ersity) 364.39 556 T
(, May 1988.) 383.8 556 T
([43]) 315 544 T
1.37 (Sebes, J., \322Ov) 333 544 P
1.37 (ervie) 386.35 544 P
1.37 (w of the Architecture of Distrib) 404.11 544 P
1.37 (uted) 524.5 544 P
2.93 (T) 333 534 P
2.93 (rusted Mach\323, Proceedings of the Second USENIX) 338.18 534 P
(Mach Symposium, No) 333 524 T
(v) 414.12 524 T
(ember 1991, pp 251-262.) 418.48 524 T
([44]) 315 512 T
2.07 (Shapiro, M., Gautron, P) 333 512 P
2.07 (., and Mosseri, L.,) 424.45 512 P
2.07 (\323Persistence) 495.51 512 P
2.75 (and Migration for C++ Objects\323,) 333 502 P
2 F
2.75 (Pr) 467.41 502 P
2.75 (oceedings of the) 476 502 P
1.69 (ECOOP 1989\320Eur) 333 492 P
1.69 (opean Confer) 402.53 492 P
1.69 (ence on Object-Orient-) 453.14 492 P
(ed Pr) 333 482 T
(o) 352.34 482 T
(gr) 356.75 482 T
(amming) 364.62 482 T
(,) 393.52 482 T
0 F
(July 1989.) 398.02 482 T
([45]) 315 470 T
0.88 (Sirer E., Sa) 333 470 P
0.88 (v) 375.58 470 P
0.88 (age S., P) 379.86 470 P
0.88 (ardyak P) 412.99 470 P
0.88 (., DeF) 444.61 470 P
0.88 (ouw G., Alapat M.,) 467.61 470 P
0.32 (Bershad B., \322Writing an Operating System Using Modu-) 333 460 P
1.43 (la-3\323 W) 333 450 P
1.43 (orkshop on Compiler Support for System Soft-) 362.44 450 P
(w) 333 440 T
(are, February 1996.) 339.41 440 T
([46]) 315 428 T
3.18 (Sw) 333 428 P
3.18 (anson, M., Stoller) 344.41 428 P
3.18 (, L., Critchlo) 414.67 428 P
3.18 (w) 467.05 428 P
3.18 (, T) 472.96 428 P
3.18 (., K) 485.48 428 P
3.18 (essler) 501.68 428 P
3.18 (, R.,) 521.82 428 P
0.58 (\322The Design of the Schizophrenic W) 333 418 P
0.58 (orkstation System\323,) 468.42 418 P
2.54 (Proceedings of the third USENIX Mach Symposium,) 333 408 P
(Santa Fe, Ne) 333 398 T
(w Me) 379.02 398 T
(xico, April 1993, pp 291-306.) 399.63 398 T
([47]) 315 386 T
0.71 (T) 333 386 P
0.71 (ennenhouse, D.L., Smith J. M., Sincoskie, W) 337.87 386 P
0.71 (., W) 503.78 386 P
0.71 (ether-) 519.01 386 P
0.11 (all, D. J., Minde, G. J., \322) 333 376 P
0.11 (A Surv) 420.94 376 P
0.11 (e) 446.67 376 P
0.11 (y of Acti) 450.53 376 P
0.11 (v) 482.52 376 P
0.11 (e Netw) 486.88 376 P
0.11 (ork Re-) 512.65 376 P
1.08 (search\323, IEEE Communications Mag) 333 366 P
1.08 (azine. V) 469.68 366 P
1.08 (ol. 35, No.) 499.59 366 P
(1, pp.80-86. January 1997.) 333 356 T
([48]) 315 344 T
1.99 (T) 333 344 P
1.99 (omlinson, C., Kim, W) 337.78 344 P
1.99 (., Sche) 422.68 344 P
1.99 (v) 448.69 344 P
1.99 (el, M., Singh, V) 453.05 344 P
1.99 (. W) 515.62 344 P
1.99 (ill,) 530.24 344 P
1.08 (B., Agha, G., \322Rosette: An Object Oriented Concurrent) 333 334 P
2.56 (System Architecture\323, Sigplan Notices, v) 333 324 P
2.56 (ol 24, no 4,) 491.56 324 P
(1989, pp 91-93.) 333 314 T
([49]) 315 302 T
4.61 (V) 333 302 P
4.61 (igna, G., editor) 338.96 302 P
4.61 (. Mobile Agents Security) 401.92 302 P
4.61 (. LNCS.) 505.64 302 P
(Springer) 333 292 T
(-V) 363.82 292 T
(erlag, 1998. T) 372.31 292 T
(o appear) 422.08 292 T
(.) 452.32 292 T
([50]) 315 280 T
0.89 (W) 333 280 P
0.89 (etherall D, Guttag J, T) 340.78 280 P
0.89 (ennenhouse D,) 424.2 280 P
0.89 (\323ANTS: A T) 477.95 280 P
0.89 (ool-) 525.5 280 P
2.2 (kit for Building and Dynamically Deplo) 333 270 P
2.2 (ying Netw) 488.15 270 P
2.2 (ork) 528 270 P
2.07 (Protocols\323 IEEE OPEN) 333 260 P
2.07 (ARCH\32598, San Francisco, CA,) 422.31 260 P
(April 1998.) 333 250 T
([51]) 315 238 T
2.05 (White, J., \322T) 333 238 P
2.05 (elescript T) 382.71 238 P
2.05 (echnology: Mobile Agents\323, in) 422.36 238 P
3.87 (Bradsha) 333 228 P
3.87 (w) 362.36 228 P
3.87 (, J., \322Softw) 368.27 228 P
3.87 (are Agents\323, AAAI/MIT Press,) 416.17 228 P
(1996.) 333 218 T
([52]) 315 206 T
0.81 (W) 333 206 P
0.81 (ong, D., et al., \322Concordia: An Infrastructure for Col-) 340.78 206 P
1.89 (laborating Mobile Agents\323) 333 196 P
2 F
1.89 (Pr) 437.42 196 P
1.89 (oc. of W) 446.02 196 P
1.89 (orkshop on Mo-) 478.72 196 P
2.6 (bile Ag) 333 186 P
2.6 (ents MA) 361.26 186 P
2.6 (\32597) 393.27 186 P
0 F
2.6 (, Berlin, April 7-8th. LNCS 1219,) 405.26 186 P
(Springer V) 333 176 T
(erlag.) 371.74 176 T
([53]) 315 164 T
1.13 (Zhang L., Jacobson V) 333 164 P
1.13 (., Flo) 414.48 164 P
1.13 (yd S., \322) 434.28 164 P
1.13 (Adapti) 462.83 164 P
1.13 (v) 487.11 164 P
1.13 (e W) 491.47 164 P
1.13 (eb Cach-) 506.63 164 P
(ing\323. http://irl.cs.ucla.edu/A) 333 154 T
(WC/.) 432.94 154 T
0 1 1 0 1 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "14" 14
%%Page: "15" 15
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
[ 0.5 0.5 0 0.5 0 0 0.5]
[ 0.5 0 0 0.5 0 0.5 0.5]
[ 0.5 0 0.5 0.5 0 0.5 0]
[ 0 0.5 0 0.5 0.5 0 0.5]
[ 0 0.5 0.5 0.5 0.5 0 0]
[ 0 0 0.5 0.5 0.5 0.5 0]
[ 0 0 0 0.5 0.5 0.5 0.5]
[ 0 0 0 0.25 0.75 0.75 0.75]
 15 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 11 Q
0 X
0 0 0 1 0 0 0 K
(15) 315 46.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 12 Q
(Appendix) 71.5 712 T
( Summary of Presented Mobile Object Systems) 127.52 712 T
1 8 Q
0.42 0.08 (General) 82.11 688.67 B
0.08 (Description) 75.95 678.67 S
0.08 (Actors) 138.02 683.67 S
0.08 (Mach) 200.54 688.67 S
0.08 (T) 222.49 688.67 S
0.08 (ask) 227.17 688.67 S
0.08 (Migration) 202.06 678.67 S
0.42 0.08 (MASIF Standard) 269.26 683.67 B
0.08 (MO) 366.63 683.67 S
0.08 (A) 380.24 683.67 S
0.08 (Con) 427.89 683.67 S
0.08 (v) 442.03 683.67 S
0.08 (ersant) 446.03 683.67 S
0.18 0.08 (Agent Ensembles) 484.69 683.67 B
0 F
0.08 (T) 88.11 662.67 S
0.08 (ype) 92.44 662.67 S
0.42 0.08 (middle) 130.44 662.67 B
0.42 0.08 (w) 152.95 662.67 B
0.42 0.08 (are) 158.72 662.67 B
0.42 0.08 (operating system) 191.68 666.67 B
0.08 (\050microk) 197.28 658.67 S
0.08 (ernel\051) 223.09 658.67 S
0.08 (speci\336cation) 279.18 666.67 S
0.08 (\050standard\051) 283.3 658.67 S
0.42 0.08 (mobile agent) 354.9 666.67 B
0.08 (system) 365.01 658.67 S
0.42 0.08 (acti) 422.04 662.67 B
0.42 0.08 (v) 433.71 662.67 B
0.42 0.08 (e netw) 437.67 662.67 B
0.42 0.08 (orks) 459.59 662.67 B
0.08 (middle) 495.8 662.67 S
0.08 (w) 518.3 662.67 S
0.08 (are) 524.08 662.67 S
0.08 (Goals) 86.64 634.67 S
0.42 0.08 (modeling and) 127.01 642.67 B
0.42 0.08 (b) 123.38 634.67 B
0.42 0.08 (uilding distrib) 127.3 634.67 B
0.42 0.08 (.) 173.71 634.67 B
0.08 (applications) 129.78 626.67 S
0.42 0.08 (load distrib) 191.57 642.67 B
0.42 0.08 (ution,) 229.01 642.67 B
-0.14 0.08 (transparent migration at) 180.16 634.67 B
0.42 0.08 (the) 192.22 626.67 B
4 7 Q
0.35 (m) 204.73 626.67 P
0 8 Q
0.42 0.08 (k) 208.76 626.67 B
0.42 0.08 (ernel le) 212.76 626.67 B
0.42 0.08 (v) 237.39 626.67 B
0.42 0.08 (el) 241.35 626.67 B
-0.28 0.08 (interoperability among) 262.28 638.67 B
0.42 0.08 (mobile agent systems) 264.26 630.67 B
0.42 0.08 (persist. comm. chn,) 343.97 642.67 B
0.42 0.08 (resource manag.) 349.35 634.67 B
0.42 0.08 (component model) 346.78 626.67 B
0.42 0.08 (denial of service,) 420.33 646.67 B
0.28 0.08 (dynamic protocols,) 416.27 638.67 B
-0.27 0.08 (impro) 415.18 630.67 B
-0.27 0.08 (v) 434.57 630.67 B
-0.27 0.08 (ed assurance) 438.53 630.67 B
0.42 0.08 (& QoS) 436.23 622.67 B
0.42 0.08 (lar) 496.33 642.67 B
0.42 0.08 (ge scale,) 504.87 642.67 B
0.09 0.08 (pre) 484.51 634.67 B
0.09 0.08 (v) 494.77 634.67 B
0.09 0.08 (enting chaotic) 498.73 634.67 B
0.08 (beha) 500.7 626.67 S
0.08 (vior) 515.97 626.67 S
0.08 (Status) 86.15 610.67 S
0.08 (acti) 139.96 610.67 S
0.08 (v) 151.63 610.67 S
0.08 (e) 155.59 610.67 S
0.42 0.08 (frozen \050Mach still li) 179.74 610.67 B
0.42 0.08 (v) 246.24 610.67 B
0.42 0.08 (es\051) 250.2 610.67 B
0.08 (acti) 290.29 610.67 S
0.08 (v) 301.96 610.67 S
0.08 (e) 305.92 610.67 S
0.08 (acti) 366.73 610.67 S
0.08 (v) 378.4 610.67 S
0.08 (e) 382.36 610.67 S
0.08 (acti) 438.23 610.67 S
0.08 (v) 449.9 610.67 S
0.08 (e) 453.86 610.67 S
0.08 (proposal) 500.84 610.67 S
0.42 0.08 (T) 76.93 598.67 B
0.42 0.08 (ime frame) 81.62 598.67 B
0.08 (1985-) 140.05 598.67 S
0.08 (1991-1994) 202.06 598.67 S
0.08 (1995-) 290.39 598.67 S
0.08 (1996-) 366.83 598.67 S
0.08 (1997-) 438.33 598.67 S
0.08 (1997-) 505.41 598.67 S
0.42 0.08 (Who used it) 75.98 578.67 B
0.42 0.08 ( MCC, MIT) 128.84 586.67 B
0.42 0.08 (,) 168.25 586.67 B
0.42 0.08 (Uni) 127.8 578.67 B
0.42 0.08 (v) 139.84 578.67 B
0.42 0.08 (ersity of) 143.8 578.67 B
0.42 0.08 (P) 133.34 570.67 B
0.42 0.08 (aris, etc.) 137.74 570.67 B
0.42 0.08 (Uni) 195.44 586.67 B
0.42 0.08 (v) 207.48 586.67 B
0.42 0.08 (ersities of) 211.44 586.67 B
0.42 0.08 (Kaiserslautern, Utah) 185.86 578.67 B
0.42 0.08 (and Lo) 184.9 570.67 B
0.42 0.08 (v) 208.12 570.67 B
0.42 0.08 (ain-la-Neuv) 212 570.67 B
0.42 0.08 (e) 250.97 570.67 B
0.42 0.08 (Grasshopper [18]\050no) 261.54 586.67 B
0.42 0.08 (w\051) 329.7 586.67 B
0.42 0.08 (Aglets and MO) 271.53 578.67 B
0.42 0.08 (A) 322.45 578.67 B
0.42 0.08 (\050in progress\051) 278.86 570.67 B
-0.3 0.08 (Cambridge, Grenoble) 340.74 586.67 B
0.15 0.08 (RI, SECOM, INRIA,) 341.38 578.67 B
0.42 0.08 (U. Den) 339.85 570.67 B
0.42 0.08 (v) 363.53 570.67 B
0.42 0.08 (er & Portug) 367.49 570.67 B
0.42 0.08 (al) 406.94 570.67 B
0.08 (N/A) 440.86 578.67 S
0.08 (N/A) 507.93 578.67 S
0.08 (References) 78 558.67 S
0.42 0.08 ([2, 4]) 140.48 558.67 B
0.42 0.08 ([35, 38]) 206.56 558.67 B
0.42 0.08 ([32, 37]) 286.73 558.67 B
0.08 ([34]) 369.54 558.67 S
0.42 0.08 ([9, 12]) 436.71 558.67 B
0.08 ([31]) 508.11 558.67 S
1 10 Q
0.52 0.1 (T) 174.16 541.33 B
0.52 0.1 (able 1 General Inf) 180.01 541.33 B
0.52 0.1 (ormation about Systems Being Compar) 260.62 541.33 B
0.52 0.1 (ed) 434.35 541.33 B
1 8 Q
0.42 0.08 (Resour) 80.31 518.67 B
0.42 0.08 (ce) 105.09 518.67 B
0.08 (Management) 73.49 508.67 S
0.08 (Actors) 141.47 513.67 S
0.08 (Mach) 201.31 518.67 S
0.08 (T) 223.26 518.67 S
0.08 (ask) 227.94 518.67 S
0.08 (Migration) 202.84 508.67 S
0.42 0.08 (MASIF Standard) 260.23 513.67 B
0.08 (MO) 354.32 513.67 S
0.08 (A) 367.93 513.67 S
0.08 (Con) 420.33 513.67 S
0.08 (v) 434.47 513.67 S
0.08 (ersant) 438.47 513.67 S
0.18 0.08 (Agent Ensembles) 481.15 513.67 B
0 F
0.08 (ph) 82.7 488.67 S
0.08 (ysical) 90.82 488.67 S
0.42 0.08 (resources) 80.87 480.67 B
0.42 0.08 (CPU, mem/disk) 126.75 496.67 B
0.42 0.08 (net bandwidth,) 128.5 488.67 B
0.42 0.08 (access rate) 135.18 480.67 B
0.08 (guarantees) 135.54 472.67 S
-0.33 0.08 (lifetime, processing,) 186.93 492.67 B
0.42 0.08 (remote IPC, and) 193.4 484.67 B
0.08 (remote) 197.01 476.67 S
0.08 (paging) 221.79 476.67 S
0.42 0.08 (not addressed) 268.28 488.67 B
0.42 0.08 (\050relies on the OS\051) 261.22 480.67 B
0.08 (lifetime) 351.29 484.67 S
0.42 0.08 (CPU, memory) 405.36 488.67 B
0.42 0.08 (, JVM,) 452.35 488.67 B
0.08 (communication) 414.89 480.67 S
0.42 0.08 (CPU, memory) 486.86 488.67 B
0.42 0.08 (,) 533.86 488.67 B
0.42 0.08 (netw) 488.9 480.67 B
0.42 0.08 (ork, \336les) 504.69 480.67 B
0.08 (logical) 85.17 456.67 S
0.42 0.08 (resources) 80.87 448.67 B
0.42 0.08 (objects, messages) 123.71 452.67 B
0.42 0.08 (communication) 195.12 456.67 B
0.08 (channels) 206.21 448.67 S
0.42 0.08 (future w) 271.51 452.67 B
0.42 0.08 (ork) 299.36 452.67 B
0.42 0.08 (MO) 337.03 460.67 B
0.42 0.08 (A messages,) 349.79 460.67 B
0.42 0.08 (places, channels,) 336.17 452.67 B
0.42 0.08 (agents, etc.) 345.48 444.67 B
-0.05 0.08 (object cache, resource) 403.58 460.67 B
0.01 0.08 (and polic) 403.74 452.67 B
0.01 0.08 (y descriptors) 433.9 452.67 B
0.08 (name) 421.36 444.67 S
0.08 (space) 441.08 444.67 S
0.42 0.08 (agents, cloning,) 485.34 460.67 B
0.42 0.08 (distrib) 491.52 452.67 B
0.42 0.08 (ution,) 512.36 452.67 B
0.42 0.08 (messages, etc.) 487.86 444.67 B
0.08 (object) 86.32 428.67 S
0.42 0.08 (granularity) 78.34 420.67 B
0.42 0.08 (Single objects of) 125.06 432.67 B
0.42 0.08 (encapsulated) 131.9 424.67 B
0.08 (groups) 141.91 416.67 S
0.42 0.08 (single task) 202.88 424.67 B
0.42 0.08 (single agent) 270.98 424.67 B
0.42 0.08 (single agent and) 337 428.67 B
0.42 0.08 (f) 334.52 420.67 B
0.42 0.08 (amilies of agents) 337.18 420.67 B
0.42 0.08 (user) 406.16 424.67 B
0.42 0.08 (-user connection) 419.65 424.67 B
0.42 0.08 (lar) 493.84 432.67 B
0.42 0.08 (ge scale) 502.37 432.67 B
0.42 0.08 (ensembles) 494.38 424.67 B
0.08 (\050>100000\051) 494.12 416.67 S
0.08 (resource) 82.47 400.67 S
0.08 (policies) 83.57 392.67 S
0.42 0.08 (f) 127.35 404.67 B
0.42 0.08 (air scheduling,) 130.01 404.67 B
0.42 0.08 (interlea) 134.97 396.67 B
0.42 0.08 (v) 159.44 396.67 B
0.42 0.08 (ed) 163.4 396.67 B
0.08 (e) 137.25 388.67 S
0.08 (x) 140.76 388.67 S
0.08 (ecution) 144.72 388.67 S
0.42 0.08 (local processing) 193.79 396.67 B
0.08 (N/A) 283.88 396.67 S
0.42 0.08 (suspend agent on) 335.45 400.67 B
0.08 (o) 349.73 392.67 S
0.08 (v) 353.69 392.67 S
0.08 (er\337o) 357.65 392.67 S
0.08 (w) 372.44 392.67 S
-0.09 0.08 (e) 403.95 404.67 B
-0.09 0.08 (xtensible, con\336gured) 407.46 404.67 B
0.42 0.08 (on-the-\337y by system) 406.2 396.67 B
0.08 (manager) 425.43 388.67 S
0.08 (.) 453.09 388.67 S
0.42 0.08 (meta le) 494.4 396.67 B
0.42 0.08 (v) 518.51 396.67 B
0.42 0.08 (el) 522.47 396.67 B
0.08 (resource) 82.47 372.67 S
0.42 0.08 (ne) 77.95 364.67 B
0.42 0.08 (gotiation) 85.55 364.67 B
0.42 0.08 ( resource usage) 127.37 376.67 B
0.42 0.08 (costs, access rate) 124.69 368.67 B
0.08 (guarantees) 135.54 360.67 S
0.42 0.08 ( k) 187.45 368.67 B
0.42 0.08 (ernel port transfer) 193.94 368.67 B
0.08 (N/A) 283.88 368.67 S
0.42 0.08 (asym. ne) 333.74 376.67 B
0.42 0.08 (gotiation,) 363.12 376.67 B
0.42 0.08 (logical resources,) 335.14 368.67 B
0.42 0.08 (arbitrary requirements) 327.31 360.67 B
0.08 (asymmetric) 421.24 368.67 S
0.42 0.08 (resource) 497.54 376.67 B
0.42 0.08 (reserv) 486.15 368.67 B
0.42 0.08 (ation and) 505.97 368.67 B
0.08 (monitoring) 493.22 360.67 S
0.08 (QoS) 89.1 340.67 S
0.42 0.08 (customization of) 125.42 348.67 B
0.42 0.08 (language) 138.28 340.67 B
0.08 (abstractions) 133.45 332.67 S
0.42 0.08 ( N/A) 212.27 340.67 B
0.42 0.08 (part of the transport) 257.76 340.67 B
0.08 (N/A) 357.05 340.67 S
0.42 0.08 (high-con\336dence via) 407.67 348.67 B
0.42 0.08 (end-to-end \337o) 412.56 340.67 B
0.42 0.08 (ws) 458.92 340.67 B
0.08 (\050\322paths\323\051) 425.28 332.67 S
0.08 (Meta-le) 493.84 340.67 S
0.08 (v) 519.08 340.67 S
0.08 (el) 523.04 340.67 S
1 10 Q
0.52 0.1 (T) 147.38 315.33 B
0.52 0.1 (able 2 Comparison of Resour) 153.23 315.33 B
0.52 0.1 (ce Management of Mobile Object Systems) 282.27 315.33 B
1 8 Q
0.08 (Security) 82.7 287.67 S
0.08 (Actors) 145.42 287.67 S
0.08 (Mach) 210.61 292.67 S
0.08 (T) 232.56 292.67 S
0.08 (ask) 237.24 292.67 S
0.08 (Migration) 212.14 282.67 S
0.42 0.08 (MASIF Standard) 278.79 287.67 B
0.08 (MO) 370.72 287.67 S
0.08 (A) 384.34 287.67 S
0.08 (Con) 417.27 287.67 S
0.08 (v) 431.41 287.67 S
0.08 (ersant) 435.41 287.67 S
0.42 0.08 (Agent Ensembles) 468.53 287.67 B
0 F
0.42 0.08 (Object o) 74.99 266.67 B
0.42 0.08 (wner) 103.17 266.67 B
0.08 (autonomous) 137.03 270.67 S
0.42 0.08 (\050meta model\051) 134.86 262.67 B
0.42 0.08 (holder\050s\051 of the task) 196.26 270.67 B
0.42 0.08 (k) 210.41 262.67 B
0.42 0.08 (ernel port\051) 214.41 262.67 B
0.08 (creator) 298.07 266.67 S
0.42 0.08 (creator of the) 358.16 270.67 B
0.42 0.08 (\336rst generation) 355.5 262.67 B
0.08 (creator) 425.86 266.67 S
0.08 (creator) 487.4 266.67 S
0.08 (Authentication) 72.9 246.67 S
0.42 0.08 (name based policies) 123.59 246.67 B
0.42 0.08 (k) 207.22 250.67 B
0.42 0.08 (ernel trusted) 211.22 250.67 B
0.42 0.08 (capabilities) 211.13 242.67 B
0.42 0.08 (one-hop, authenticator) 272.37 250.67 B
0.42 0.08 (part of the name object) 270.82 242.67 B
0.42 0.08 (name based) 361.08 250.67 B
0.08 (\050temporary\051) 360.92 242.67 S
0.42 0.08 (pri) 414.66 250.67 B
0.42 0.08 (v) 423.59 250.67 B
0.42 0.08 (ate/public) 427.47 250.67 B
0.42 0.08 (k) 412.69 242.67 B
0.42 0.08 (e) 416.69 242.67 B
0.42 0.08 (y encryption) 420.2 242.67 B
0.42 0.08 ( pri) 466.31 246.67 B
0.42 0.08 (v) 477.74 246.67 B
0.42 0.08 (ate/public k) 481.62 246.67 B
0.42 0.08 (e) 520.46 246.67 B
0.42 0.08 (ys) 523.97 246.67 B
0.08 (Authorization) 74.5 222.67 S
0.42 0.08 (name based policies) 123.59 222.67 B
0.42 0.08 (same trust domain) 199.4 230.67 B
0.42 0.08 (o) 196.72 222.67 B
0.42 0.08 (wner of capab) 200.6 222.67 B
0.42 0.08 (. has) 247.46 222.67 B
0.42 0.08 (all rights) 215.11 214.67 B
0.42 0.08 (credentials transferred) 272.67 226.67 B
0.42 0.08 (during migration) 281.61 218.67 B
0.42 0.08 (name based) 361.08 226.67 B
0.08 (\050temporary\051) 360.92 218.67 S
-0.13 0.08 (Ja) 412.07 226.67 B
-0.13 0.08 (v) 418.74 226.67 B
-0.13 0.08 (a references) 422.62 226.67 B
0.08 (\050capabilities\051) 415.8 218.67 S
0.08 (custom) 486.98 222.67 S
0.08 (Dele) 79.37 198.67 S
0.08 (g) 94.67 198.67 S
0.08 (ation) 98.71 198.67 S
0.42 0.08 (spa) 129.25 198.67 B
0.42 0.08 (wn ne) 140.03 198.67 B
0.42 0.08 (w actor) 159.98 198.67 B
0.42 0.08 (passing capabilities) 197.6 198.67 B
0.08 (non-composite) 285.16 202.67 S
0.42 0.08 (\050for the time being\051) 276.81 194.67 B
0.42 0.08 (can spa) 357.74 202.67 B
0.42 0.08 (wn, &) 382.36 202.67 B
0.08 (\322fork\323) 370 194.67 S
0.08 (none) 429.31 198.67 S
0.08 (composite) 481.98 198.67 S
0.08 (T) 81.47 178.67 S
0.08 (ransport) 86.15 178.67 S
0.42 0.08 (asynchronous) 134.51 182.67 B
0.42 0.08 (message passing) 129.62 174.67 B
0.42 0.08 (in-k) 198.57 182.67 B
0.42 0.08 (ernel protocols) 211.7 182.67 B
0.42 0.08 (NORMA) 196.93 174.67 B
0.42 0.08 (IPC/DIPC) 229.19 174.67 B
0.42 0.08 (CORB) 286.43 178.67 B
0.42 0.08 (A IIOP) 308.25 178.67 B
0.08 (sock) 368.44 178.67 S
0.08 (ets) 383.35 178.67 S
0.08 (ANEP) 426.64 178.67 S
0.42 0.08 (RMI, IIOP) 480.88 178.67 B
0.08 (Naming) 84.11 158.67 S
0.08 (strings/patterns) 131.9 158.67 S
0.42 0.08 (capability based) 203.1 158.67 B
0.42 0.08 (string, authenticator) 275.53 162.67 B
0.42 0.08 (,) 341.3 162.67 B
0.42 0.08 (agent sys type) 285.81 154.67 B
0.08 (string) 371.11 158.67 S
0.42 0.08 (SNMP MIB) 417.27 158.67 B
0.42 0.08 (custom, LD) 474.25 158.67 B
0.42 0.08 (AP) 512.92 158.67 B
0.08 (Management) 75.95 134.67 S
0.42 0.08 (meta-le) 125.41 134.67 B
0.42 0.08 (v) 149.76 134.67 B
0.42 0.08 (el services) 153.72 134.67 B
0.42 0.08 (transparent e) 194.74 142.67 B
0.42 0.08 (xtension) 237.17 142.67 B
0.42 0.08 (of the k) 202.64 134.67 B
0.42 0.08 (ernel i/f:) 228.47 134.67 B
0.42 0.08 (suspend, resume, kill) 194.8 126.67 B
0.42 0.08 (kill, suspend, resume) 274.42 134.67 B
0.42 0.08 (\050group-based\051) 357.5 142.67 B
0.42 0.08 (kill, suspend,) 358.47 134.67 B
0.42 0.08 (resume, deb) 356.48 126.67 B
0.42 0.08 (ug) 396.27 126.67 B
0.42 0.08 (system) 425.89 138.67 B
0.08 (administrator) 415.39 130.67 S
0.42 0.08 (component based) 470.09 142.67 B
0.42 0.08 (con\336guration and) 469.78 134.67 B
0.08 (management) 477.94 126.67 S
0.08 (Auditing) 82.69 110.67 S
0.42 0.08 (meta-le) 125.41 110.67 B
0.42 0.08 (v) 149.76 110.67 B
0.42 0.08 (el services) 153.72 110.67 B
0.42 0.08 (interposition of) 204.43 114.67 B
0.42 0.08 (communication ports) 194.97 106.67 B
0.08 (N/A) 302.45 110.67 S
0.08 (logging) 367.95 110.67 S
0.08 (logging) 424.74 110.67 S
0.42 0.08 (meta-le) 467.2 110.67 B
0.42 0.08 (v) 491.56 110.67 B
0.42 0.08 (el services) 495.52 110.67 B
1 10 Q
0.52 0.1 (T) 155.58 89.34 B
0.52 0.1 (able 3 Comparison of Security Aspects of Mobile Object Systems) 161.43 89.34 B
71.5 695.75 71.5 554.25 2 L
V
0.5 H
0 Z
N
119.84 696.25 119.84 553.75 2 L
V
N
178.34 696.25 178.34 553.75 2 L
V
0.25 H
N
260.17 696.25 260.17 553.75 2 L
V
N
338.67 696.25 338.67 553.75 2 L
V
N
413.06 696.25 413.06 553.75 2 L
V
N
481.67 696.25 481.67 553.75 2 L
V
N
547.21 695.75 547.21 554.25 2 L
V
0.5 H
N
71.25 696 547.46 696 2 L
V
N
71.25 674 547.46 674 2 L
V
N
71.25 654 547.46 654 2 L
V
0.25 H
N
71.25 618 547.46 618 2 L
V
N
71.25 606 547.46 606 2 L
V
N
71.25 594 547.46 594 2 L
V
N
71.25 566 547.46 566 2 L
V
N
71.25 554 547.46 554 2 L
V
0.5 H
N
71.5 525.75 71.5 328.25 2 L
V
N
120.17 526.25 120.17 327.75 2 L
V
N
184.92 526.25 184.92 327.75 2 L
V
0.25 H
N
255.14 526.25 255.14 327.75 2 L
V
N
325.64 526.25 325.64 327.75 2 L
V
N
401.47 526.25 401.47 327.75 2 L
V
N
478.14 526.25 478.14 327.75 2 L
V
N
543.67 525.75 543.67 328.25 2 L
V
0.5 H
N
71.25 526 543.92 526 2 L
V
N
71.25 504 543.92 504 2 L
V
N
71.25 468 543.92 468 2 L
V
0.25 H
N
71.25 440 543.92 440 2 L
V
N
71.25 412 543.92 412 2 L
V
N
71.25 384 543.92 384 2 L
V
N
71.25 356 543.92 356 2 L
V
N
71.25 328 543.92 328 2 L
V
0.5 H
N
71.5 299.75 71.5 102.25 2 L
V
N
121.98 300.25 121.98 101.75 2 L
V
N
190.99 300.25 190.99 101.75 2 L
V
0.25 H
N
267.66 300.25 267.66 101.75 2 L
V
N
350.24 300.25 350.24 101.75 2 L
V
N
409.67 300.25 409.67 101.75 2 L
V
N
463.81 300.25 463.81 101.75 2 L
V
N
532.75 299.75 532.75 102.25 2 L
V
0.5 H
N
71.25 300 533 300 2 L
V
N
71.25 278 533 278 2 L
V
N
71.25 258 533 258 2 L
V
0.25 H
N
71.25 238 533 238 2 L
V
N
71.25 210 533 210 2 L
V
N
71.25 190 533 190 2 L
V
N
71.25 170 533 170 2 L
V
N
71.25 150 533 150 2 L
V
N
71.25 122 533 122 2 L
V
N
71.25 102 533 102 2 L
V
0.5 H
N
0 1 1 0 1 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "15" 15
%%Trailer
%%BoundingBox: 0 0 612 792
%%PageOrder: Ascend
%%Pages: 15
%%DocumentFonts: Times-Roman
%%+ Times-Bold
%%+ Times-Italic
%%+ Helvetica
%%+ Symbol
%%+ Times-BoldItalic
%%+ Helvetica-Narrow
%%+ Helvetica-Narrow-Bold
%%EOF
